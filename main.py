###############################
# Install First

# """"cmd""""

#1
# install: pip install pygame

#2
# install: pip install --upgrade arabic-reshaper

#3
# install: pip install python-bidi

###############################
import pygame, sys

import random

import arabic_reshaper
from bidi.algorithm import get_display

# Intialize the pygame
mainClock = pygame.time.Clock()
from pygame.locals import *

pygame.init()

# create the screen
screen = pygame.display.set_mode((300,500))

# tit1le and Icon
pygame.display.set_caption("Game")
icon = pygame.image.load("img/icon.png")
pygame.display.set_icon(icon)

# Color
W = (255,255,255)
B = (0,0,0)
#MAIN - BG:BO 
BG = (52,73,94)
BO = (23, 165, 137)
#FOOD - BG:BO 
BG1 = (217, 30, 54)
BO1 = (116, 0, 0)
#GAME - BG:BO 
BG2 = (52, 138, 167)
BO2 = (8, 61, 119)
#CLOTHES - BG:BO 
BG3 = (255, 161, 10)
BO3 = (130, 50, 0)
#ANIME - BG:BO 
BG4 = (255,255,255)
BO4 = (51, 53, 51)
#SERIES - BG:BO 
BG5 = (105,48,109)
BO5 = (36, 0, 70)
#I - BG:BO 
BG6 = (43, 168, 74)
BO6 = (62, 137, 20)

# Font
font = pygame.font.SysFont('Times New Roman',23)

# Key
keydict = {"space": pygame.K_SPACE, "esc": pygame.K_ESCAPE, "up": pygame.K_UP, "down": pygame.K_DOWN,
           "left": pygame.K_LEFT, "right": pygame.K_RIGHT, "return": pygame.K_RETURN,
           "a": pygame.K_a,
           "b": pygame.K_b,
           "c": pygame.K_c,
           "d": pygame.K_d,
           "e": pygame.K_e,
           "f": pygame.K_f,
           "g": pygame.K_g,
           "h": pygame.K_h,
           "i": pygame.K_i,
           "j": pygame.K_j,
           "k": pygame.K_k,
           "l": pygame.K_l,
           "m": pygame.K_m,
           "n": pygame.K_n,
           "o": pygame.K_o,
           "p": pygame.K_p,
           "q": pygame.K_q,
           "r": pygame.K_r,
           "s": pygame.K_s,
           "t": pygame.K_t,
           "u": pygame.K_u,
           "v": pygame.K_v,
           "w": pygame.K_w,
           "x": pygame.K_x,
           "y": pygame.K_y,
           "z": pygame.K_z,
           "1": pygame.K_1,
           "2": pygame.K_2,
           "3": pygame.K_3,
           "4": pygame.K_4,
           "5": pygame.K_5,
           "6": pygame.K_6,
           "7": pygame.K_7,
           "8": pygame.K_8,
           "9": pygame.K_9,
           "0": pygame.K_0}

# Logo
logoImg = pygame.image.load("img/logo.png")
logoX = 87
logoY = 40

def logo():
    screen.blit(logoImg,(logoX,logoY))


def massage_to_screen(msg,color,x,y,size):
    font = pygame.font.SysFont('Times New Roman',size, bold=True)
    text = font.render(msg, True, color)
    screen.blit(text, [x,y])

# Image

def photo(img, x, y):
    photoImg = pygame.image.load(img)
    screen.blit(photoImg,(x, y))
########################################################################

# Word
########################################################################
# Food Word
reshaped_text = arabic_reshaper.reshape(u'شاورما')
bidi_text = get_display(reshaped_text)
f1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'برجر')
bidi_text = get_display(reshaped_text)
f2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بيتزا')
bidi_text = get_display(reshaped_text)
f3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مكرونة')
bidi_text = get_display(reshaped_text)
f4 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فلافل')
bidi_text = get_display(reshaped_text)
f5 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تبولة')
bidi_text = get_display(reshaped_text)
f6 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سمك')
bidi_text = get_display(reshaped_text)
f7 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حمص')
bidi_text = get_display(reshaped_text)
f8 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سلطة فواكه')
bidi_text = get_display(reshaped_text)
f9 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سلطة خضار')
bidi_text = get_display(reshaped_text)
f10 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فول')
bidi_text = get_display(reshaped_text)
f11 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'عريكة')
bidi_text = get_display(reshaped_text)
f12 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ملوخية')
bidi_text = get_display(reshaped_text)
f13 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'رز')
bidi_text = get_display(reshaped_text)
f14 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أندومي')
bidi_text = get_display(reshaped_text)
f15 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سوشي')
bidi_text = get_display(reshaped_text)
f16 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'خبز')
bidi_text = get_display(reshaped_text)
f17 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مناقيش')
bidi_text = get_display(reshaped_text)
f18 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'معجنات')
bidi_text = get_display(reshaped_text)
f19 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سمبوسة')
bidi_text = get_display(reshaped_text)
f20 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كبدة')
bidi_text = get_display(reshaped_text)
f21 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قلابة')
bidi_text = get_display(reshaped_text)
f22 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تميس')
bidi_text = get_display(reshaped_text)
f23 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مطبق')
bidi_text = get_display(reshaped_text)
f24 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'معصوب')
bidi_text = get_display(reshaped_text)
f25 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'شكشوكة')
bidi_text = get_display(reshaped_text)
f26 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بيض')
bidi_text = get_display(reshaped_text)
f27 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فطيرة')
bidi_text = get_display(reshaped_text)
f28 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بطاطس')
bidi_text = get_display(reshaped_text)
f29 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مشروبات غازية')
bidi_text = get_display(reshaped_text)
f30 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'عصير')
bidi_text = get_display(reshaped_text)
f31 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دجاج')
bidi_text = get_display(reshaped_text)
f32 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'لحم')
bidi_text = get_display(reshaped_text)
f33 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حبار')
bidi_text = get_display(reshaped_text)
f34 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'محار')
bidi_text = get_display(reshaped_text)
f35 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أخطبوط')
bidi_text = get_display(reshaped_text)
f36 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ستيك')
bidi_text = get_display(reshaped_text)
f37 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'روبيان')
bidi_text = get_display(reshaped_text)
f38 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جمبري')
bidi_text = get_display(reshaped_text)
f39 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سلمون')
bidi_text = get_display(reshaped_text)
f40 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تونة')
bidi_text = get_display(reshaped_text)
f41 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'شوربة')
bidi_text = get_display(reshaped_text)
f42 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'لوبستر')
bidi_text = get_display(reshaped_text)
f43 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سردين')
bidi_text = get_display(reshaped_text)
f44 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سلطعون')
bidi_text = get_display(reshaped_text)
f45 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فاهيتا')
bidi_text = get_display(reshaped_text)
f46 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دونات')
bidi_text = get_display(reshaped_text)
f47 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تاكو')
bidi_text = get_display(reshaped_text)
f48 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هوت دوق')
bidi_text = get_display(reshaped_text)
f49 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نودلز')
bidi_text = get_display(reshaped_text)
f50 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حلقات البصل')
bidi_text = get_display(reshaped_text)
f51 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'وافل')
bidi_text = get_display(reshaped_text)
f52 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كبة')
bidi_text = get_display(reshaped_text)
f53 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نقت')
bidi_text = get_display(reshaped_text)
f54 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أصابع موزاريلا')
bidi_text = get_display(reshaped_text)
f55 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ورق عنب')
bidi_text = get_display(reshaped_text)
f56 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كنافة')
bidi_text = get_display(reshaped_text)
f57 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بسبوسة')
bidi_text = get_display(reshaped_text)
f58 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'شيز كيك')
bidi_text = get_display(reshaped_text)
f59 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كيكة')
bidi_text = get_display(reshaped_text)
f60 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'لقيمات')
bidi_text = get_display(reshaped_text)
f61 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أيس كريم')
bidi_text = get_display(reshaped_text)
f62 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أوريو')
bidi_text = get_display(reshaped_text)
f63 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كراميل')
bidi_text = get_display(reshaped_text)
f64 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جيلي')
bidi_text = get_display(reshaped_text)
f65 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قمح')
bidi_text = get_display(reshaped_text)
f66 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تيراميسو')
bidi_text = get_display(reshaped_text)
f67 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ملفوف')
bidi_text = get_display(reshaped_text)
f68 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سباغيتي')
bidi_text = get_display(reshaped_text)
f69 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فوتوشيني')
bidi_text = get_display(reshaped_text)
f70 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'لازانيا')
bidi_text = get_display(reshaped_text)
f71 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كرواسون')
bidi_text = get_display(reshaped_text)
f72 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قهوة')
bidi_text = get_display(reshaped_text)
f73 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'شوكولاتة')
bidi_text = get_display(reshaped_text)
f74 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كباب')
bidi_text = get_display(reshaped_text)
f75 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'شيش طاووق')
bidi_text = get_display(reshaped_text)
f76 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'خضروات')
bidi_text = get_display(reshaped_text)
f77 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فواكه')
bidi_text = get_display(reshaped_text)
f78 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بان كيك')
bidi_text = get_display(reshaped_text)
f79 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كريب')
bidi_text = get_display(reshaped_text)
f80 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مخلل')
bidi_text = get_display(reshaped_text)
f81 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'شبس')
bidi_text = get_display(reshaped_text)
f82 = bidi_text

food_words = [f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13,f14,f15,f16,f17,f18,f19,f20,f21,f22,f23,f24,f25,f26,f27,f28,f29,f30,f31,f32,f33,f34,f35,f36,f37,f38,f39,f40,f41,f42,f43,f44,f45,f46,f47,f48,f49,f50,f51,f52,f53,f54,f55,f56,f57,f58,f59,f60,f61,f62,f63,f64,f65,f66,f67,f68,f69,f70,f71,f72,f73,f74,f75,f76,f77,f78,f79,f80,f81,f82]
hide_food = [f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13,f14,f15,f16,f17,f18,f19,f20,f21,f22,f23,f24,f25,f26,f27,f28,f29,f30,f31,f32,f33,f34,f35,f36,f37,f38,f39,f40,f41,f42,f43,f44,f45,f46,f47,f48,f49,f50,f51,f52,f53,f54,f55,f56,f57,f58,f59,f60,f61,f62,f63,f64,f65,f66,f67,f68,f69,f70,f71,f72,f73,f74,f75,f76,f77,f78,f79,f80,f81,f82]

# Game Word
reshaped_text = arabic_reshaper.reshape(u'تيكن')
bidi_text = get_display(reshaped_text)
g1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دارك سولز')
bidi_text = get_display(reshaped_text)
g2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بلدبورن')
bidi_text = get_display(reshaped_text)
g3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أبيكس')
bidi_text = get_display(reshaped_text)
g4 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فيفا')
bidi_text = get_display(reshaped_text)
g5 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فورتنايت')
bidi_text = get_display(reshaped_text)
g6 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كراش')
bidi_text = get_display(reshaped_text)
g7 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سونيك')
bidi_text = get_display(reshaped_text)
g8 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سوبر ماريو')
bidi_text = get_display(reshaped_text)
g9 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ببجي')
bidi_text = get_display(reshaped_text)
g10 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ماين كرافت')
bidi_text = get_display(reshaped_text)
g11 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'زيلدا')
bidi_text = get_display(reshaped_text)
g12 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أوفرواتش')
bidi_text = get_display(reshaped_text)
g13 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ريزدنت إيفل')
bidi_text = get_display(reshaped_text)
g14 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كود')
bidi_text = get_display(reshaped_text)
g15 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بيس')
bidi_text = get_display(reshaped_text)
g16 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كينغدوم هارتس')
bidi_text = get_display(reshaped_text)
g17 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ستريت فايتر')
bidi_text = get_display(reshaped_text)
g18 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مونستر هنتر')
bidi_text = get_display(reshaped_text)
g19 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نيد فور سبيد')
bidi_text = get_display(reshaped_text)
g20 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ذا ويتشر')
bidi_text = get_display(reshaped_text)
g21 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قراند')
bidi_text = get_display(reshaped_text)
g22 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أيام مضت')
bidi_text = get_display(reshaped_text)
g23 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'إله الحرب')
bidi_text = get_display(reshaped_text)
g24 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ريد ديد 2')
bidi_text = get_display(reshaped_text)
g25 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فاينل فانتسي')
bidi_text = get_display(reshaped_text)
g26 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مترو')
bidi_text = get_display(reshaped_text)
g27 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دوم')
bidi_text = get_display(reshaped_text)
g28 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هورايزن')
bidi_text = get_display(reshaped_text)
g29 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ديث ستراندنغ')
bidi_text = get_display(reshaped_text)
g30 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بيرسونا 5')
bidi_text = get_display(reshaped_text)
g31 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سبايدر مان')
bidi_text = get_display(reshaped_text)
g32 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'واتش دوقز')
bidi_text = get_display(reshaped_text)
g33 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هلو نيبر')
bidi_text = get_display(reshaped_text)
g34 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بيوند')
bidi_text = get_display(reshaped_text)
g35 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'انشارتد')
bidi_text = get_display(reshaped_text)
g36 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'داينق لايت')
bidi_text = get_display(reshaped_text)
g37 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ذا دفجن')
bidi_text = get_display(reshaped_text)
g38 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أرك')
bidi_text = get_display(reshaped_text)
g39 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فار كراي')
bidi_text = get_display(reshaped_text)
g40 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ديستني')
bidi_text = get_display(reshaped_text)
g41 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'باتمان')
bidi_text = get_display(reshaped_text)
g42 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نير')
bidi_text = get_display(reshaped_text)
g43 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'رينبو 6')
bidi_text = get_display(reshaped_text)
g44 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فول أوت')
bidi_text = get_display(reshaped_text)
g45 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بيندي')
bidi_text = get_display(reshaped_text)
g46 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دراغون بول')
bidi_text = get_display(reshaped_text)
g47 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أساسنز كريد')
bidi_text = get_display(reshaped_text)
g48 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مورتال كومبات')
bidi_text = get_display(reshaped_text)
g49 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تومب رايدر')
bidi_text = get_display(reshaped_text)
g50 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'رايمان')
bidi_text = get_display(reshaped_text)
g51 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دارك سايدرز')
bidi_text = get_display(reshaped_text)
g52 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بتل فيل')
bidi_text = get_display(reshaped_text)
g53 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'روكت ليق')
bidi_text = get_display(reshaped_text)
g54 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جمب فورس')
bidi_text = get_display(reshaped_text)
g55 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هيتمان')
bidi_text = get_display(reshaped_text)
g56 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دونت ستارف')
bidi_text = get_display(reshaped_text)
g57 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'لاست أوف أس')
bidi_text = get_display(reshaped_text)
g58 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ماد ماكس')
bidi_text = get_display(reshaped_text)
g59 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مصارعة')
bidi_text = get_display(reshaped_text)
g60 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نيوه')
bidi_text = get_display(reshaped_text)
g61 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سبايرو')
bidi_text = get_display(reshaped_text)
g62 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أوت لاست')
bidi_text = get_display(reshaped_text)
g63 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ذا إيفل ويذن')
bidi_text = get_display(reshaped_text)
g64 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مافيا')
bidi_text = get_display(reshaped_text)
g65 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سكايرم')
bidi_text = get_display(reshaped_text)
g66 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ميتل جير')
bidi_text = get_display(reshaped_text)
g67 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'باي داي')
bidi_text = get_display(reshaped_text)
g68 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أوفر كوكد')
bidi_text = get_display(reshaped_text)
g69 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هجوم العمالقة')
bidi_text = get_display(reshaped_text)
g70 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ناروتو')
bidi_text = get_display(reshaped_text)
g71 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ون بيس')
bidi_text = get_display(reshaped_text)
g72 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دريمز')
bidi_text = get_display(reshaped_text)
g73 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'النباتxالزومبي')
bidi_text = get_display(reshaped_text)
g74 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سيكيرو')
bidi_text = get_display(reshaped_text)
g75 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ديفل ماي كراي')
bidi_text = get_display(reshaped_text)
g76 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فور أونر')
bidi_text = get_display(reshaped_text)
g77 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'إنفيموس')
bidi_text = get_display(reshaped_text)
g78 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'إنجستس')
bidi_text = get_display(reshaped_text)
g79 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ميجا مان')
bidi_text = get_display(reshaped_text)
g80 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ليغو')
bidi_text = get_display(reshaped_text)
g81 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تويستد ميتال')
bidi_text = get_display(reshaped_text)
g82 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كيل زون')
bidi_text = get_display(reshaped_text)
g83 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ليتل بيغ بلانت')
bidi_text = get_display(reshaped_text)
g84 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ليتل نايتميرز')
bidi_text = get_display(reshaped_text)
g85 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بوردرلاندز')
bidi_text = get_display(reshaped_text)
g86 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بينك بانثر')
bidi_text = get_display(reshaped_text)
g87 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جاكي شان')
bidi_text = get_display(reshaped_text)
g88 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سلاحف النينجا')
bidi_text = get_display(reshaped_text)
g89 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أبطال الديجيتال')
bidi_text = get_display(reshaped_text)
g90 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ببسي مان')
bidi_text = get_display(reshaped_text)
g91 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هرقل')
bidi_text = get_display(reshaped_text)
g92 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'طرزان')
bidi_text = get_display(reshaped_text)
g93 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'باك مان')
bidi_text = get_display(reshaped_text)
g94 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ليج أوف ليجيند')
bidi_text = get_display(reshaped_text)
g95 = bidi_text

game_words = [g1,g2,g3,g4,g5,g6,g7,g8,g9,g10,g11,g12,g13,g14,g15,g16,g17,g18,g19,g20,g21,g22,g23,g24,g25,g26,g27,g28,g29,g30,g31,g32,g33,g34,g35,g36,g37,g38,g39,g40,g41,g42,g43,g44,g45,g46,g47,g48,g49,g50,g51,g52,g53,g54,g55,g56,g57,g58,g59,g60,g61,g62,g63,g64,g65,g66,g67,g68,g69,g70,g71,g72,g73,g74,g75,g76,g77,g78,g79,g80,g81,g82,g83,g84,g85,g86,g87,g88,g89,g90,g91,g92,g93,g94,g95]
hide_game = [g1,g2,g3,g4,g5,g6,g7,g8,g9,g10,g11,g12,g13,g14,g15,g16,g17,g18,g19,g20,g21,g22,g23,g24,g25,g26,g27,g28,g29,g30,g31,g32,g33,g34,g35,g36,g37,g38,g39,g40,g41,g42,g43,g44,g45,g46,g47,g48,g49,g50,g51,g52,g53,g54,g55,g56,g57,g58,g59,g60,g61,g62,g63,g64,g65,g66,g67,g68,g69,g70,g71,g72,g73,g74,g75,g76,g77,g78,g79,g80,g81,g82,g83,g84,g85,g86,g87,g88,g89,g90,g91,g92,g93,g94,g95]

# Clothes Word
reshaped_text = arabic_reshaper.reshape(u'جينز')
bidi_text = get_display(reshaped_text)
c1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نظارة')
bidi_text = get_display(reshaped_text)
c2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حذاء')
bidi_text = get_display(reshaped_text)
c3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'شورت')
bidi_text = get_display(reshaped_text)
c4 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ثوب')
bidi_text = get_display(reshaped_text)
c5 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ساعة')
bidi_text = get_display(reshaped_text)
c6 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'إسوارة')
bidi_text = get_display(reshaped_text)
c7 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حزام')
bidi_text = get_display(reshaped_text)
c8 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'شماغ')
bidi_text = get_display(reshaped_text)
c9 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'عقال')
bidi_text = get_display(reshaped_text)
c10 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بلوفر')
bidi_text = get_display(reshaped_text)
c11 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جاكيت')
bidi_text = get_display(reshaped_text)
c12 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'خاتم')
bidi_text = get_display(reshaped_text)
c13 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'غترة')
bidi_text = get_display(reshaped_text)
c14 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جورب')
bidi_text = get_display(reshaped_text)
c15 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سلسال')
bidi_text = get_display(reshaped_text)
c16 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حلق')
bidi_text = get_display(reshaped_text)
c17 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قبعة')
bidi_text = get_display(reshaped_text)
c18 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بدلة')
bidi_text = get_display(reshaped_text)
c19 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قميص')
bidi_text = get_display(reshaped_text)
c20 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'معطف')
bidi_text = get_display(reshaped_text)
c21 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بشت')
bidi_text = get_display(reshaped_text)
c22 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تنورة')
bidi_text = get_display(reshaped_text)
c23 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فستان')
bidi_text = get_display(reshaped_text)
c24 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بجامة')
bidi_text = get_display(reshaped_text)
c25 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بنطلون')
bidi_text = get_display(reshaped_text)
c26 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'شورت سباحة')
bidi_text = get_display(reshaped_text)
c27 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تيشيرت')
bidi_text = get_display(reshaped_text)
c28 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حقيبة')
bidi_text = get_display(reshaped_text)
c29 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'محفظة')
bidi_text = get_display(reshaped_text)
c30 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كبك')
bidi_text = get_display(reshaped_text)
c31 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'عباية')
bidi_text = get_display(reshaped_text)
c32 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كعب')
bidi_text = get_display(reshaped_text)
c33 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'وشاح')
bidi_text = get_display(reshaped_text)
c34 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قفاز')
bidi_text = get_display(reshaped_text)
c35 = bidi_text

clothes_words = [c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20,c21,c22,c23,c24,c25,c26,c27,c28,c29,c30,c31,c32,c33,c34,c35]
hide_clothes = [c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20,c21,c22,c23,c24,c25,c26,c27,c28,c29,c30,c31,c32,c33,c34,c35]


# Anime Word
reshaped_text = arabic_reshaper.reshape(u'قاتل الشياطين')
bidi_text = get_display(reshaped_text)
a1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ون بيس')
bidi_text = get_display(reshaped_text)
a2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'القناص')
bidi_text = get_display(reshaped_text)
a3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ناروتو')
bidi_text = get_display(reshaped_text)
a4 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هجوم العمالقة')
bidi_text = get_display(reshaped_text)
a5 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فيري تيل')
bidi_text = get_display(reshaped_text)
a6 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بليتش')
bidi_text = get_display(reshaped_text)
a7 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دراغون بول')
bidi_text = get_display(reshaped_text)
a8 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مذكرة الموت')
bidi_text = get_display(reshaped_text)
a9 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'يوغي يو')
bidi_text = get_display(reshaped_text)
a10 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جوجو')
bidi_text = get_display(reshaped_text)
a11 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بوكو نو هيرو')
bidi_text = get_display(reshaped_text)
a12 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'طوكيو غول')
bidi_text = get_display(reshaped_text)
a13 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بوكيمون')
bidi_text = get_display(reshaped_text)
a14 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كود جيس')
bidi_text = get_display(reshaped_text)
a15 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فل ميتل الكمست')
bidi_text = get_display(reshaped_text)
a16 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الخطايا السبع')
bidi_text = get_display(reshaped_text)
a17 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الطفيليات')
bidi_text = get_display(reshaped_text)
a18 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بلاك كلوفر')
bidi_text = get_display(reshaped_text)
a19 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سول ايتر')
bidi_text = get_display(reshaped_text)
a20 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'المحقق كونان')
bidi_text = get_display(reshaped_text)
a21 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ون بانش مان')
bidi_text = get_display(reshaped_text)
a22 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سورد ارت')
bidi_text = get_display(reshaped_text)
a23 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ميراي نيكي')
bidi_text = get_display(reshaped_text)
a24 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فيت')
bidi_text = get_display(reshaped_text)
a25 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نوراغامي')
bidi_text = get_display(reshaped_text)
a26 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جينتاما')
bidi_text = get_display(reshaped_text)
a27 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حروب الطعام')
bidi_text = get_display(reshaped_text)
a28 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'طبيب الصخر')
bidi_text = get_display(reshaped_text)
a29 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دورورو')
bidi_text = get_display(reshaped_text)
a30 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فينلاند ساغا')
bidi_text = get_display(reshaped_text)
a31 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قوات النار')
bidi_text = get_display(reshaped_text)
a32 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هايكيو')
bidi_text = get_display(reshaped_text)
a33 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نيفرلاند')
bidi_text = get_display(reshaped_text)
a34 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بطل الدرع')
bidi_text = get_display(reshaped_text)
a35 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دمية الذكريات')
bidi_text = get_display(reshaped_text)
a36 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بيرسونا 5')
bidi_text = get_display(reshaped_text)
a37 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كابانيري')
bidi_text = get_display(reshaped_text)
a38 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كاسلفينيا')
bidi_text = get_display(reshaped_text)
a39 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'باكي')
bidi_text = get_display(reshaped_text)
a40 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مدرسة المقامرة')
bidi_text = get_display(reshaped_text)
a41 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'المعوذ الأزرق')
bidi_text = get_display(reshaped_text)
a42 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دريفترز')
bidi_text = get_display(reshaped_text)
a43 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هلسينغ')
bidi_text = get_display(reshaped_text)
a44 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'موب سايكو')
bidi_text = get_display(reshaped_text)
a45 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'91 يوم')
bidi_text = get_display(reshaped_text)
a46 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بيرسيرك')
bidi_text = get_display(reshaped_text)
a47 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بوكو داكي')
bidi_text = get_display(reshaped_text)
a48 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فصل الإغتيال')
bidi_text = get_display(reshaped_text)
a49 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أبطال الزهور')
bidi_text = get_display(reshaped_text)
a50 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'شارلوت')
bidi_text = get_display(reshaped_text)
a51 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جانجستا')
bidi_text = get_display(reshaped_text)
a52 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كذبتك في إبريل')
bidi_text = get_display(reshaped_text)
a53 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جود إيتر')
bidi_text = get_display(reshaped_text)
a54 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أكامي القاتلة')
bidi_text = get_display(reshaped_text)
a55 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بوابة ستاينز')
bidi_text = get_display(reshaped_text)
a56 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'النمر x التنين')
bidi_text = get_display(reshaped_text)
a57 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جلتي كراون')
bidi_text = get_display(reshaped_text)
a58 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'المملكة')
bidi_text = get_display(reshaped_text)
a59 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ماجي')
bidi_text = get_display(reshaped_text)
a60 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دورارارا')
bidi_text = get_display(reshaped_text)
a61 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هاجيمي نو ايبو')
bidi_text = get_display(reshaped_text)
a62 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كلاند')
bidi_text = get_display(reshaped_text)
a63 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'لا لعبة لا حياة')
bidi_text = get_display(reshaped_text)
a64 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كيل لا كيل')
bidi_text = get_display(reshaped_text)
a65 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ري: زيرو')
bidi_text = get_display(reshaped_text)
a66 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'صوت صامت')
bidi_text = get_display(reshaped_text)
a67 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'موكب الموت')
bidi_text = get_display(reshaped_text)
a68 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'صنع في الهاوية')
bidi_text = get_display(reshaped_text)
a69 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'اوفر لورد')
bidi_text = get_display(reshaped_text)
a70 = bidi_text

anime_words = [a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53,a54,a55,a56,a57,a58,a59,a60,a61,a62,a63,a64,a65,a66,a67,a68,a69,a70]
hide_anime = [a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53,a54,a55,a56,a57,a58,a59,a60,a61,a62,a63,a64,a65,a66,a67,a68,a69,a70] 

# Cartoon Word
reshaped_text = arabic_reshaper.reshape(u'سالي')
bidi_text = get_display(reshaped_text)
k1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'السنافر')
bidi_text = get_display(reshaped_text)
k2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'باباي')
bidi_text = get_display(reshaped_text)
k3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جزيرة الكنز')
bidi_text = get_display(reshaped_text)
k4 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سابق ولاحق')
bidi_text = get_display(reshaped_text)
k5 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'داي الشجاع')
bidi_text = get_display(reshaped_text)
k6 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أنا وأخي')
bidi_text = get_display(reshaped_text)
k7 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أبطال الديجيتال')
bidi_text = get_display(reshaped_text)
k8 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هزيم الرعد')
bidi_text = get_display(reshaped_text)
k9 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'موكا موكا')
bidi_text = get_display(reshaped_text)
k10 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'لحن الحياة')
bidi_text = get_display(reshaped_text)
k11 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'عبقور')
bidi_text = get_display(reshaped_text)
k12 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'النمر المقنع')
bidi_text = get_display(reshaped_text)
k13 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سلام دانك')
bidi_text = get_display(reshaped_text)
k14 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'عدنان ولينا')
bidi_text = get_display(reshaped_text)
k15 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ماوكلي')
bidi_text = get_display(reshaped_text)
k16 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الصياد الصغير')
bidi_text = get_display(reshaped_text)
k17 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جريندايزر')
bidi_text = get_display(reshaped_text)
k18 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'السيدة ملعقة')
bidi_text = get_display(reshaped_text)
k19 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'القناع الأخضر')
bidi_text = get_display(reshaped_text)
k20 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'المقاتل النبيل')
bidi_text = get_display(reshaped_text)
k21 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'النمر الوردي')
bidi_text = get_display(reshaped_text)
k22 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الكابتن ماجد')
bidi_text = get_display(reshaped_text)
k23 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الشبح')
bidi_text = get_display(reshaped_text)
k24 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سندباد')
bidi_text = get_display(reshaped_text)
k25 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الحديقة السرية')
bidi_text = get_display(reshaped_text)
k26 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'عهد الأصدقاء')
bidi_text = get_display(reshaped_text)
k27 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أنا وأختي')
bidi_text = get_display(reshaped_text)
k28 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'علاء الدين')
bidi_text = get_display(reshaped_text)
k29 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مغامرات نغم')
bidi_text = get_display(reshaped_text)
k30 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هايدي')
bidi_text = get_display(reshaped_text)
k31 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بابار')
bidi_text = get_display(reshaped_text)
k32 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بن تن')
bidi_text = get_display(reshaped_text)
k33 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'باتمان')
bidi_text = get_display(reshaped_text)
k34 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بوكيمون')
bidi_text = get_display(reshaped_text)
k35 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بي بليد')
bidi_text = get_display(reshaped_text)
k36 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بينكي وبرين')
bidi_text = get_display(reshaped_text)
k37 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تاز المشاكس')
bidi_text = get_display(reshaped_text)
k38 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'توم وجيري')
bidi_text = get_display(reshaped_text)
k39 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حنين')
bidi_text = get_display(reshaped_text)
k40 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ريمي')
bidi_text = get_display(reshaped_text)
k41 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الرمية الملتهبة')
bidi_text = get_display(reshaped_text)
k42 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'روبن هود')
bidi_text = get_display(reshaped_text)
k43 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'زورو')
bidi_text = get_display(reshaped_text)
k44 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'زينة النحلة')
bidi_text = get_display(reshaped_text)
k45 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سمبا')
bidi_text = get_display(reshaped_text)
k46 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سوبر ماريو')
bidi_text = get_display(reshaped_text)
k47 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سوبر مان')
bidi_text = get_display(reshaped_text)
k48 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سوسان')
bidi_text = get_display(reshaped_text)
k49 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سونيك')
bidi_text = get_display(reshaped_text)
k50 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'القط الأسود')
bidi_text = get_display(reshaped_text)
k51 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فرسان الأرض')
bidi_text = get_display(reshaped_text)
k52 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فلينستون')
bidi_text = get_display(reshaped_text)
k53 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'القناص')
bidi_text = get_display(reshaped_text)
k54 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كاسبر')
bidi_text = get_display(reshaped_text)
k55 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الماسة الزرقاء')
bidi_text = get_display(reshaped_text)
k56 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'المحقق كونان')
bidi_text = get_display(reshaped_text)
k57 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مختبر دكستر')
bidi_text = get_display(reshaped_text)
k58 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نقار الخشب')
bidi_text = get_display(reshaped_text)
k59 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'همتارو')
bidi_text = get_display(reshaped_text)
k60 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أكاديمية الشرطة')
bidi_text = get_display(reshaped_text)
k61 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'يوغي يو')
bidi_text = get_display(reshaped_text)
k62 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أجنحة كاندام')
bidi_text = get_display(reshaped_text)
k63 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أدغال الديجيتال')
bidi_text = get_display(reshaped_text)
k64 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ساموراي جاك')
bidi_text = get_display(reshaped_text)
k65 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ساندي بل')
bidi_text = get_display(reshaped_text)
k66 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سكوبي دو')
bidi_text = get_display(reshaped_text)
k67 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سلاحف النينجا')
bidi_text = get_display(reshaped_text)
k68 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فتياة الخارقات')
bidi_text = get_display(reshaped_text)
k69 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الجاسوسات')
bidi_text = get_display(reshaped_text)
k70 = bidi_text


anime1_words = [k1,k2,k3,k4,k5,k6,k7,k8,k9,k10,k11,k12,k13,k14,k15,k16,k17,k18,k19,k20,k21,k22,k23,k24,k25,k26,k27,k28,k29,k30,k31,k32,k33,k34,k35,k36,k37,k38,k39,k40,k41,k42,k43,k44,k45,k46,k47,k48,k49,k50,k51,k52,k53,k54,k55,k56,k57,k58,k59,k60,k61,k62,k63,k64,k65,k66,k67,k68,k69,k70]
hide_anime1 = [k1,k2,k3,k4,k5,k6,k7,k8,k9,k10,k11,k12,k13,k14,k15,k16,k17,k18,k19,k20,k21,k22,k23,k24,k25,k26,k27,k28,k29,k30,k31,k32,k33,k34,k35,k36,k37,k38,k39,k40,k41,k42,k43,k44,k45,k46,k47,k48,k49,k50,k51,k52,k53,k54,k55,k56,k57,k58,k59,k60,k61,k62,k63,k64,k65,k66,k67,k68,k69,k70]

# Series Word
reshaped_text = arabic_reshaper.reshape(u'لوسيفر')
bidi_text = get_display(reshaped_text)
s1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أوزارك')
bidi_text = get_display(reshaped_text)
s2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دارك')
bidi_text = get_display(reshaped_text)
s3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'لاكاسا')
bidi_text = get_display(reshaped_text)
s4 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ناركوس')
bidi_text = get_display(reshaped_text)
s5 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'شرلوك')
bidi_text = get_display(reshaped_text)
s6 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'السهم')
bidi_text = get_display(reshaped_text)
s7 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فريندز')
bidi_text = get_display(reshaped_text)
s8 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فايكنجز')
bidi_text = get_display(reshaped_text)
s9 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'المطر')
bidi_text = get_display(reshaped_text)
s10 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ديرديفل')
bidi_text = get_display(reshaped_text)
s11 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سيمبسون')
bidi_text = get_display(reshaped_text)
s12 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الجوكر')
bidi_text = get_display(reshaped_text)
s13 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ديكستر')
bidi_text = get_display(reshaped_text)
s14 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'افنجرز')
bidi_text = get_display(reshaped_text)
s15 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هاوس')
bidi_text = get_display(reshaped_text)
s16 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'لوست')
bidi_text = get_display(reshaped_text)
s17 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'غلي')
bidi_text = get_display(reshaped_text)
s18 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'انظر')
bidi_text = get_display(reshaped_text)
s19 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ديدبول')
bidi_text = get_display(reshaped_text)
s20 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سوتس')
bidi_text = get_display(reshaped_text)
s21 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أنت')
bidi_text = get_display(reshaped_text)
s22 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سونيك')
bidi_text = get_display(reshaped_text)
s23 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جومانجي')
bidi_text = get_display(reshaped_text)
s24 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'باتمان')
bidi_text = get_display(reshaped_text)
s25 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ريو')
bidi_text = get_display(reshaped_text)
s26 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نيمو')
bidi_text = get_display(reshaped_text)
s27 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تايتنك')
bidi_text = get_display(reshaped_text)
s28 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'اكوامان')
bidi_text = get_display(reshaped_text)
s29 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أفاتار')
bidi_text = get_display(reshaped_text)
s30 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الطفيلي')
bidi_text = get_display(reshaped_text)
s31 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تيكن')
bidi_text = get_display(reshaped_text)
s32 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فروزن')
bidi_text = get_display(reshaped_text)
s33 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هولك')
bidi_text = get_display(reshaped_text)
s34 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ثور')
bidi_text = get_display(reshaped_text)
s35 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سو')
bidi_text = get_display(reshaped_text)
s36 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تشاكي')
bidi_text = get_display(reshaped_text)
s37 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'السنافر')
bidi_text = get_display(reshaped_text)
s38 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'شازام')
bidi_text = get_display(reshaped_text)
s39 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'شريك')
bidi_text = get_display(reshaped_text)
s40 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'آني')
bidi_text = get_display(reshaped_text)
s41 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تشيرنوبيل')
bidi_text = get_display(reshaped_text)
s42 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ترمونيتر')
bidi_text = get_display(reshaped_text)
s43 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'انكريدبلز')
bidi_text = get_display(reshaped_text)
s44 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'توايلايت')
bidi_text = get_display(reshaped_text)
s45 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ترانسفورمرز')
bidi_text = get_display(reshaped_text)
s46 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ذا 100')
bidi_text = get_display(reshaped_text)
s47 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'برزن بريك')
bidi_text = get_display(reshaped_text)
s48 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ذا ويتشر')
bidi_text = get_display(reshaped_text)
s49 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ذا فلاش')
bidi_text = get_display(reshaped_text)
s50 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ذا بانشر')
bidi_text = get_display(reshaped_text)
s51 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'13 سبب')
bidi_text = get_display(reshaped_text)
s52 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جون ويك')
bidi_text = get_display(reshaped_text)
s53 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ستار ورز')
bidi_text = get_display(reshaped_text)
s54 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حكاية لعبة')
bidi_text = get_display(reshaped_text)
s55 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'علاء الدين')
bidi_text = get_display(reshaped_text)
s56 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ايرون مان')
bidi_text = get_display(reshaped_text)
s57 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سبايدر مان')
bidi_text = get_display(reshaped_text)
s58 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سوبر مان')
bidi_text = get_display(reshaped_text)
s59 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'باد بويز')
bidi_text = get_display(reshaped_text)
s60 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هاري بوتر')
bidi_text = get_display(reshaped_text)
s61 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ذا ماتريكس')
bidi_text = get_display(reshaped_text)
s62 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الملك آرثر')
bidi_text = get_display(reshaped_text)
s63 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كينغ كونغ')
bidi_text = get_display(reshaped_text)
s64 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الرجل النملة')
bidi_text = get_display(reshaped_text)
s65 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'إكس مان')
bidi_text = get_display(reshaped_text)
s66 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هنجر جيم')
bidi_text = get_display(reshaped_text)
s67 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'آيس ايج')
bidi_text = get_display(reshaped_text)
s68 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ستيب آب')
bidi_text = get_display(reshaped_text)
s69 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بيرد بوكس')
bidi_text = get_display(reshaped_text)
s70 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الطيور الغاضبة')
bidi_text = get_display(reshaped_text)
s71 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'وندر وومان')
bidi_text = get_display(reshaped_text)
s72 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أشياء غريبة')
bidi_text = get_display(reshaped_text)
s73 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'المرآة السوداء')
bidi_text = get_display(reshaped_text)
s74 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بريكنق باد')
bidi_text = get_display(reshaped_text)
s75 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جود جيرلز')
bidi_text = get_display(reshaped_text)
s76 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فاميلي غاي')
bidi_text = get_display(reshaped_text)
s77 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جود دكتور')
bidi_text = get_display(reshaped_text)
s78 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بلايند سبوت')
bidi_text = get_display(reshaped_text)
s79 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فرقة الإنتحار')
bidi_text = get_display(reshaped_text)
s80 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الغبي والأغبى')
bidi_text = get_display(reshaped_text)
s81 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'انسايد اوت')
bidi_text = get_display(reshaped_text)
s82 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كابتن أمريكا')
bidi_text = get_display(reshaped_text)
s83 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ورد ور زد')
bidi_text = get_display(reshaped_text)
s84 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بيكي بلايندرز')
bidi_text = get_display(reshaped_text)
s85 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قراصنة الكاريبي')
bidi_text = get_display(reshaped_text)
s86 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الموتى السائرون')
bidi_text = get_display(reshaped_text)
s87 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'السرعة والغضب')
bidi_text = get_display(reshaped_text)
s88 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'القائمة السوداء')
bidi_text = get_display(reshaped_text)
s89 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بابلو إسكوبار')
bidi_text = get_display(reshaped_text)
s90 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جيسيكا جونز')
bidi_text = get_display(reshaped_text)
s91 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'القبضة الحديدية')
bidi_text = get_display(reshaped_text)
s92 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ذا قود فاذر')
bidi_text = get_display(reshaped_text)
s93 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مان ان بلاك')
bidi_text = get_display(reshaped_text)
s94 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ذا ليون كينج')
bidi_text = get_display(reshaped_text)
s95 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كونغ فو باندا')
bidi_text = get_display(reshaped_text)
s96 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ريك اند مورتي')
bidi_text = get_display(reshaped_text)
s97 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'لورد اوف رينج')
bidi_text = get_display(reshaped_text)
s98 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هذا ما جناه قلبي')
bidi_text = get_display(reshaped_text)
s99 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جيم اوف ثرونز')
bidi_text = get_display(reshaped_text)
s100 = bidi_text


series_words = [s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s40,s41,s42,s43,s44,s45,s46,s47,s48,s49,s50,s51,s52,s53,s54,s55,s56,s57,s58,s59,s60,s61,s62,s63,s64,s65,s66,s67,s68,s69,s70,s71,s72,s73,s74,s75,s76,s77,s78,s79,s80,s81,s82,s83,s84,s85,s86,s87,s88,s89,s90,s91,s92,s93,s94,s95,s96,s97,s98,s99,s100]
hide_series = [s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s40,s41,s42,s43,s44,s45,s46,s47,s48,s49,s50,s51,s52,s53,s54,s55,s56,s57,s58,s59,s60,s61,s62,s63,s64,s65,s66,s67,s68,s69,s70,s71,s72,s73,s74,s75,s76,s77,s78,s79,s80,s81,s82,s83,s84,s85,s86,s87,s88,s89,s90,s91,s92,s93,s94,s95,s96,s97,s98,s99,s100]

# i Word
reshaped_text = arabic_reshaper.reshape(u'إوز')
bidi_text = get_display(reshaped_text)
i1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نورس')
bidi_text = get_display(reshaped_text)
i2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نمس')
bidi_text = get_display(reshaped_text)
i3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دولفين')
bidi_text = get_display(reshaped_text)
i4 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سلطعون')
bidi_text = get_display(reshaped_text)
i5 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كوبرا')
bidi_text = get_display(reshaped_text)
i6 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فيل')
bidi_text = get_display(reshaped_text)
i7 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'وحيد القرن')
bidi_text = get_display(reshaped_text)
i8 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جاموس')
bidi_text = get_display(reshaped_text)
i9 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'غوريلا')
bidi_text = get_display(reshaped_text)
i10 = bidi_text

reshaped_text = arabic_reshaper.reshape(u'حمار وحشي')
bidi_text = get_display(reshaped_text)
i11 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فرس النهر')
bidi_text = get_display(reshaped_text)
i12 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'زرافة')
bidi_text = get_display(reshaped_text)
i13 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تمساح')
bidi_text = get_display(reshaped_text)
i14 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كنغر')
bidi_text = get_display(reshaped_text)
i15 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قرد')
bidi_text = get_display(reshaped_text)
i16 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ذئب')
bidi_text = get_display(reshaped_text)
i17 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ثعلب')
bidi_text = get_display(reshaped_text)
i18 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حلزون')
bidi_text = get_display(reshaped_text)
i19 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'طاؤوس')
bidi_text = get_display(reshaped_text)
i20 = bidi_text

reshaped_text = arabic_reshaper.reshape(u'دب')
bidi_text = get_display(reshaped_text)
i21 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سلحفة')
bidi_text = get_display(reshaped_text)
i22 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ضفدع')
bidi_text = get_display(reshaped_text)
i23 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'خنزير')
bidi_text = get_display(reshaped_text)
i24 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جرو')
bidi_text = get_display(reshaped_text)
i25 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'خروف')
bidi_text = get_display(reshaped_text)
i26 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بقرة')
bidi_text = get_display(reshaped_text)
i27 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حمار')
bidi_text = get_display(reshaped_text)
i28 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'باندا')
bidi_text = get_display(reshaped_text)
i29 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ديك')
bidi_text = get_display(reshaped_text)
i30 = bidi_text

reshaped_text = arabic_reshaper.reshape(u'معزة')
bidi_text = get_display(reshaped_text)
i31 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نمر')
bidi_text = get_display(reshaped_text)
i32 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'غراب')
bidi_text = get_display(reshaped_text)
i33 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بومة')
bidi_text = get_display(reshaped_text)
i34 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'غزالة')
bidi_text = get_display(reshaped_text)
i35 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أفعى')
bidi_text = get_display(reshaped_text)
i36 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فأر')
bidi_text = get_display(reshaped_text)
i37 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سحلية')
bidi_text = get_display(reshaped_text)
i38 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كلب')
bidi_text = get_display(reshaped_text)
i39 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ثور')
bidi_text = get_display(reshaped_text)
i40 = bidi_text

reshaped_text = arabic_reshaper.reshape(u'جمل')
bidi_text = get_display(reshaped_text)
i41 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سمكة')
bidi_text = get_display(reshaped_text)
i42 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أرنب')
bidi_text = get_display(reshaped_text)
i43 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دجاجة')
bidi_text = get_display(reshaped_text)
i44 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حوت')
bidi_text = get_display(reshaped_text)
i45 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'سنجاب')
bidi_text = get_display(reshaped_text)
i46 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حمامة')
bidi_text = get_display(reshaped_text)
i47 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نعامة')
bidi_text = get_display(reshaped_text)
i48 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نمل')
bidi_text = get_display(reshaped_text)
i49 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نحل')
bidi_text = get_display(reshaped_text)
i50 = bidi_text

reshaped_text = arabic_reshaper.reshape(u'دبور')
bidi_text = get_display(reshaped_text)
i51 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ذباب')
bidi_text = get_display(reshaped_text)
i52 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'خنفساء')
bidi_text = get_display(reshaped_text)
i53 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فراشة')
bidi_text = get_display(reshaped_text)
i54 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'عنكبوت')
bidi_text = get_display(reshaped_text)
i55 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'عقرب')
bidi_text = get_display(reshaped_text)
i56 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'يرقه')
bidi_text = get_display(reshaped_text)
i57 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نجم البحر')
bidi_text = get_display(reshaped_text)
i58 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'حبار')
bidi_text = get_display(reshaped_text)
i59 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فقمة')
bidi_text = get_display(reshaped_text)
i60 = bidi_text

reshaped_text = arabic_reshaper.reshape(u'أخطبوط')
bidi_text = get_display(reshaped_text)
i61 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'خفاش')
bidi_text = get_display(reshaped_text)
i62 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'نسر')
bidi_text = get_display(reshaped_text)
i63 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'صقر')
bidi_text = get_display(reshaped_text)
i64 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ببغاء')
bidi_text = get_display(reshaped_text)
i65 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هدهد')
bidi_text = get_display(reshaped_text)
i66 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كناري')
bidi_text = get_display(reshaped_text)
i67 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بط')
bidi_text = get_display(reshaped_text)
i68 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بطريق')
bidi_text = get_display(reshaped_text)
i69 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بجعة')
bidi_text = get_display(reshaped_text)
i70 = bidi_text

reshaped_text = arabic_reshaper.reshape(u'دب الكسلان')
bidi_text = get_display(reshaped_text)
i71 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دب القطبي')
bidi_text = get_display(reshaped_text)
i72 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'دعسوقة')
bidi_text = get_display(reshaped_text)
i73 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كوالا')
bidi_text = get_display(reshaped_text)
i74 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'محار')
bidi_text = get_display(reshaped_text)
i75 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قنديل البحر')
bidi_text = get_display(reshaped_text)
i76 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أسد')
bidi_text = get_display(reshaped_text)
i77 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قطة')
bidi_text = get_display(reshaped_text)
i78 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'فهد')
bidi_text = get_display(reshaped_text)
i79 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قرش')
bidi_text = get_display(reshaped_text)
i80 = bidi_text

reshaped_text = arabic_reshaper.reshape(u'حصان')
bidi_text = get_display(reshaped_text)
i81 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'قنفذ')
bidi_text = get_display(reshaped_text)
i82 = bidi_text

i_words = [i1,i2,i3,i4,i5,i6,i7,i8,i9,i10,i11,i12,i13,i14,i15,i16,i17,i18,i19,i20,i21,i22,i23,i24,i25,i26,i27,i28,i29,i30,i31,i32,i33,i34,i35,i36,i37,i38,i39,i40,i41,i42,i43,i44,i45,i46,i47,i48,i49,i50,i51,i52,i53,i54,i55,i56,i57,i58,i59,i60,i61,i62,i63,i64,i65,i66,i67,i68,i69,i70,i71,i72,i73,i74,i75,i76,i77,i78,i79,i80,i81,i82]
hide_i = [i1,i2,i3,i4,i5,i6,i7,i8,i9,i10,i11,i12,i13,i14,i15,i16,i17,i18,i19,i20,i21,i22,i23,i24,i25,i26,i27,i28,i29,i30,i31,i32,i33,i34,i35,i36,i37,i38,i39,i40,i41,i42,i43,i44,i45,i46,i47,i48,i49,i50,i51,i52,i53,i54,i55,i56,i57,i58,i59,i60,i61,i62,i63,i64,i65,i66,i67,i68,i69,i70,i71,i72,i73,i74,i75,i76,i77,i78,i79,i80,i81,i82]

########################################################################

# Main page
########################################################################
# Back
reshaped_text = arabic_reshaper.reshape(u'رجوع')
bidi_text = get_display(reshaped_text)
ex = bidi_text

reshaped_text = arabic_reshaper.reshape(u'اضغط زر Esc للرجوع للأقسام')
bidi_text = get_display(reshaped_text)
esc = bidi_text


# Page
reshaped_text = arabic_reshaper.reshape(u'الملقوف')
bidi_text = get_display(reshaped_text)
tit = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أنت الملقوف')
bidi_text = get_display(reshaped_text)
tit1 = bidi_text

reshaped_text = arabic_reshaper.reshape(u'ابدأ')
bidi_text = get_display(reshaped_text)
op = bidi_text

reshaped_text = arabic_reshaper.reshape(u'طريقة اللعب')
bidi_text = get_display(reshaped_text)
inf = bidi_text

reshaped_text = arabic_reshaper.reshape(u'برمجة وتصميم : ')
bidi_text = get_display(reshaped_text)
xzx = bidi_text

def main_menu():

    # Game Loop
    run = True
    while run:
        screen.fill(BG)
        logo()
        massage_to_screen(tit,W,113,145,28)
        massage_to_screen(xzx,W,142,460,18)
        massage_to_screen('Omar Saad',W,54,460,18)

        click = False
        for event in pygame.event.get():
            pos = pygame.mouse.get_pos()

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                start()
        if button_2.collidepoint((mx, my)):
            if click:
                info()            

        pygame.draw.rect(screen, BO, button_1)
        pygame.draw.rect(screen, BO, button_2)
        massage_to_screen(op,W,132,218,30)
        massage_to_screen(inf,W,92,298,28)
        
        pygame.display.update()
        mainClock.tick(60)

# Page
reshaped_text = arabic_reshaper.reshape(u'اختر القسم')
bidi_text = get_display(reshaped_text)
ch = bidi_text
            
def start():
    # Game Loop
    running = True
    while running:
        screen.fill(BG)
        massage_to_screen(ch,W,100,19,28)

        mx, my = pygame.mouse.get_pos()

        # start
        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        button_9 = pygame.Rect(220,16,70,40)

        if button_9.collidepoint((mx, my)):
            if click:
                running = False
                main_menu()
                
        pygame.draw.rect(screen, BO, button_9)
        massage_to_screen(ex,W,233,21,22)

        # اختر القسم
        button_1 = pygame.Rect(20,65,120,130)
        button_2 = pygame.Rect(160,65,120,130)
        button_3 = pygame.Rect(20,210,120,130)
        button_4 = pygame.Rect(160,210,120,130)
        button_5 = pygame.Rect(20,355,120,130)
        button_6 = pygame.Rect(160,355,120,130)

        if button_1.collidepoint((mx, my)):
            if click:
                food_info()
        if button_2.collidepoint((mx, my)):
            if click:
                game_info()
        if button_3.collidepoint((mx, my)):
            if click:
                clothes_info()
        if button_4.collidepoint((mx, my)):
            if click:
                anime_info()
        if button_5.collidepoint((mx, my)):
            if click:
                series_info()
        if button_6.collidepoint((mx, my)):
            if click:
                i_info()
        
        pygame.draw.rect(screen, W, button_1)
        photo('img/food.jpg', 20, 65)
        pygame.draw.rect(screen, W, button_2)
        photo('img/game.jpg', 160, 65)
        pygame.draw.rect(screen, W, button_3)
        photo('img/clothes.jpg', 20, 210)
        pygame.draw.rect(screen, W, button_4)
        photo('img/anime.jpg', 160, 210)
        pygame.draw.rect(screen, W, button_5)
        photo('img/series.jpg', 20, 355)
        pygame.draw.rect(screen, W, button_6)
        photo('img/animals.jpg', 160, 355)




        pygame.display.update()
        mainClock.tick(60)

# Page
reshaped_text = arabic_reshaper.reshape(u'هناك لاعب واحد فقط هو الملقوف')
bidi_text = get_display(reshaped_text)
how_1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'يجب على بقية اللاعبين طرح اسئلة عن')
bidi_text = get_display(reshaped_text)
how_2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الكلمة لمعرفة من هو الشخص الملقوف و')
bidi_text = get_display(reshaped_text)
how_3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'على الشخص الملقوف معرفة هذه الكلمة.')
bidi_text = get_display(reshaped_text)
how_4 = bidi_text

x = [how_1,how_2,how_3,how_4]

def info():
    # Game Loop
    running = True
    while running:
        screen.fill(BG)
        massage_to_screen(inf,W,87,23,28)

        massage_to_screen(x[0],W,35,160,22)
        massage_to_screen(x[1],W,10,200,22)
        massage_to_screen(x[2],W,4,240,22)
        massage_to_screen(x[3],W,6,280,22)

        mx, my = pygame.mouse.get_pos()

        button_9 = pygame.Rect(220,16,70,40)

        if button_9.collidepoint((mx, my)):
            if click:
                running = False
                main_menu()
                
        pygame.draw.rect(screen, BO, button_9)
        massage_to_screen(ex,W,233,21,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        pygame.display.update()
        mainClock.tick(60)
########################################################################

# Info Pages
########################################################################
# Page 1
reshaped_text = arabic_reshaper.reshape(u'مأكولات')
bidi_text = get_display(reshaped_text)
food = bidi_text
# Page 2
reshaped_text = arabic_reshaper.reshape(u'ألعاب')
bidi_text = get_display(reshaped_text)
games = bidi_text
# Page 3
reshaped_text = arabic_reshaper.reshape(u'ملابس')
bidi_text = get_display(reshaped_text)
clothes = bidi_text
# Page 4
reshaped_text = arabic_reshaper.reshape(u'أنمي')
bidi_text = get_display(reshaped_text)
anime = bidi_text
# Page 5
reshaped_text = arabic_reshaper.reshape(u'مسلسلات')
bidi_text = get_display(reshaped_text)
series = bidi_text
# Page 6
reshaped_text = arabic_reshaper.reshape(u'حيوانات')
bidi_text = get_display(reshaped_text)
iz = bidi_text

# food_info
reshaped_text = arabic_reshaper.reshape(u'لكم في الأكل؟')
bidi_text = get_display(reshaped_text)
f_1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هذا القسم راح يجوعكم')
bidi_text = get_display(reshaped_text)
f_2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تنبيه: جيب شيء تأكله قبل ما تلعب.')
bidi_text = get_display(reshaped_text)
f_3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مثل بيتزا - برجر - شاروما - معكرونة')
bidi_text = get_display(reshaped_text)
f_4 = bidi_text

f = [f_1,f_2,f_3,f_4]

# game_info
reshaped_text = arabic_reshaper.reshape(u'لكم في الجيمز؟')
bidi_text = get_display(reshaped_text)
g_1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هذا القسم لمدمني القيمز')
bidi_text = get_display(reshaped_text)
g_2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ملاحظة: لازم تكون مدرك الألعاب')
bidi_text = get_display(reshaped_text)
g_3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مثل فيفا - تيكن - كود - فورتنايت')
bidi_text = get_display(reshaped_text)
g_4 = bidi_text

g = [g_1,g_2,g_3,g_4]

# clothes_info
reshaped_text = arabic_reshaper.reshape(u'لكم في التسوق؟')
bidi_text = get_display(reshaped_text)
c_1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هذا القسم فيه ملابس كثيرة')
bidi_text = get_display(reshaped_text)
c_2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'بس لازم تركز وأنت تشتري.')
bidi_text = get_display(reshaped_text)
c_3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مثل ثوب - جكيت - نظارة - ساعة')
bidi_text = get_display(reshaped_text)
c_4 = bidi_text

c = [c_1,c_2,c_3,c_4]

# anime_info
reshaped_text = arabic_reshaper.reshape(u'هل انت اوتاكو؟')
bidi_text = get_display(reshaped_text)
a_1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تتابع أنمي أو كرتون')
bidi_text = get_display(reshaped_text)
a_2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'خلينا نرجع ذكريات زمان ')
bidi_text = get_display(reshaped_text)
a_3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مثل ناروتو - القناص - جزيرة الكنز - سالي')
bidi_text = get_display(reshaped_text)
a_4 = bidi_text

a = [a_1,a_2,a_3,a_4]

# series_info
reshaped_text = arabic_reshaper.reshape(u'لكم في المسلسلات والأفلام؟')
bidi_text = get_display(reshaped_text)
s_1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هذا القسم للسهرانين وعشاق المسلسلات')
bidi_text = get_display(reshaped_text)
s_2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ملاحظة: مسلسلات وأفلام أجنبية')
bidi_text = get_display(reshaped_text)
s_3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مثل لاكاسا - فريندز - الجوكر - حكاية لعبة')
bidi_text = get_display(reshaped_text)
s_4 = bidi_text

s = [s_1,s_2,s_3,s_4]

# i_info
reshaped_text = arabic_reshaper.reshape(u'تعرفوا كل أسماء الحيوانات؟')
bidi_text = get_display(reshaped_text)
i_1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'خلينا نختبركم ونروح معاكم في رحلة مغامرة')
bidi_text = get_display(reshaped_text)
i_2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مثل حصان - بقرة - قرش - نسر')
bidi_text = get_display(reshaped_text)
i_3 = bidi_text

i = [i_1,i_2,i_3]

reshaped_text = arabic_reshaper.reshape(u'أنمي')
bidi_text = get_display(reshaped_text)
ao = bidi_text
reshaped_text = arabic_reshaper.reshape(u'كرتون')
bidi_text = get_display(reshaped_text)
kz = bidi_text


def food_info():
    # Game Loop
    running = True
    while running:
        screen.fill(BG1)
        massage_to_screen(food,W,110,21,28)

        massage_to_screen(f[0],W,100,150,23)
        massage_to_screen(f[1],W,75,190,23)
        massage_to_screen(f[2],W,18,230,23)
        massage_to_screen(f[3],W,10,270,23)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_9 = pygame.Rect(220,16,70,40)
        button_1 = pygame.Rect(60,430,180,50)

        if button_9.collidepoint((mx, my)):
            if click:
                running = False
                start()
        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                player_f()
                
        pygame.draw.rect(screen, BO1, button_9)
        massage_to_screen(ex,W,233,21,22)
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(op,W,132,439,30)

        pygame.display.update()
        mainClock.tick(60)

def game_info():
    # Game Loop
    running = True
    while running:
        screen.fill(BG2)
        massage_to_screen(games,W,129,21,28)

        massage_to_screen(g[0],W,100,150,23)
        massage_to_screen(g[1],W,62,190,23)
        massage_to_screen(g[2],W,30,230,23)
        massage_to_screen(g[3],W,33,270,23)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_9 = pygame.Rect(220,16,70,40)
        button_1 = pygame.Rect(60,430,180,50)

        if button_9.collidepoint((mx, my)):
            if click:
                running = False
                start()
        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                player_g()
                
        pygame.draw.rect(screen, BO2, button_9)
        massage_to_screen(ex,W,233,21,22)
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(op,W,132,439,30)

        pygame.display.update()
        mainClock.tick(60)

def clothes_info():
    # Game Loop
    running = True
    while running:
        screen.fill(BG3)
        massage_to_screen(clothes,W,118,21,28)

        massage_to_screen(c[0],W,90,150,23)
        massage_to_screen(c[1],W,50,190,23)
        massage_to_screen(c[2],W,43,230,23)
        massage_to_screen(c[3],W,25,270,23)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_9 = pygame.Rect(220,16,70,40)
        button_1 = pygame.Rect(60,430,180,50)

        if button_9.collidepoint((mx, my)):
            if click:
                running = False
                start()
        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                player_c()
                
        pygame.draw.rect(screen, BO3, button_9)
        massage_to_screen(ex,W,233,21,22)
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(op,W,132,439,30)

        pygame.display.update()
        mainClock.tick(60)

def anime_info():
    # Game Loop
    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(anime,B,132,21,28)

        massage_to_screen(a[0],B,95,150,23)
        massage_to_screen(a[1],B,74,190,23)
        massage_to_screen(a[2],B,54,230,23)
        massage_to_screen(a[3],B,12,270,20)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True
                    
        mx, my = pygame.mouse.get_pos()

        button_9 = pygame.Rect(220,16,70,40)
        button_1 = pygame.Rect(160,430,120,50)
        button_2 = pygame.Rect(20,430,120,50)

        if button_9.collidepoint((mx, my)):
            if click:
                running = False
                start()
        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                player_a()
        if button_2.collidepoint((mx, my)):
            if click:
                running = False
                player_a1()
                
        pygame.draw.rect(screen, BO4, button_9)
        massage_to_screen(ex,W,233,21,22)
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(ao,W,195,439,30)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(kz,W,45,439,30)
        photo('img/logostoon.png', 25, 360)

        pygame.display.update()
        mainClock.tick(60)

def series_info():
    # Game Loop
    running = True
    while running:
        screen.fill(BG5)
        massage_to_screen(series,W,105,21,28)

        massage_to_screen(s[0],W,48,150,23)
        massage_to_screen(s[1],W,20,190,20)
        massage_to_screen(s[2],W,34,230,23)
        massage_to_screen(s[3],W,17,270,20)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_9 = pygame.Rect(220,16,70,40)
        button_1 = pygame.Rect(60,430,180,50)

        if button_9.collidepoint((mx, my)):
            if click:
                running = False
                start()
        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                player_s()
                
        pygame.draw.rect(screen, BO5, button_9)
        massage_to_screen(ex,W,233,21,22)
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(op,W,132,439,30)

        pygame.display.update()
        mainClock.tick(60)

def i_info():
    # Game Loop
    running = True
    while running:
        screen.fill(BG6)
        massage_to_screen(iz,W,112,21,28)
        
        massage_to_screen(i[0],W,50,160,23)
        massage_to_screen(i[1],W,9,210,20)
        massage_to_screen(i[2],W,33,260,23)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_9 = pygame.Rect(220,16,70,40)
        button_1 = pygame.Rect(60,430,180,50)

        if button_9.collidepoint((mx, my)):
            if click:
                running = False
                start()
        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                player_i()
                
        pygame.draw.rect(screen, BO6, button_9)
        massage_to_screen(ex,W,233,21,22)
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(op,W,132,439,30)

        pygame.display.update()
        mainClock.tick(60)
########################################################################

# Player Page
########################################################################

reshaped_text = arabic_reshaper.reshape(u'عدد اللاعبين')
bidi_text = get_display(reshaped_text)
nums = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أقل عدد لبدء اللعب هو ثلاث')
bidi_text = get_display(reshaped_text)
numi = bidi_text

#####
point1 = {'blue': 0 ,'red': 0 ,'green': 0}
point2 = {'blue': 0 ,'red': 0 ,'green': 0,'yellow': 0}
point3 = {'blue': 0 ,'red': 0 ,'green': 0,'yellow': 0,'pink': 0}
point4 = {'blue': 0 ,'red': 0 ,'green': 0,'yellow': 0,'pink': 0,'purple': 0}
point5 = {'blue': 0 ,'red': 0 ,'green': 0,'yellow': 0,'pink': 0,'purple': 0,'black': 0}
point6 = {'blue': 0 ,'red': 0 ,'green': 0,'yellow': 0,'pink': 0,'purple': 0,'black': 0,'white': 0}
#####
def player_f():
    global keydict
    
    point1['blue'] = 0
    point1['red'] = 0
    point1['green'] = 0

    point2['blue'] = 0
    point2['red'] = 0
    point2['green'] = 0
    point2['yellow'] = 0

    point3['blue'] = 0
    point3['red'] = 0
    point3['green'] = 0
    point3['yellow'] = 0
    point3['pink'] = 0

    point4['blue'] = 0
    point4['red'] = 0
    point4['green'] = 0
    point4['yellow'] = 0
    point4['pink'] = 0
    point4['purple'] = 0

    point5['blue'] = 0
    point5['red'] = 0
    point5['green'] = 0
    point5['yellow'] = 0
    point5['pink'] = 0
    point5['purple'] = 0
    point5['black'] = 0

    point6['blue'] = 0
    point6['red'] = 0
    point6['green'] = 0
    point6['yellow'] = 0
    point6['pink'] = 0
    point6['purple'] = 0
    point6['black'] = 0
    point6['white'] = 0
    
    running = True
    while running:
        screen.fill(BG1)
        massage_to_screen(nums,W,95,23,28)
        massage_to_screen(numi,W,46,110,24)
        massage_to_screen(esc,W,38,460,22)

        mx, my = pygame.mouse.get_pos()            

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        button_1 = pygame.Rect(210,170,60,60)
        button_2 = pygame.Rect(120,170,60,60)
        button_3 = pygame.Rect(30,170,60,60)
        button_4 = pygame.Rect(210,260,60,60)
        button_5 = pygame.Rect(120,260,60,60)
        button_6 = pygame.Rect(30,260,60,60)

        if button_1.collidepoint((mx, my)):
            if click:
                food_p3()
        if button_2.collidepoint((mx, my)):
            if click:
                food_p4()
        if button_3.collidepoint((mx, my)):
            if click:
                food_p5()
        if button_4.collidepoint((mx, my)):
            if click:
                food_p6()
        if button_5.collidepoint((mx, my)):
            if click:
                food_p7()
        if button_6.collidepoint((mx, my)):
            if click:
                food_p8()
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen('3',W,233,182,30)
        pygame.draw.rect(screen, BO1, button_2)
        massage_to_screen('4',W,142,182,30)
        pygame.draw.rect(screen, BO1, button_3)
        massage_to_screen('5',W,52,182,30)
        pygame.draw.rect(screen, BO1, button_4)
        massage_to_screen('6',W,232,272,30)
        pygame.draw.rect(screen, BO1, button_5)
        massage_to_screen('7',W,142,272,30)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen('8',W,52,272,30)

        pygame.display.update()
        mainClock.tick(60)

def player_g():
    global keydict

    point1['blue'] = 0
    point1['red'] = 0
    point1['green'] = 0

    point2['blue'] = 0
    point2['red'] = 0
    point2['green'] = 0
    point2['yellow'] = 0

    point3['blue'] = 0
    point3['red'] = 0
    point3['green'] = 0
    point3['yellow'] = 0
    point3['pink'] = 0

    point4['blue'] = 0
    point4['red'] = 0
    point4['green'] = 0
    point4['yellow'] = 0
    point4['pink'] = 0
    point4['purple'] = 0

    point5['blue'] = 0
    point5['red'] = 0
    point5['green'] = 0
    point5['yellow'] = 0
    point5['pink'] = 0
    point5['purple'] = 0
    point5['black'] = 0

    point6['blue'] = 0
    point6['red'] = 0
    point6['green'] = 0
    point6['yellow'] = 0
    point6['pink'] = 0
    point6['purple'] = 0
    point6['black'] = 0
    point6['white'] = 0
    
    running = True
    while running:
        screen.fill(BG2)
        massage_to_screen(nums,W,95,23,28)
        massage_to_screen(numi,W,46,110,24)
        massage_to_screen(esc,W,38,460,22)

        mx, my = pygame.mouse.get_pos()            

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        button_1 = pygame.Rect(210,170,60,60)
        button_2 = pygame.Rect(120,170,60,60)
        button_3 = pygame.Rect(30,170,60,60)
        button_4 = pygame.Rect(210,260,60,60)
        button_5 = pygame.Rect(120,260,60,60)
        button_6 = pygame.Rect(30,260,60,60)

        if button_1.collidepoint((mx, my)):
            if click:
                game_p3()
        if button_2.collidepoint((mx, my)):
            if click:
                game_p4()
        if button_3.collidepoint((mx, my)):
            if click:
                game_p5()
        if button_4.collidepoint((mx, my)):
            if click:
                game_p6()
        if button_5.collidepoint((mx, my)):
            if click:
                game_p7()
        if button_6.collidepoint((mx, my)):
            if click:
                game_p8()
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen('3',W,233,182,30)
        pygame.draw.rect(screen, BO2, button_2)
        massage_to_screen('4',W,142,182,30)
        pygame.draw.rect(screen, BO2, button_3)
        massage_to_screen('5',W,52,182,30)
        pygame.draw.rect(screen, BO2, button_4)
        massage_to_screen('6',W,232,272,30)
        pygame.draw.rect(screen, BO2, button_5)
        massage_to_screen('7',W,142,272,30)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen('8',W,52,272,30)

        pygame.display.update()
        mainClock.tick(60)

def player_c():
    global keydict

    point1['blue'] = 0
    point1['red'] = 0
    point1['green'] = 0

    point2['blue'] = 0
    point2['red'] = 0
    point2['green'] = 0
    point2['yellow'] = 0

    point3['blue'] = 0
    point3['red'] = 0
    point3['green'] = 0
    point3['yellow'] = 0
    point3['pink'] = 0

    point4['blue'] = 0
    point4['red'] = 0
    point4['green'] = 0
    point4['yellow'] = 0
    point4['pink'] = 0
    point4['purple'] = 0

    point5['blue'] = 0
    point5['red'] = 0
    point5['green'] = 0
    point5['yellow'] = 0
    point5['pink'] = 0
    point5['purple'] = 0
    point5['black'] = 0

    point6['blue'] = 0
    point6['red'] = 0
    point6['green'] = 0
    point6['yellow'] = 0
    point6['pink'] = 0
    point6['purple'] = 0
    point6['black'] = 0
    point6['white'] = 0
    
    running = True
    while running:
        screen.fill(BG3)
        massage_to_screen(nums,W,95,23,28)
        massage_to_screen(numi,W,46,110,24)
        massage_to_screen(esc,W,38,460,22)

        mx, my = pygame.mouse.get_pos()            

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        button_1 = pygame.Rect(210,170,60,60)
        button_2 = pygame.Rect(120,170,60,60)
        button_3 = pygame.Rect(30,170,60,60)
        button_4 = pygame.Rect(210,260,60,60)
        button_5 = pygame.Rect(120,260,60,60)
        button_6 = pygame.Rect(30,260,60,60)

        if button_1.collidepoint((mx, my)):
            if click:
                clothes_p3()
        if button_2.collidepoint((mx, my)):
            if click:
                clothes_p4()
        if button_3.collidepoint((mx, my)):
            if click:
                clothes_p5()
        if button_4.collidepoint((mx, my)):
            if click:
                clothes_p6()
        if button_5.collidepoint((mx, my)):
            if click:
                clothes_p7()
        if button_6.collidepoint((mx, my)):
            if click:
                clothes_p8()
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen('3',W,233,182,30)
        pygame.draw.rect(screen, BO3, button_2)
        massage_to_screen('4',W,142,182,30)
        pygame.draw.rect(screen, BO3, button_3)
        massage_to_screen('5',W,52,182,30)
        pygame.draw.rect(screen, BO3, button_4)
        massage_to_screen('6',W,232,272,30)
        pygame.draw.rect(screen, BO3, button_5)
        massage_to_screen('7',W,142,272,30)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen('8',W,52,272,30)

        pygame.display.update()
        mainClock.tick(60)

def player_a():
    global keydict

    point1['blue'] = 0
    point1['red'] = 0
    point1['green'] = 0

    point2['blue'] = 0
    point2['red'] = 0
    point2['green'] = 0
    point2['yellow'] = 0

    point3['blue'] = 0
    point3['red'] = 0
    point3['green'] = 0
    point3['yellow'] = 0
    point3['pink'] = 0

    point4['blue'] = 0
    point4['red'] = 0
    point4['green'] = 0
    point4['yellow'] = 0
    point4['pink'] = 0
    point4['purple'] = 0

    point5['blue'] = 0
    point5['red'] = 0
    point5['green'] = 0
    point5['yellow'] = 0
    point5['pink'] = 0
    point5['purple'] = 0
    point5['black'] = 0

    point6['blue'] = 0
    point6['red'] = 0
    point6['green'] = 0
    point6['yellow'] = 0
    point6['pink'] = 0
    point6['purple'] = 0
    point6['black'] = 0
    point6['white'] = 0
    
    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(nums,B,95,23,28)
        massage_to_screen(numi,B,46,110,24)
        massage_to_screen(esc,B,38,460,22)

        mx, my = pygame.mouse.get_pos()            

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        button_1 = pygame.Rect(210,170,60,60)
        button_2 = pygame.Rect(120,170,60,60)
        button_3 = pygame.Rect(30,170,60,60)
        button_4 = pygame.Rect(210,260,60,60)
        button_5 = pygame.Rect(120,260,60,60)
        button_6 = pygame.Rect(30,260,60,60)

        if button_1.collidepoint((mx, my)):
            if click:
                anime_p3()
        if button_2.collidepoint((mx, my)):
            if click:
                anime_p4()
        if button_3.collidepoint((mx, my)):
            if click:
                anime_p5()
        if button_4.collidepoint((mx, my)):
            if click:
                anime_p6()
        if button_5.collidepoint((mx, my)):
            if click:
                anime_p7()
        if button_6.collidepoint((mx, my)):
            if click:
                anime_p8()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen('3',W,233,182,30)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen('4',W,142,182,30)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen('5',W,52,182,30)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen('6',W,232,272,30)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen('7',W,142,272,30)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen('8',W,52,272,30)

        pygame.display.update()
        mainClock.tick(60)

def player_a1():
    global keydict

    point1['blue'] = 0
    point1['red'] = 0
    point1['green'] = 0

    point2['blue'] = 0
    point2['red'] = 0
    point2['green'] = 0
    point2['yellow'] = 0

    point3['blue'] = 0
    point3['red'] = 0
    point3['green'] = 0
    point3['yellow'] = 0
    point3['pink'] = 0

    point4['blue'] = 0
    point4['red'] = 0
    point4['green'] = 0
    point4['yellow'] = 0
    point4['pink'] = 0
    point4['purple'] = 0

    point5['blue'] = 0
    point5['red'] = 0
    point5['green'] = 0
    point5['yellow'] = 0
    point5['pink'] = 0
    point5['purple'] = 0
    point5['black'] = 0

    point6['blue'] = 0
    point6['red'] = 0
    point6['green'] = 0
    point6['yellow'] = 0
    point6['pink'] = 0
    point6['purple'] = 0
    point6['black'] = 0
    point6['white'] = 0
    
    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(nums,B,95,23,28)
        massage_to_screen(numi,B,46,110,24)
        massage_to_screen(esc,B,38,460,22)

        mx, my = pygame.mouse.get_pos()            

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        button_1 = pygame.Rect(210,170,60,60)
        button_2 = pygame.Rect(120,170,60,60)
        button_3 = pygame.Rect(30,170,60,60)
        button_4 = pygame.Rect(210,260,60,60)
        button_5 = pygame.Rect(120,260,60,60)
        button_6 = pygame.Rect(30,260,60,60)

        if button_1.collidepoint((mx, my)):
            if click:
                anime1_p3()
        if button_2.collidepoint((mx, my)):
            if click:
                anime1_p4()
        if button_3.collidepoint((mx, my)):
            if click:
                anime1_p5()
        if button_4.collidepoint((mx, my)):
            if click:
                anime1_p6()
        if button_5.collidepoint((mx, my)):
            if click:
                anime1_p7()
        if button_6.collidepoint((mx, my)):
            if click:
                anime1_p8()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen('3',W,233,182,30)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen('4',W,142,182,30)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen('5',W,52,182,30)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen('6',W,232,272,30)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen('7',W,142,272,30)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen('8',W,52,272,30)

        pygame.display.update()
        mainClock.tick(60)
        
def player_s():
    global keydict

    point1['blue'] = 0
    point1['red'] = 0
    point1['green'] = 0

    point2['blue'] = 0
    point2['red'] = 0
    point2['green'] = 0
    point2['yellow'] = 0

    point3['blue'] = 0
    point3['red'] = 0
    point3['green'] = 0
    point3['yellow'] = 0
    point3['pink'] = 0

    point4['blue'] = 0
    point4['red'] = 0
    point4['green'] = 0
    point4['yellow'] = 0
    point4['pink'] = 0
    point4['purple'] = 0

    point5['blue'] = 0
    point5['red'] = 0
    point5['green'] = 0
    point5['yellow'] = 0
    point5['pink'] = 0
    point5['purple'] = 0
    point5['black'] = 0

    point6['blue'] = 0
    point6['red'] = 0
    point6['green'] = 0
    point6['yellow'] = 0
    point6['pink'] = 0
    point6['purple'] = 0
    point6['black'] = 0
    point6['white'] = 0
    
    running = True
    while running:
        screen.fill(BG5)
        massage_to_screen(nums,W,95,23,28)
        massage_to_screen(numi,W,46,110,24)
        massage_to_screen(esc,W,38,460,22)

        mx, my = pygame.mouse.get_pos()            

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        button_1 = pygame.Rect(210,170,60,60)
        button_2 = pygame.Rect(120,170,60,60)
        button_3 = pygame.Rect(30,170,60,60)
        button_4 = pygame.Rect(210,260,60,60)
        button_5 = pygame.Rect(120,260,60,60)
        button_6 = pygame.Rect(30,260,60,60)

        if button_1.collidepoint((mx, my)):
            if click:
                series_p3()
        if button_2.collidepoint((mx, my)):
            if click:
                series_p4()
        if button_3.collidepoint((mx, my)):
            if click:
                series_p5()
        if button_4.collidepoint((mx, my)):
            if click:
                series_p6()
        if button_5.collidepoint((mx, my)):
            if click:
                series_p7()
        if button_6.collidepoint((mx, my)):
            if click:
                series_p8()
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen('3',W,233,182,30)
        pygame.draw.rect(screen, BO5, button_2)
        massage_to_screen('4',W,142,182,30)
        pygame.draw.rect(screen, BO5, button_3)
        massage_to_screen('5',W,52,182,30)
        pygame.draw.rect(screen, BO5, button_4)
        massage_to_screen('6',W,232,272,30)
        pygame.draw.rect(screen, BO5, button_5)
        massage_to_screen('7',W,142,272,30)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen('8',W,52,272,30)

        pygame.display.update()
        mainClock.tick(60)

def player_i():
    global keydict

    point1['blue'] = 0
    point1['red'] = 0
    point1['green'] = 0

    point2['blue'] = 0
    point2['red'] = 0
    point2['green'] = 0
    point2['yellow'] = 0

    point3['blue'] = 0
    point3['red'] = 0
    point3['green'] = 0
    point3['yellow'] = 0
    point3['pink'] = 0

    point4['blue'] = 0
    point4['red'] = 0
    point4['green'] = 0
    point4['yellow'] = 0
    point4['pink'] = 0
    point4['purple'] = 0

    point5['blue'] = 0
    point5['red'] = 0
    point5['green'] = 0
    point5['yellow'] = 0
    point5['pink'] = 0
    point5['purple'] = 0
    point5['black'] = 0

    point6['blue'] = 0
    point6['red'] = 0
    point6['green'] = 0
    point6['yellow'] = 0
    point6['pink'] = 0
    point6['purple'] = 0
    point6['black'] = 0
    point6['white'] = 0
    
    running = True
    while running:
        screen.fill(BG6)
        massage_to_screen(nums,W,95,23,28)
        massage_to_screen(numi,W,46,110,24)
        massage_to_screen(esc,W,38,460,22)

        mx, my = pygame.mouse.get_pos()            

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        button_1 = pygame.Rect(210,170,60,60)
        button_2 = pygame.Rect(120,170,60,60)
        button_3 = pygame.Rect(30,170,60,60)
        button_4 = pygame.Rect(210,260,60,60)
        button_5 = pygame.Rect(120,260,60,60)
        button_6 = pygame.Rect(30,260,60,60)

        if button_1.collidepoint((mx, my)):
            if click:
                i_p3()
        if button_2.collidepoint((mx, my)):
            if click:
                i_p4()
        if button_3.collidepoint((mx, my)):
            if click:
                i_p5()
        if button_4.collidepoint((mx, my)):
            if click:
                i_p6()
        if button_5.collidepoint((mx, my)):
            if click:
                i_p7()
        if button_6.collidepoint((mx, my)):
            if click:
                i_p8()
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen('3',W,233,182,30)
        pygame.draw.rect(screen, BO6, button_2)
        massage_to_screen('4',W,142,182,30)
        pygame.draw.rect(screen, BO6, button_3)
        massage_to_screen('5',W,52,182,30)
        pygame.draw.rect(screen, BO6, button_4)
        massage_to_screen('6',W,232,272,30)
        pygame.draw.rect(screen, BO6, button_5)
        massage_to_screen('7',W,142,272,30)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen('8',W,52,272,30)

        pygame.display.update()
        mainClock.tick(60)

########################################################################

# Player Color
########################################################################
reshaped_text = arabic_reshaper.reshape(u'أسماء اللاعبين')
bidi_text = get_display(reshaped_text)
np = bidi_text

reshaped_text = arabic_reshaper.reshape(u'الأزرق')
bidi_text = get_display(reshaped_text)
p_1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الأحمر')
bidi_text = get_display(reshaped_text)
p_2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الأخضر')
bidi_text = get_display(reshaped_text)
p_3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الأصفر')
bidi_text = get_display(reshaped_text)
p_4 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الوردي')
bidi_text = get_display(reshaped_text)
p_5 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'البنفسجي')
bidi_text = get_display(reshaped_text)
p_6 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الأسود')
bidi_text = get_display(reshaped_text)
p_7 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الأبيض')
bidi_text = get_display(reshaped_text)
p_8 = bidi_text

color_1 = [p_1,p_2,p_3]
color_2 = [p_1,p_2,p_3,p_4]
color_3 = [p_1,p_2,p_3,p_4,p_5]
color_4 = [p_1,p_2,p_3,p_4,p_5,p_6]
color_5 = [p_1,p_2,p_3,p_4,p_5,p_6,p_7]
color_6 = [p_1,p_2,p_3,p_4,p_5,p_6,p_7,p_8]

reshaped_text = arabic_reshaper.reshape(u'يجب على كل لاعب أن يختار لون كأسم له')
bidi_text = get_display(reshaped_text)
ti = bidi_text
reshaped_text = arabic_reshaper.reshape(u'ملاحظة : في البداية فقط')
bidi_text = get_display(reshaped_text)
ti1 = bidi_text

reshaped_text = arabic_reshaper.reshape(u'التالي')
bidi_text = get_display(reshaped_text)
nex = bidi_text
####################################

# Food 
####################################
def food_p3():
    global keydict
    ra = random.randrange(82)
    new_word = [food_words[ra]]
    new_food = [new_word[0],new_word[0]]
    ran = random.randrange(3)
    new_food.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG1)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)
        

        massage_to_screen(color_1[0],W,127,165,25)
        massage_to_screen(color_1[1],W,128,215,25)
        massage_to_screen(color_1[2],W,123,265,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp3_1(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def food_p4():
    global keydict

    ra = random.randrange(82)
    new_word = [food_words[ra]]
    new_food = [new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(4)
    new_food.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG1)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,127,165,25)
        massage_to_screen(color_1[1],W,128,215,25)
        massage_to_screen(color_1[2],W,123,265,25)
        massage_to_screen(color_6[3],W,126,315,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp4_1(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def food_p5():
    global keydict

    ra = random.randrange(82)
    new_word = [food_words[ra]]
    new_food = [new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(5)
    new_food.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG1)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)
        
        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp5_1(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def food_p6():
    global keydict

    ra = random.randrange(82)
    new_word = [food_words[ra]]
    new_food = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(6)
    new_food.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG1)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)
        
        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp6_1(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def food_p7():
    global keydict

    ra = random.randrange(82)
    new_word = [food_words[ra]]
    new_food = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(7)
    new_food.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG1)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        massage_to_screen(color_6[6],W,63,265,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_1(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def food_p8():
    global keydict

    ra = random.randrange(82)
    new_word = [food_words[ra]]
    new_food = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(8)
    new_food.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG1)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        massage_to_screen(color_6[6],W,63,265,25)
        massage_to_screen(color_6[7],W,60,315,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp8_1(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
####################################
        
# Game 
####################################
def game_p3():
    global keydict

    ra = random.randrange(95)
    new_word = [game_words[ra]]
    new_game = [new_word[0],new_word[0]]
    ran = random.randrange(3)
    new_game.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG2)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        
        massage_to_screen(color_1[0],W,127,165,25)
        massage_to_screen(color_1[1],W,128,215,25)
        massage_to_screen(color_1[2],W,123,265,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp3_1(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def game_p4():
    global keydict

    ra = random.randrange(95)
    new_word = [game_words[ra]]
    new_game = [new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(4)
    new_game.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG2)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,127,165,25)
        massage_to_screen(color_1[1],W,128,215,25)
        massage_to_screen(color_1[2],W,123,265,25)
        massage_to_screen(color_6[3],W,126,315,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp4_1(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def game_p5():
    global keydict

    ra = random.randrange(95)
    new_word = [game_words[ra]]
    new_game = [new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(5)
    new_game.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG2)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)
        
        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp5_1(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def game_p6():
    global keydict

    ra = random.randrange(95)
    new_word = [game_words[ra]]
    new_game = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(6)
    new_game.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG2)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)
        
        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp6_1(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def game_p7():
    global keydict

    ra = random.randrange(95)
    new_word = [game_words[ra]]
    new_game = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(7)
    new_game.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG2)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        massage_to_screen(color_6[6],W,63,265,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_1(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def game_p8():
    global keydict

    ra = random.randrange(95)
    new_word = [game_words[ra]]
    new_game = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(8)
    new_game.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG2)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        massage_to_screen(color_6[6],W,63,265,25)
        massage_to_screen(color_6[7],W,60,315,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp8_1(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
####################################
        
# Clothes
####################################
def clothes_p3():
    global keydict

    ra = random.randrange(35)
    new_word = [clothes_words[ra]]
    new_clothes = [new_word[0],new_word[0]]
    ran = random.randrange(3)
    new_clothes.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG3)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        
        massage_to_screen(color_1[0],W,127,165,25)
        massage_to_screen(color_1[1],W,128,215,25)
        massage_to_screen(color_1[2],W,123,265,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp3_1(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def clothes_p4():
    global keydict

    ra = random.randrange(35)
    new_word = [clothes_words[ra]]
    new_clothes = [new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(4)
    new_clothes.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG3)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,127,165,25)
        massage_to_screen(color_1[1],W,128,215,25)
        massage_to_screen(color_1[2],W,123,265,25)
        massage_to_screen(color_6[3],W,126,315,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp4_1(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def clothes_p5():
    global keydict

    ra = random.randrange(35)
    new_word = [clothes_words[ra]]
    new_clothes = [new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(5)
    new_clothes.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG3)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)
        
        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp5_1(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def clothes_p6():
    global keydict

    ra = random.randrange(35)
    new_word = [clothes_words[ra]]
    new_clothes = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(6)
    new_clothes.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG3)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)
        
        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp6_1(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def clothes_p7():
    global keydict

    ra = random.randrange(35)
    new_word = [clothes_words[ra]]
    new_clothes = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(7)
    new_clothes.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG3)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        massage_to_screen(color_6[6],W,63,265,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_1(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def clothes_p8():
    global keydict

    ra = random.randrange(35)
    new_word = [clothes_words[ra]]
    new_clothes = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(8)
    new_clothes.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG3)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        massage_to_screen(color_6[6],W,63,265,25)
        massage_to_screen(color_6[7],W,60,315,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp8_1(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
####################################
# Anime
####################################
def anime_p3():
    global keydict

    ra = random.randrange(70)
    new_word = [anime_words[ra]]
    new_anime = [new_word[0],new_word[0]]
    ran = random.randrange(3)
    new_anime.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(np,B,80,23,28)
        
        massage_to_screen(ti,B,13,100,21)
        massage_to_screen(ti1,B,87,130,17)
        
        massage_to_screen(color_1[0],B,127,165,25)
        massage_to_screen(color_1[1],B,128,215,25)
        massage_to_screen(color_1[2],B,123,265,25)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap3_1(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def anime_p4():
    global keydict

    ra = random.randrange(70)
    new_word = [anime_words[ra]]
    new_anime = [new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(4)
    new_anime.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(np,B,80,23,28)
        
        massage_to_screen(ti,B,13,100,21)
        massage_to_screen(ti1,B,87,130,17)

        massage_to_screen(color_1[0],B,127,165,25)
        massage_to_screen(color_1[1],B,128,215,25)
        massage_to_screen(color_1[2],B,123,265,25)
        massage_to_screen(color_6[3],B,126,315,25)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap4_1(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def anime_p5():
    global keydict

    ra = random.randrange(70)
    new_word = [anime_words[ra]]
    new_anime = [new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(5)
    new_anime.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(np,B,80,23,28)
        
        massage_to_screen(ti,B,13,100,21)
        massage_to_screen(ti1,B,87,130,17)
        
        massage_to_screen(color_1[0],B,188,165,25)
        massage_to_screen(color_1[1],B,188,215,25)
        massage_to_screen(color_1[2],B,183,265,25)
        massage_to_screen(color_6[3],B,186,315,25)
        massage_to_screen(color_6[4],B,60,165,25)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap5_1(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def anime_p6():
    global keydict

    ra = random.randrange(70)
    new_word = [anime_words[ra]]
    new_anime = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(6)
    new_anime.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(np,B,80,23,28)
        
        massage_to_screen(ti,B,13,100,21)
        massage_to_screen(ti1,B,87,130,17)
        
        massage_to_screen(color_1[0],B,188,165,25)
        massage_to_screen(color_1[1],B,188,215,25)
        massage_to_screen(color_1[2],B,183,265,25)
        massage_to_screen(color_6[3],B,186,315,25)
        massage_to_screen(color_6[4],B,60,165,25)
        massage_to_screen(color_6[5],B,50,215,25)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap6_1(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def anime_p7():
    global keydict

    ra = random.randrange(70)
    new_word = [anime_words[ra]]
    new_anime = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(7)
    new_anime.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(np,B,80,23,28)
        
        massage_to_screen(ti,B,13,100,21)
        massage_to_screen(ti1,B,87,130,17)

        massage_to_screen(color_1[0],B,188,165,25)
        massage_to_screen(color_1[1],B,188,215,25)
        massage_to_screen(color_1[2],B,183,265,25)
        massage_to_screen(color_6[3],B,186,315,25)
        massage_to_screen(color_6[4],B,60,165,25)
        massage_to_screen(color_6[5],B,50,215,25)
        massage_to_screen(color_6[6],B,63,265,25)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_1(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def anime_p8():
    global keydict

    ra = random.randrange(70)
    new_word = [anime_words[ra]]
    new_anime = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(8)
    new_anime.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(np,B,80,23,28)
        
        massage_to_screen(ti,B,13,100,21)
        massage_to_screen(ti1,B,87,130,17)

        massage_to_screen(color_1[0],B,188,165,25)
        massage_to_screen(color_1[1],B,188,215,25)
        massage_to_screen(color_1[2],B,183,265,25)
        massage_to_screen(color_6[3],B,186,315,25)
        massage_to_screen(color_6[4],B,60,165,25)
        massage_to_screen(color_6[5],B,50,215,25)
        massage_to_screen(color_6[6],B,63,265,25)
        massage_to_screen(color_6[7],B,60,315,25)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap8_1(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##########
def anime1_p3():
    global keydict

    ra = random.randrange(70)
    new_word = [anime1_words[ra]]
    new_anime1 = [new_word[0],new_word[0]]
    ran = random.randrange(3)
    new_anime1.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(np,B,80,23,28)
        
        massage_to_screen(ti,B,13,100,21)
        massage_to_screen(ti1,B,87,130,17)
        
        massage_to_screen(color_1[0],B,127,165,25)
        massage_to_screen(color_1[1],B,128,215,25)
        massage_to_screen(color_1[2],B,123,265,25)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp3_1(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def anime1_p4():
    global keydict

    ra = random.randrange(70)
    new_word = [anime1_words[ra]]
    new_anime1 = [new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(4)
    new_anime1.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(np,B,80,23,28)
        
        massage_to_screen(ti,B,13,100,21)
        massage_to_screen(ti1,B,87,130,17)

        massage_to_screen(color_1[0],B,127,165,25)
        massage_to_screen(color_1[1],B,128,215,25)
        massage_to_screen(color_1[2],B,123,265,25)
        massage_to_screen(color_6[3],B,126,315,25)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp4_1(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def anime1_p5():
    global keydict

    ra = random.randrange(70)
    new_word = [anime1_words[ra]]
    new_anime1 = [new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(5)
    new_anime1.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(np,B,80,23,28)
        
        massage_to_screen(ti,B,13,100,21)
        massage_to_screen(ti1,B,87,130,17)
        
        massage_to_screen(color_1[0],B,188,165,25)
        massage_to_screen(color_1[1],B,188,215,25)
        massage_to_screen(color_1[2],B,183,265,25)
        massage_to_screen(color_6[3],B,186,315,25)
        massage_to_screen(color_6[4],B,60,165,25)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp5_1(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def anime1_p6():
    global keydict

    ra = random.randrange(70)
    new_word = [anime1_words[ra]]
    new_anime1 = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(6)
    new_anime1.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(np,B,80,23,28)
        
        massage_to_screen(ti,B,13,100,21)
        massage_to_screen(ti1,B,87,130,17)
        
        massage_to_screen(color_1[0],B,188,165,25)
        massage_to_screen(color_1[1],B,188,215,25)
        massage_to_screen(color_1[2],B,183,265,25)
        massage_to_screen(color_6[3],B,186,315,25)
        massage_to_screen(color_6[4],B,60,165,25)
        massage_to_screen(color_6[5],B,50,215,25)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp6_1(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def anime1_p7():
    global keydict

    ra = random.randrange(70)
    new_word = [anime1_words[ra]]
    new_anime1 = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(7)
    new_anime1.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(np,B,80,23,28)
        
        massage_to_screen(ti,B,13,100,21)
        massage_to_screen(ti1,B,87,130,17)

        massage_to_screen(color_1[0],B,188,165,25)
        massage_to_screen(color_1[1],B,188,215,25)
        massage_to_screen(color_1[2],B,183,265,25)
        massage_to_screen(color_6[3],B,186,315,25)
        massage_to_screen(color_6[4],B,60,165,25)
        massage_to_screen(color_6[5],B,50,215,25)
        massage_to_screen(color_6[6],B,63,265,25)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_1(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def anime1_p8():
    global keydict

    ra = random.randrange(70)
    new_word = [anime1_words[ra]]
    new_anime1 = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(8)
    new_anime1.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG4)
        massage_to_screen(np,B,80,23,28)
        
        massage_to_screen(ti,B,13,100,21)
        massage_to_screen(ti1,B,87,130,17)

        massage_to_screen(color_1[0],B,188,165,25)
        massage_to_screen(color_1[1],B,188,215,25)
        massage_to_screen(color_1[2],B,183,265,25)
        massage_to_screen(color_6[3],B,186,315,25)
        massage_to_screen(color_6[4],B,60,165,25)
        massage_to_screen(color_6[5],B,50,215,25)
        massage_to_screen(color_6[6],B,63,265,25)
        massage_to_screen(color_6[7],B,60,315,25)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp8_1(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
####################################
# Series
####################################
def series_p3():
    global keydict

    ra = random.randrange(100)
    new_word = [series_words[ra]]
    new_series = [new_word[0],new_word[0]]
    ran = random.randrange(3)
    new_series.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG5)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)
        
        massage_to_screen(color_1[0],W,127,165,25)
        massage_to_screen(color_1[1],W,128,215,25)
        massage_to_screen(color_1[2],W,123,265,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp3_1(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def series_p4():
    global keydict

    ra = random.randrange(100)
    new_word = [series_words[ra]]
    new_series = [new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(4)
    new_series.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG5)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,127,165,25)
        massage_to_screen(color_1[1],W,128,215,25)
        massage_to_screen(color_1[2],W,123,265,25)
        massage_to_screen(color_6[3],W,126,315,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp4_1(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def series_p5():
    global keydict

    ra = random.randrange(100)
    new_word = [series_words[ra]]
    new_series = [new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(5)

    running = True
    while running:
        screen.fill(BG5)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)
        
        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp5_1(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def series_p6():
    global keydict

    ra = random.randrange(100)
    new_word = [series_words[ra]]
    new_series = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(6)
    new_series.insert(ran,tit1)


    running = True
    while running:
        screen.fill(BG5)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)
        
        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp6_1(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def series_p7():
    global keydict

    ra = random.randrange(100)
    new_word = [series_words[ra]]
    new_series = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(7)
    new_series.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG5)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        massage_to_screen(color_6[6],W,63,265,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_1(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def series_p8():
    global keydict

    ra = random.randrange(100)
    new_word = [series_words[ra]]
    new_series = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(8)
    new_series.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG5)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        massage_to_screen(color_6[6],W,63,265,25)
        massage_to_screen(color_6[7],W,60,315,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp8_1(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
####################################
# i
####################################
def i_p3():
    global keydict

    ra = random.randrange(82)
    new_word = [i_words[ra]]
    new_i = [new_word[0],new_word[0]]
    ran = random.randrange(3)
    new_i.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG6)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)
        
        massage_to_screen(color_1[0],W,127,165,25)
        massage_to_screen(color_1[1],W,128,215,25)
        massage_to_screen(color_1[2],W,123,265,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip3_1(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def i_p4():
    global keydict

    ra = random.randrange(82)
    new_word = [i_words[ra]]
    new_i = [new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(4)
    new_i.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG6)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,127,165,25)
        massage_to_screen(color_1[1],W,128,215,25)
        massage_to_screen(color_1[2],W,123,265,25)
        massage_to_screen(color_6[3],W,126,315,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip4_1(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def i_p5():
    global keydict

    ra = random.randrange(82)
    new_word = [i_words[ra]]
    new_i = [new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(5)
    new_i.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG6)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)
        
        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip5_1(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def i_p6():
    global keydict

    ra = random.randrange(82)
    new_word = [i_words[ra]]
    new_i = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(6)
    new_i.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG6)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)
        
        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip6_1(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def i_p7():
    global keydict

    ra = random.randrange(82)
    new_word = [i_words[ra]]
    new_i = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(7)
    new_i.insert(ran,tit1)

    running = True
    while running:
        screen.fill(BG6)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        massage_to_screen(color_6[6],W,63,265,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_1(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def i_p8():
    global keydict

    ra = random.randrange(82)
    new_word = [i_words[ra]]
    new_i = [new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0],new_word[0]]
    ran = random.randrange(8)
    new_i.insert(ran,tit1)
    
    running = True
    while running:
        screen.fill(BG6)
        massage_to_screen(np,W,80,23,28)
        
        massage_to_screen(ti,W,13,100,21)
        massage_to_screen(ti1,W,87,130,17)

        massage_to_screen(color_1[0],W,188,165,25)
        massage_to_screen(color_1[1],W,188,215,25)
        massage_to_screen(color_1[2],W,183,265,25)
        massage_to_screen(color_6[3],W,186,315,25)
        massage_to_screen(color_6[4],W,60,165,25)
        massage_to_screen(color_6[5],W,50,215,25)
        massage_to_screen(color_6[6],W,63,265,25)
        massage_to_screen(color_6[7],W,60,315,25)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip8_1(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
########################################################################
        
# Game Page
########################################################################
reshaped_text = arabic_reshaper.reshape(u'اللاعب : ')
bidi_text = get_display(reshaped_text)
non = bidi_text

reshaped_text = arabic_reshaper.reshape(u'اضغط التالي عشان')
bidi_text = get_display(reshaped_text)
no_1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'تعرف الكلمة أو إذا أنت الملقوف')
bidi_text = get_display(reshaped_text)
no_2 = bidi_text

reshaped_text = arabic_reshaper.reshape(u'الكلمة هي')
bidi_text = get_display(reshaped_text)
no_3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'لا تقول لأحد الكلمة')
bidi_text = get_display(reshaped_text)
no_4 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'إذا أنت الملقوف لا تقول لأحد')
bidi_text = get_display(reshaped_text)
no_5 = bidi_text

# Food
#############################################
# Food Player 3
##################################
def fp3_1(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_1[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp3_2(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp3_2(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp3_3(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
    
def fp3_3(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_1[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp3_4(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp3_4(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp3_5(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp3_5(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_1[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp3_6(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp3_6(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fqz3(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# Food Player 4
##################################
def fp4_1(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_2[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp4_2(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp4_2(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp4_3(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp4_3(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_2[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp4_4(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp4_4(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp4_5(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp4_5(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_2[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp4_6(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp4_6(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp4_7(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp4_7(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_2[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp4_8(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp4_8(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fqz4(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

##################################
# Food Player 5
##################################
def fp5_1(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_3[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp5_2(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp5_2(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp5_3(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp5_3(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_3[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp5_4(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp5_4(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp5_5(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp5_5(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_3[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp5_6(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp5_6(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp5_7(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp5_7(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_3[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp5_8(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp5_8(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp5_9(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def fp5_9(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_3[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp5_10(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp5_10(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fqz5(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# Food Player 6
##################################
def fp6_1(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_4[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp6_2(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp6_2(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp6_3(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp6_3(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_4[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp6_4(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp6_4(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp6_5(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp6_5(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_4[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp6_6(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp6_6(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp6_7(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp6_7(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_4[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp6_8(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp6_8(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp6_9(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def fp6_9(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_4[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp6_10(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp6_10(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp6_11(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp6_11(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_4[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp6_12(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp6_12(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fqz6(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# Food Player 7
##################################
def fp7_1(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_5[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_2(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp7_2(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_3(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp7_3(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_5[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_4(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp7_4(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_5(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp7_5(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_5[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_6(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp7_6(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_7(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp7_7(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_5[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_8(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp7_8(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_9(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def fp7_9(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_5[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_10(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp7_10(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_11(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp7_11(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_5[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_12(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp7_12(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_13(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp7_13(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(color_5[6],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fp7_14(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def fp7_14(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[6],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                fqz7(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# Food Player 8
##################################
#
def fp8_1(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(color_6[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_2(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_2(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_3(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_3(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(color_6[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_4(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_4(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_5(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_5(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(color_6[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_6(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_6(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_7(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_7(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(color_6[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_8(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_8(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_9(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_9(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(color_6[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_10(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_10(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_11(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_11(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(color_6[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_12(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_12(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_13(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_13(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(color_6[6],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_14(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_14(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[6],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_15(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_15(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(color_6[7],W,45,40,40)
        massage_to_screen(non,W,135,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fp8_16(new_food,ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def fp8_16(new_food,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_food[7],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                fqz8(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

#############################################
# Game
#############################################
# Game Player 3
##################################
def gp3_1(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_1[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp3_2(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp3_2(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp3_3(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
    
def gp3_3(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_1[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp3_4(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp3_4(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp3_5(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp3_5(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_1[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp3_6(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp3_6(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gqz3(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# Game Player 4
##################################
def gp4_1(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_2[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp4_2(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp4_2(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp4_3(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp4_3(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_2[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp4_4(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp4_4(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp4_5(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp4_5(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_2[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp4_6(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp4_6(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp4_7(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp4_7(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_2[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp4_8(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp4_8(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gqz4(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

##################################
# Game Player 5
##################################
def gp5_1(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_3[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp5_2(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp5_2(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp5_3(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp5_3(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_3[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp5_4(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp5_4(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp5_5(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp5_5(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_3[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp5_6(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp5_6(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp5_7(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp5_7(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_3[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp5_8(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp5_8(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp5_9(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def gp5_9(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_3[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp5_10(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp5_10(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gqz5(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# game Player 6
##################################
def gp6_1(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_4[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp6_2(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp6_2(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp6_3(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp6_3(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_4[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp6_4(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp6_4(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp6_5(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp6_5(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_4[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp6_6(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp6_6(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp6_7(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp6_7(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_4[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp6_8(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp6_8(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp6_9(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def gp6_9(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_4[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp6_10(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp6_10(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp6_11(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp6_11(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_4[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp6_12(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp6_12(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gqz6(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# game Player 7
##################################
def gp7_1(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_5[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_2(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp7_2(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_3(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp7_3(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_5[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_4(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp7_4(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_5(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp7_5(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_5[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_6(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp7_6(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_7(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp7_7(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_5[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_8(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp7_8(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_9(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def gp7_9(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_5[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_10(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp7_10(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_11(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp7_11(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_5[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_12(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp7_12(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_13(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp7_13(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(color_5[6],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gp7_14(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def gp7_14(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[6],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                gqz7(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# game Player 8
##################################
#
def gp8_1(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(color_6[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_2(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_2(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_3(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_3(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(color_6[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_4(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_4(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_5(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_5(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(color_6[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_6(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_6(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_7(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_7(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(color_6[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_8(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_8(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_9(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_9(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(color_6[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_10(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_10(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_11(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_11(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(color_6[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_12(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_12(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_13(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_13(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(color_6[6],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_14(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_14(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[6],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_15(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_15(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(color_6[7],W,45,40,40)
        massage_to_screen(non,W,135,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gp8_16(new_game,ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def gp8_16(new_game,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_game[7],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                gqz8(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

#############################################
# clothes
#############################################
# clothes player 3
##################################
def cp3_1(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_1[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp3_2(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp3_2(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp3_3(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
    
def cp3_3(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_1[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp3_4(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp3_4(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp3_5(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp3_5(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_1[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp3_6(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp3_6(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cqz3(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# clothes player 4
##################################
def cp4_1(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_2[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp4_2(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp4_2(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp4_3(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp4_3(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_2[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp4_4(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp4_4(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp4_5(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp4_5(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_2[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp4_6(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp4_6(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp4_7(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp4_7(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_2[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp4_8(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp4_8(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cqz4(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

##################################
# clothes player 5
##################################
def cp5_1(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_3[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp5_2(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp5_2(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp5_3(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp5_3(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_3[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp5_4(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp5_4(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp5_5(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp5_5(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_3[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp5_6(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp5_6(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp5_7(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp5_7(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_3[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp5_8(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp5_8(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp5_9(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def cp5_9(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_3[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp5_10(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp5_10(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cqz5(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# clothes player 6
##################################
def cp6_1(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_4[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp6_2(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp6_2(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp6_3(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp6_3(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_4[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp6_4(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp6_4(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp6_5(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp6_5(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_4[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp6_6(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp6_6(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp6_7(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp6_7(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_4[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp6_8(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp6_8(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp6_9(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def cp6_9(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_4[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp6_10(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp6_10(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp6_11(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp6_11(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_4[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp6_12(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp6_12(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cqz6(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# clothes player 7
##################################
def cp7_1(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_5[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_2(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp7_2(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_3(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp7_3(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_5[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_4(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp7_4(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_5(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp7_5(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_5[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_6(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp7_6(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_7(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp7_7(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_5[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_8(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp7_8(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_9(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def cp7_9(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_5[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_10(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp7_10(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_11(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp7_11(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_5[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_12(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp7_12(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_13(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp7_13(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(color_5[6],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cp7_14(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def cp7_14(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[6],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                cqz7(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# clothes player 8
##################################
#
def cp8_1(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(color_6[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_2(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_2(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_3(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_3(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(color_6[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_4(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_4(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_5(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_5(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(color_6[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_6(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_6(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_7(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_7(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(color_6[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_8(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_8(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_9(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_9(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(color_6[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_10(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_10(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_11(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_11(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(color_6[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_12(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_12(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_13(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_13(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(color_6[6],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_14(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_14(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[6],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_15(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_15(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(color_6[7],W,45,40,40)
        massage_to_screen(non,W,135,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cp8_16(new_clothes,ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def cp8_16(new_clothes,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_clothes[7],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                cqz8(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

#############################################
# anime
#############################################
# anime player 3
##################################
def ap3_1(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_1[0],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap3_2(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap3_2(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[0],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap3_3(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
    
def ap3_3(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_1[1],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap3_4(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap3_4(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[1],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap3_5(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap3_5(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_1[2],B,40,40,40)
        massage_to_screen(non,B,139,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap3_6(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap3_6(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[2],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                aqz3(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# anime player 4
##################################
def ap4_1(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_2[0],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap4_2(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap4_2(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[0],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap4_3(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap4_3(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_2[1],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap4_4(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap4_4(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[1],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap4_5(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap4_5(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_2[2],B,40,40,40)
        massage_to_screen(non,B,139,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap4_6(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap4_6(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[2],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap4_7(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap4_7(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_2[3],B,45,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap4_8(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap4_8(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[3],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                aqz4(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

##################################
# anime player 5
##################################
def ap5_1(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_3[0],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap5_2(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap5_2(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[0],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap5_3(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap5_3(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_3[1],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap5_4(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap5_4(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[1],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap5_5(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap5_5(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_3[2],B,40,40,40)
        massage_to_screen(non,B,139,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap5_6(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap5_6(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[2],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap5_7(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap5_7(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_3[3],B,45,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap5_8(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap5_8(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[3],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap5_9(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def ap5_9(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_3[4],B,41,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap5_10(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap5_10(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[4],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                aqz5(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# anime player 6
##################################
def ap6_1(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_4[0],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap6_2(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap6_2(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[0],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap6_3(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap6_3(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_4[1],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap6_4(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap6_4(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[1],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap6_5(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap6_5(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_4[2],B,40,40,40)
        massage_to_screen(non,B,139,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap6_6(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap6_6(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[2],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap6_7(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap6_7(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_4[3],B,45,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap6_8(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap6_8(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[3],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap6_9(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def ap6_9(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_4[4],B,41,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap6_10(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap6_10(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[4],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap6_11(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap6_11(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_4[5],B,33,40,39)
        massage_to_screen(non,B,147,36,39)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap6_12(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap6_12(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[5],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                aqz6(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# anime player 7
##################################
def ap7_1(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[0],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_2(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap7_2(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[0],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_3(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap7_3(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[1],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_4(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap7_4(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[1],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_5(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap7_5(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[2],B,40,40,40)
        massage_to_screen(non,B,139,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_6(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap7_6(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[2],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_7(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap7_7(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[3],B,45,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_8(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap7_8(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[3],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_9(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def ap7_9(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[4],B,41,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_10(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap7_10(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[4],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_11(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap7_11(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[5],B,33,40,39)
        massage_to_screen(non,B,147,36,39)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_12(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap7_12(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[5],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_13(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap7_13(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[6],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ap7_14(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ap7_14(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[6],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                aqz7(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# anime player 8
##################################
#
def ap8_1(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[0],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_2(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_2(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[0],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_3(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_3(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[1],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_4(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_4(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[1],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_5(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_5(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[2],B,40,40,40)
        massage_to_screen(non,B,139,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_6(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_6(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[2],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_7(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_7(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[3],B,45,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_8(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_8(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[3],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_9(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_9(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[4],B,41,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_10(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_10(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[4],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_11(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_11(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[5],B,33,40,39)
        massage_to_screen(non,B,147,36,39)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_12(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_12(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[5],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_13(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_13(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[6],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_14(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_14(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[6],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_15(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_15(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[7],B,45,40,40)
        massage_to_screen(non,B,135,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ap8_16(new_anime,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ap8_16(new_anime,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime[7],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                aqz8(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#########################
# Cartoon
#########################
# Cartoon player 3
##################################
def kp3_1(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_1[0],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp3_2(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp3_2(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[0],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp3_3(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
    
def kp3_3(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_1[1],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp3_4(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp3_4(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[1],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp3_5(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp3_5(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_1[2],B,40,40,40)
        massage_to_screen(non,B,139,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp3_6(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp3_6(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[2],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kqz3(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# Cartoon player 4
##################################
def kp4_1(new_anime11,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_2[0],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp4_2(new_anime11,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp4_2(new_anime11,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime11[0],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp4_3(new_anime11,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp4_3(new_anime11,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_2[1],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp4_4(new_anime11,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp4_4(new_anime11,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime11[1],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp4_5(new_anime11,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp4_5(new_anime11,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_2[2],B,40,40,40)
        massage_to_screen(non,B,139,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp4_6(new_anime11,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp4_6(new_anime11,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime11[2],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp4_7(new_anime11,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp4_7(new_anime11,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_2[3],B,45,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp4_8(new_anime11,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp4_8(new_anime11,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime11[3],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kqz4(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

##################################
# Cartoon player 5
##################################
def kp5_1(new_anime11,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_3[0],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp5_2(new_anime11,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp5_2(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[0],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp5_3(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp5_3(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_3[1],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp5_4(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp5_4(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[1],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp5_5(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp5_5(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_3[2],B,40,40,40)
        massage_to_screen(non,B,139,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp5_6(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp5_6(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[2],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp5_7(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp5_7(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_3[3],B,45,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp5_8(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp5_8(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[3],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp5_9(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def kp5_9(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_3[4],B,41,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp5_10(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp5_10(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[4],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kqz5(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# Cartoon player 6
##################################
def kp6_1(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_4[0],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp6_2(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp6_2(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[0],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp6_3(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp6_3(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_4[1],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp6_4(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp6_4(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[1],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp6_5(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp6_5(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_4[2],B,40,40,40)
        massage_to_screen(non,B,139,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp6_6(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp6_6(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[2],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp6_7(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp6_7(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_4[3],B,45,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp6_8(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp6_8(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[3],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp6_9(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def kp6_9(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_4[4],B,41,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp6_10(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp6_10(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[4],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp6_11(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp6_11(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_4[5],B,33,40,39)
        massage_to_screen(non,B,147,36,39)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp6_12(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp6_12(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[5],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kqz6(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# Cartoon player 7
##################################
def kp7_1(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[0],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_2(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp7_2(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[0],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_3(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp7_3(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[1],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_4(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp7_4(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[1],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_5(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp7_5(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[2],B,40,40,40)
        massage_to_screen(non,B,139,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_6(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp7_6(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[2],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_7(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp7_7(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[3],B,45,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_8(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp7_8(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[3],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_9(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def kp7_9(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[4],B,41,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_10(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp7_10(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[4],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_11(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp7_11(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[5],B,33,40,39)
        massage_to_screen(non,B,147,36,39)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_12(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp7_12(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[5],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_13(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp7_13(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(color_5[6],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kp7_14(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def kp7_14(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[6],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                kqz7(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# Cartoon player 8
##################################
#
def kp8_1(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[0],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)
        
        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_2(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_2(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[0],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_3(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_3(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[1],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_4(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_4(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[1],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_5(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_5(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[2],B,40,40,40)
        massage_to_screen(non,B,139,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_6(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_6(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[2],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_7(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_7(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[3],B,45,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_8(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_8(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[3],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_9(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_9(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[4],B,41,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_10(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_10(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[4],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_11(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_11(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[5],B,33,40,39)
        massage_to_screen(non,B,147,36,39)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_12(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_12(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[5],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_13(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_13(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[6],B,50,40,40)
        massage_to_screen(non,B,130,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_14(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_14(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[6],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_15(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_15(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(color_6[7],B,45,40,40)
        massage_to_screen(non,B,135,36,40)

        massage_to_screen(no_1,B,85,180,22)
        massage_to_screen(no_2,B,35,220,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kp8_16(new_anime1,ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def kp8_16(new_anime1,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(no_3,B,108,30,27)

        massage_to_screen(new_anime1[7],B,120,180,24)

        massage_to_screen(no_4,B,85,290,22)
        massage_to_screen(no_5,B,48,330,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                kqz8(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#############################################
# Series
#############################################
# series player 3
##################################
def sp3_1(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_1[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp3_2(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp3_2(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp3_3(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
    
def sp3_3(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_1[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp3_4(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp3_4(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp3_5(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp3_5(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_1[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp3_6(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp3_6(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sqz3(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# series player 4
##################################
def sp4_1(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_2[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp4_2(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp4_2(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp4_3(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp4_3(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_2[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp4_4(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp4_4(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp4_5(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp4_5(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_2[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp4_6(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp4_6(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp4_7(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp4_7(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_2[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp4_8(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp4_8(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sqz4(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

##################################
# series player 5
##################################
def sp5_1(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_3[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp5_2(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp5_2(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp5_3(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp5_3(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_3[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp5_4(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp5_4(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp5_5(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp5_5(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_3[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp5_6(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp5_6(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp5_7(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp5_7(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_3[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp5_8(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp5_8(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp5_9(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def sp5_9(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_3[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp5_10(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp5_10(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sqz5(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# series player 6
##################################
def sp6_1(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_4[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp6_2(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp6_2(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp6_3(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp6_3(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_4[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp6_4(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp6_4(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp6_5(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp6_5(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_4[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp6_6(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp6_6(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp6_7(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp6_7(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_4[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp6_8(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp6_8(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp6_9(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def sp6_9(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_4[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp6_10(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp6_10(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp6_11(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp6_11(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_4[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp6_12(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp6_12(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sqz6(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# series player 7
##################################
def sp7_1(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_5[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_2(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp7_2(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_3(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp7_3(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_5[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_4(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp7_4(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_5(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp7_5(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_5[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_6(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp7_6(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_7(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp7_7(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_5[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_8(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp7_8(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_9(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def sp7_9(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_5[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_10(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp7_10(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_11(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp7_11(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_5[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_12(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp7_12(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_13(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp7_13(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(color_5[6],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sp7_14(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def sp7_14(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[6],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                sqz7(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# series player 8
##################################
#
def sp8_1(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(color_6[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_2(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_2(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_3(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_3(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(color_6[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_4(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_4(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_5(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_5(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(color_6[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_6(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_6(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_7(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_7(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(color_6[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_8(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_8(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_9(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_9(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(color_6[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_10(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_10(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_11(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_11(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(color_6[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_12(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_12(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_13(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_13(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(color_6[6],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_14(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_14(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[6],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_15(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_15(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(color_6[7],W,45,40,40)
        massage_to_screen(non,W,135,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sp8_16(new_series,ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def sp8_16(new_series,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_series[7],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                sqz8(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

#############################################
# i
#############################################
# i player 3
##################################
def ip3_1(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_1[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip3_2(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip3_2(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip3_3(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
    
def ip3_3(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_1[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip3_4(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip3_4(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip3_5(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip3_5(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_1[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip3_6(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip3_6(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                iqz3(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# i player 4
##################################
def ip4_1(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_2[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip4_2(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip4_2(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip4_3(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip4_3(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_2[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip4_4(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip4_4(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip4_5(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip4_5(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_2[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip4_6(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip4_6(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip4_7(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip4_7(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_2[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip4_8(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip4_8(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                iqz4(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

##################################
# i player 5
##################################
def ip5_1(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_3[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip5_2(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip5_2(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip5_3(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip5_3(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_3[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip5_4(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip5_4(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip5_5(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip5_5(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_3[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip5_6(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip5_6(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip5_7(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip5_7(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_3[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip5_8(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip5_8(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip5_9(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def ip5_9(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_3[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip5_10(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip5_10(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                iqz5(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# i player 6
##################################
def ip6_1(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_4[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip6_2(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip6_2(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip6_3(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip6_3(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_4[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip6_4(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip6_4(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip6_5(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip6_5(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_4[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip6_6(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip6_6(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip6_7(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip6_7(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_4[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip6_8(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip6_8(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip6_9(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def ip6_9(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_4[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip6_10(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip6_10(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip6_11(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip6_11(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_4[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip6_12(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip6_12(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                iqz6(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# i player 7
##################################
def ip7_1(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_5[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_2(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip7_2(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_3(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip7_3(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_5[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_4(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip7_4(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_5(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip7_5(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_5[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_6(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip7_6(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_7(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip7_7(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_5[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_8(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip7_8(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_9(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

def ip7_9(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_5[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_10(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip7_10(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_11(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip7_11(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_5[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_12(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip7_12(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_13(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip7_13(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(color_5[6],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                ip7_14(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
def ip7_14(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[6],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                iqz7(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# i player 8
##################################
#
def ip8_1(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(color_6[0],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)
        
        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_2(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_2(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[0],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_3(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_3(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(color_6[1],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_4(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_4(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[1],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_5(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_5(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(color_6[2],W,40,40,40)
        massage_to_screen(non,W,139,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_6(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_6(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[2],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_7(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_7(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(color_6[3],W,45,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_8(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_8(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[3],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_9(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_9(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(color_6[4],W,41,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_10(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_10(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[4],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_11(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_11(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(color_6[5],W,33,40,39)
        massage_to_screen(non,W,147,36,39)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_12(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_12(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[5],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_13(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_13(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(color_6[6],W,50,40,40)
        massage_to_screen(non,W,130,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_14(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_14(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[6],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_15(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_15(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(color_6[7],W,45,40,40)
        massage_to_screen(non,W,135,36,40)

        massage_to_screen(no_1,W,85,180,22)
        massage_to_screen(no_2,W,35,220,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ip8_16(new_i,ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)
#
def ip8_16(new_i,ran,ra):
    global keydict
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(no_3,W,108,30,27)

        massage_to_screen(new_i[7],W,120,180,24)

        massage_to_screen(no_4,W,85,290,22)
        massage_to_screen(no_5,W,48,330,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                iqz8(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(nex,W,122,405,30)

        pygame.display.update()
        mainClock.tick(60)

#############################################

########################################################################
        
### Question Time
########################################################################
reshaped_text = arabic_reshaper.reshape(u'التصويت')
bidi_text = get_display(reshaped_text)
q1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'يبدأ السؤال اللاعب :')
bidi_text = get_display(reshaped_text)
qu1 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'يسأل لاعب من اختياره عن الكلمة بدون ذكر ما')
bidi_text = get_display(reshaped_text)
qu2 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'هي لمعرفة الشخص الملقوف, ثم على اللاعب')
bidi_text = get_display(reshaped_text)
qu3 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الأخر طرح سؤال على شخص  آخر  وهكذا إلى')
bidi_text = get_display(reshaped_text)
qu4 = bidi_text
reshaped_text = arabic_reshaper.reshape(u'أن ينتهي الجميع من طرح الأسئلة.')
bidi_text = get_display(reshaped_text)
qu5 = bidi_text
# Food
##################################
# 3
def fqz3(ran,ra):
    global keydict
    rf1 = random.randrange(3)
    
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_1[rf1],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)
        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_f3_1(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 4
def fqz4(ran,ra):
    global keydict
    rf2 = random.randrange(4)
    
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_2[rf2],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)
        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_f4_1(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 5
def fqz5(ran,ra):
    global keydict
    rf3 = random.randrange(5)
    
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_3[rf3],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_f5_1(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 6
def fqz6(ran,ra):
    global keydict
    rf4 = random.randrange(6)

    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_4[rf4],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_f6_1(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 7
def fqz7(ran,ra):
    global keydict
    rf5 = random.randrange(7)
    
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_5[rf5],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_f7_1(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(q1,W,107,408,30)
        pygame.display.update()
        mainClock.tick(60)
# 8
def fqz8(ran,ra):
    global keydict
    rf6 = random.randrange(8)
    
    running = True
    while running:
        screen.fill(BG1)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_6[rf6],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_f8_1(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# Game
##################################

# 3
def gqz3(ran,ra):
    global keydict
    rg1 = random.randrange(3)
    
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_1[rg1],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)
        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_g3_1(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 4
def gqz4(ran,ra):
    global keydict
    rg2 = random.randrange(4)
    
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_2[rg2],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)
        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_g4_1(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 5
def gqz5(ran,ra):
    global keydict
    rg3 = random.randrange(5)
    
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_3[rg3],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_g5_1(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 6
def gqz6(ran,ra):
    global keydict
    rg4 = random.randrange(6)

    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_4[rg4],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_g6_1(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 7
def gqz7(ran,ra):
    global keydict
    rg5 = random.randrange(7)
    
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_5[rg5],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_g7_1(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(q1,W,107,408,30)
        pygame.display.update()
        mainClock.tick(60)
# 8
def gqz8(ran,ra):
    global keydict
    rg6 = random.randrange(8)
    
    running = True
    while running:
        screen.fill(BG2)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_6[rg6],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_g8_1(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# Clothes
##################################

# 3
def cqz3(ran,ra):
    global keydict
    rc1 = random.randrange(3)
    
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_1[rc1],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)
        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_c3_1(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 4
def cqz4(ran,ra):
    global keydict
    rc2 = random.randrange(4)
    
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_2[rc2],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)
        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_c4_1(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 5
def cqz5(ran,ra):
    global keydict
    rc3 = random.randrange(5)
    
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_3[rc3],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_c5_1(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 6
def cqz6(ran,ra):
    global keydict
    rc4 = random.randrange(6)

    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_4[rc4],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_c6_1(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 7
def cqz7(ran,ra):
    global keydict
    rc5 = random.randrange(7)
    
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_5[rc5],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_c7_1(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(q1,W,107,408,30)
        pygame.display.update()
        mainClock.tick(60)
# 8
def cqz8(ran,ra):
    global keydict
    rc6 = random.randrange(8)
    
    running = True
    while running:
        screen.fill(BG3)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_6[rc6],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_c8_1(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# Anime
##################################

# 3
def aqz3(ran,ra):
    global keydict
    ra1 = random.randrange(3)
    
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(qu1,B,55,30,28)

        massage_to_screen(color_1[ra1],B,100,100,40)

        massage_to_screen(qu2,B,8,200,19)
        massage_to_screen(qu3,B,15,240,19)
        massage_to_screen(qu4,B,9,280,19)
        massage_to_screen(qu5,B,43,320,19)
        

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_a3_1(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 4
def aqz4(ran,ra):
    global keydict
    ra2 = random.randrange(4)
    
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(qu1,B,55,30,28)

        massage_to_screen(color_2[ra2],B,100,100,40)

        massage_to_screen(qu2,B,8,200,19)
        massage_to_screen(qu3,B,15,240,19)
        massage_to_screen(qu4,B,9,280,19)
        massage_to_screen(qu5,B,43,320,19)
        

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_a4_1(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 5
def aqz5(ran,ra):
    global keydict
    ra3 = random.randrange(5)
    
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(qu1,B,55,30,28)

        massage_to_screen(color_3[ra3],B,100,100,40)

        massage_to_screen(qu2,B,8,200,19)
        massage_to_screen(qu3,B,15,240,19)
        massage_to_screen(qu4,B,9,280,19)
        massage_to_screen(qu5,B,43,320,19)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_a5_1(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 6
def aqz6(ran,ra):
    global keydict
    ra4 = random.randrange(6)

    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(qu1,B,55,30,28)

        massage_to_screen(color_4[ra4],B,100,100,40)

        massage_to_screen(qu2,B,8,200,19)
        massage_to_screen(qu3,B,15,240,19)
        massage_to_screen(qu4,B,9,280,19)
        massage_to_screen(qu5,B,43,320,19)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_a6_1(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 7
def aqz7(ran,ra):
    global keydict
    ra5 = random.randrange(7)
    
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(qu1,B,55,30,28)

        massage_to_screen(color_5[ra5],B,100,100,40)

        massage_to_screen(qu2,B,8,200,19)
        massage_to_screen(qu3,B,15,240,19)
        massage_to_screen(qu4,B,9,280,19)
        massage_to_screen(qu5,B,43,320,19)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_a7_1(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(q1,W,107,408,30)
        pygame.display.update()
        mainClock.tick(60)
# 8
def aqz8(ran,ra):
    global keydict
    ra6 = random.randrange(8)
    
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(qu1,B,55,30,28)

        massage_to_screen(color_6[ra6],B,100,100,40)

        massage_to_screen(qu2,B,8,200,19)
        massage_to_screen(qu3,B,15,240,19)
        massage_to_screen(qu4,B,9,280,19)
        massage_to_screen(qu5,B,43,320,19)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_a8_1(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
###########
# Cartoon
###########
# 3
def kqz3(ran,ra):
    global keydict
    ra1 = random.randrange(3)
    
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(qu1,B,55,30,28)

        massage_to_screen(color_1[ra1],B,100,100,40)

        massage_to_screen(qu2,B,8,200,19)
        massage_to_screen(qu3,B,15,240,19)
        massage_to_screen(qu4,B,9,280,19)
        massage_to_screen(qu5,B,43,320,19)
        

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_k3_1(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 4
def kqz4(ran,ra):
    global keydict
    ra2 = random.randrange(4)
    
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(qu1,B,55,30,28)

        massage_to_screen(color_2[ra2],B,100,100,40)

        massage_to_screen(qu2,B,8,200,19)
        massage_to_screen(qu3,B,15,240,19)
        massage_to_screen(qu4,B,9,280,19)
        massage_to_screen(qu5,B,43,320,19)
        

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_k4_1(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 5
def kqz5(ran,ra):
    global keydict
    ra3 = random.randrange(5)
    
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(qu1,B,55,30,28)

        massage_to_screen(color_3[ra3],B,100,100,40)

        massage_to_screen(qu2,B,8,200,19)
        massage_to_screen(qu3,B,15,240,19)
        massage_to_screen(qu4,B,9,280,19)
        massage_to_screen(qu5,B,43,320,19)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_k5_1(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 6
def kqz6(ran,ra):
    global keydict
    ra4 = random.randrange(6)

    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(qu1,B,55,30,28)

        massage_to_screen(color_4[ra4],B,100,100,40)

        massage_to_screen(qu2,B,8,200,19)
        massage_to_screen(qu3,B,15,240,19)
        massage_to_screen(qu4,B,9,280,19)
        massage_to_screen(qu5,B,43,320,19)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_k6_1(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 7
def kqz7(ran,ra):
    global keydict
    ra5 = random.randrange(7)
    
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(qu1,B,55,30,28)

        massage_to_screen(color_5[ra5],B,100,100,40)

        massage_to_screen(qu2,B,8,200,19)
        massage_to_screen(qu3,B,15,240,19)
        massage_to_screen(qu4,B,9,280,19)
        massage_to_screen(qu5,B,43,320,19)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_k7_1(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(q1,W,107,408,30)
        pygame.display.update()
        mainClock.tick(60)
# 8
def kqz8(ran,ra):
    global keydict
    ra6 = random.randrange(8)
    
    running = True
    while running:
        screen.fill(BG4)
#
        massage_to_screen(qu1,B,55,30,28)

        massage_to_screen(color_6[ra6],B,100,100,40)

        massage_to_screen(qu2,B,8,200,19)
        massage_to_screen(qu3,B,15,240,19)
        massage_to_screen(qu4,B,9,280,19)
        massage_to_screen(qu5,B,43,320,19)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_k8_1(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# Series
##################################

# 3
def sqz3(ran,ra):
    global keydict
    rs1 = random.randrange(3)
    
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_1[rs1],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)
        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_s3_1(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 4
def sqz4(ran,ra):
    global keydict
    rs2 = random.randrange(4)
    
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_2[rs2],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)
        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_s4_1(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 5
def sqz5(ran,ra):
    global keydict
    rs3 = random.randrange(5)
    
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_3[rs3],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_s5_1(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 6
def sqz6(ran,ra):
    global keydict
    rs4 = random.randrange(6)

    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_4[rs4],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_s6_1(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 7
def sqz7(ran,ra):
    global keydict
    rs5 = random.randrange(7)
    
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_5[rs5],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_s7_1(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(q1,W,107,408,30)
        pygame.display.update()
        mainClock.tick(60)
# 8
def sqz8(ran,ra):
    global keydict
    rs6 = random.randrange(8)
    
    running = True
    while running:
        screen.fill(BG5)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_6[rs6],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_s8_1(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
# I
##################################

# 3
def iqz3(ran,ra):
    global keydict
    ri1 = random.randrange(3)
    
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_1[ri1],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)
        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_i3_1(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 4
def iqz4(ran,ra):
    global keydict
    ri2 = random.randrange(4)
    
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_2[ri2],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)
        

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_i4_1(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 5
def iqz5(ran,ra):
    global keydict
    ri3 = random.randrange(5)
    
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_3[ri3],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_i5_1(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 6
def iqz6(ran,ra):
    global keydict
    ri4 = random.randrange(6)

    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_4[ri4],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_i6_1(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
# 7
def iqz7(ran,ra):
    global keydict
    ri5 = random.randrange(7)
    
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_5[ri5],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_i7_1(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(q1,W,107,408,30)
        pygame.display.update()
        mainClock.tick(60)
# 8
def iqz8(ran,ra):
    global keydict
    ri6 = random.randrange(8)
    
    running = True
    while running:
        screen.fill(BG6)
#
        massage_to_screen(qu1,W,55,30,28)

        massage_to_screen(color_6[ri6],W,100,100,40)

        massage_to_screen(qu2,W,8,200,19)
        massage_to_screen(qu3,W,15,240,19)
        massage_to_screen(qu4,W,9,280,19)
        massage_to_screen(qu5,W,43,320,19)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
#
                ask_i8_1(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(q1,W,107,408,30)

        pygame.display.update()
        mainClock.tick(60)
##################################
########################################################################


### Ask Player
########################################################################
reshaped_text = arabic_reshaper.reshape(u'التصويت')
bidi_text = get_display(reshaped_text)
gol = bidi_text
reshaped_text = arabic_reshaper.reshape(u'مين تتوقع الملقوف')
bidi_text = get_display(reshaped_text)
mis = bidi_text
### Food ask
#############################################
# Food Player 3
##################################
# Blue
def ask_f3_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point1['blue'] += 10
                ask_f3_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point1['blue'] += 10
                ask_f3_2(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        massage_to_screen(color_1[1],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_f3_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point1['red'] += 10
                ask_f3_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point1['red'] += 10
                ask_f3_3(ran,ra)  
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_f3_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point1['green'] += 10
                los_f3(ran,ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point1['green'] += 10
                los_f3(ran,ra,point1)  
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[1],W,115,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Food Player 4
##################################
# Blue
def ask_f4_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point2['blue'] += 10
                ask_f4_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point2['blue'] += 10
                ask_f4_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point2['blue'] += 10
                ask_f4_2(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        massage_to_screen(color_2[1],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_f4_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point2['red'] += 10
                ask_f4_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point2['red'] += 10
                ask_f4_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point2['red'] += 10
                ask_f4_3(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_f4_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point2['green'] += 10
                ask_f4_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point2['green'] += 10
                ask_f4_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point2['green'] += 10
                ask_f4_4(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_f4_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point2['yellow'] += 10
                los_f4(ran,ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point2['yellow'] += 10
                los_f4(ran,ra,point2)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point2['yellow'] += 10
                los_f4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[2],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Food Player 5
##################################
# Blue
#
def ask_f5_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_3[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point3['blue'] += 10
                ask_f5_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point3['blue'] += 10
                ask_f5_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point3['blue'] += 10
                ask_f5_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point3['blue'] += 10
                ask_f5_2(ran,ra)
#                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        massage_to_screen(color_3[1],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_f5_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point3['red'] += 10
                ask_f5_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point3['red'] += 10
                ask_f5_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point3['red'] += 10
                ask_f5_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point3['red'] += 10
                ask_f5_3(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_f5_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point3['green'] += 10
                ask_f5_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point3['green'] += 10
                ask_f5_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point3['green'] += 10
                ask_f5_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point3['green'] += 10
                ask_f5_4(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_f5_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point3['yellow'] += 10
                ask_f5_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point3['yellow'] += 10
                ask_f5_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point3['yellow'] += 10
                ask_f5_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point3['yellow'] += 10
                ask_f5_5(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_f5_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point3['pink'] += 10
                los_f5(ran,ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point3['pink'] += 10
                los_f5(ran,ra,point3)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point3['pink'] += 10
                los_f5(ran,ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point3['pink'] += 10
                los_f5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[3],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Food Player 6
##################################
# Blue
#
def ask_f6_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_4[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point4['blue'] += 10
                ask_f6_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point4['blue'] += 10
                ask_f6_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point4['blue'] += 10
                ask_f6_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point4['blue'] += 10
                ask_f6_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point4['blue'] += 10
                ask_f6_2(ran,ra)
#                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        massage_to_screen(color_4[1],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_f6_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point4['red'] += 10
                ask_f6_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point4['red'] += 10
                ask_f6_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point4['red'] += 10
                ask_f6_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point4['red'] += 10
                ask_f6_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point4['red'] += 10
                ask_f6_3(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_f6_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_f6_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_f6_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_f6_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_f6_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_f6_4(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_f6_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_f6_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_f6_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_f6_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_f6_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_f6_5(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_f6_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_f6_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_f6_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_f6_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_f6_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_f6_6(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_f6_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_f6(ran,ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_f6(ran,ra,point4)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_f6(ran,ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_f6(ran,ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_f6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[4],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Food Player 7
##################################
# Blue
#
def ask_f7_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_5[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_f7_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_f7_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_f7_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_f7_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_f7_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_f7_2(ran,ra)
#                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen(color_5[1],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_f7_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_f7_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_f7_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_f7_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_f7_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_f7_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_f7_3(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_f7_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_f7_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_f7_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_f7_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_f7_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_f7_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_f7_4(ran,ra)

        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_f7_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_f7_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_f7_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_f7_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_f7_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_f7_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_f7_5(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_f7_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_f7_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_f7_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_f7_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_f7_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_f7_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_f7_6(ran,ra)

        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_f7_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_f7_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_f7_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_f7_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_f7_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_f7_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_f7_7(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_f7_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[6],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_f7(ran,ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_f7(ran,ra,point5)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_f7(ran,ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_f7(ran,ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_f7(ran,ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_f7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[5],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Food Player 8
##################################
# Blue
#
def ask_f8_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_6[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_f8_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_f8_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_f8_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_f8_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_f8_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_f8_2(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don1 == 7:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_f8_2(ran,ra)
#                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(color_6[1],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_f8_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_f8_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_f8_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_f8_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_f8_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_f8_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_f8_3(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don2 == 7:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_f8_3(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_f8_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_f8_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_f8_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_f8_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_f8_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_f8_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_f8_4(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don3 == 7:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_f8_4(ran,ra)

        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_f8_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_f8_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_f8_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_f8_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_f8_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_f8_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_f8_5(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don4 == 7:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_f8_5(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_f8_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_f8_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_f8_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_f8_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_f8_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_f8_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_f8_6(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don5 == 7:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_f8_6(ran,ra)

        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_f8_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_f8_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_f8_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_f8_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_f8_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_f8_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_f8_7(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don6 == 7:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_f8_7(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_f8_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[6],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_f8_8(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_f8_8(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_f8_8(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_f8_8(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_f8_8(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_f8_8(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don7 == 7:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_f8_8(ran,ra)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# White
def ask_f8_8(ran,ra):
    global keydict
    don8 = int(ran)
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[7],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
        
        if button_1.collidepoint((mx, my)):
            if click:
                if don8 == 0:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_f8(ran,ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                if don8 == 1:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_f8(ran,ra,point6)
        if button_3.collidepoint((mx, my)):
            if click:
                if don8 == 2:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_f8(ran,ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                if don8 == 3:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_f8(ran,ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                if don8 == 4:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_f8(ran,ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                if don8 == 5:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_f8(ran,ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                if don8 == 6:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_f8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO1, button_1)
        pygame.draw.rect(screen, BO1, button_2)
        pygame.draw.rect(screen, BO1, button_3)
        pygame.draw.rect(screen, BO1, button_4)
        pygame.draw.rect(screen, BO1, button_5)
        pygame.draw.rect(screen, BO1, button_6)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[6],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
#############################################

### Game ask
#############################################
# Game Player 3
##################################
# Blue
def ask_g3_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point1['blue'] += 10
                    #print(point1['blue'])
                #print(point1)
                ask_g3_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point1['blue'] += 10
                    #print(point1['blue'])
                #print(point1)
                ask_g3_2(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        massage_to_screen(color_1[1],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_g3_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point1['red'] += 10
                    #print(point1['red'])
                #print(point1)
                ask_g3_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point1['red'] += 10
                    #print(point1['red'])
                #print(point1)
                ask_g3_3(ran,ra)  
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_g3_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point1['green'] += 10
                    #print(point1['green'])
                #print(point1)
                los_g3(ran,ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point1['green'] += 10
                    #print(point1['green'])
                #print(point1)
                los_g3(ran,ra,point1)  
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[1],W,115,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Game Player 4
##################################
# Blue
def ask_g4_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_g4_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_g4_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_g4_2(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        massage_to_screen(color_2[1],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_g4_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_g4_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_g4_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_g4_3(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_g4_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_g4_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_g4_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_g4_4(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_g4_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_g4(ran,ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_g4(ran,ra,point2)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_g4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[2],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Game Player 5
##################################
# Blue
#
def ask_g5_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_3[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_g5_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_g5_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_g5_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_g5_2(ran,ra)
#                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        massage_to_screen(color_3[1],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_g5_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_g5_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_g5_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_g5_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_g5_3(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_g5_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_g5_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_g5_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_g5_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_g5_4(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_g5_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_g5_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_g5_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_g5_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_g5_5(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_g5_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_g5(ran,ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_g5(ran,ra,point3)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_g5(ran,ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_g5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[3],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Game Player 6
##################################
# Blue
#
def ask_g6_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_4[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_g6_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_g6_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_g6_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_g6_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_g6_2(ran,ra)
#                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        massage_to_screen(color_4[1],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_g6_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_g6_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_g6_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_g6_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_g6_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_g6_3(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_g6_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_g6_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_g6_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_g6_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_g6_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_g6_4(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_g6_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_g6_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_g6_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_g6_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_g6_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_g6_5(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_g6_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_g6_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_g6_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_g6_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_g6_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_g6_6(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_g6_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_g6(ran,ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_g6(ran,ra,point4)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_g6(ran,ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_g6(ran,ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_g6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[4],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Game Player 7
##################################
# Blue
#
def ask_g7_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_5[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_g7_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_g7_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_g7_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_g7_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_g7_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_g7_2(ran,ra)
#                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen(color_5[1],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_g7_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_g7_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_g7_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_g7_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_g7_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_g7_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_g7_3(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_g7_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_g7_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_g7_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_g7_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_g7_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_g7_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_g7_4(ran,ra)

        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_g7_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_g7_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_g7_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_g7_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_g7_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_g7_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_g7_5(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_g7_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_g7_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_g7_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_g7_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_g7_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_g7_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_g7_6(ran,ra)

        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_g7_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_g7_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_g7_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_g7_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_g7_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_g7_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_g7_7(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_g7_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[6],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_g7(ran,ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_g7(ran,ra,point5)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_g7(ran,ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_g7(ran,ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_g7(ran,ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_g7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[5],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Game Player 8
##################################
# Blue
#
def ask_g8_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_6[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_g8_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_g8_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_g8_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_g8_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_g8_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_g8_2(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don1 == 7:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_g8_2(ran,ra)
#                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(color_6[1],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_g8_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_g8_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_g8_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_g8_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_g8_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_g8_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_g8_3(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don2 == 7:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_g8_3(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_g8_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_g8_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_g8_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_g8_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_g8_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_g8_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_g8_4(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don3 == 7:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_g8_4(ran,ra)

        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_g8_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_g8_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_g8_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_g8_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_g8_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_g8_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_g8_5(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don4 == 7:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_g8_5(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_g8_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_g8_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_g8_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_g8_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_g8_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_g8_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_g8_6(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don5 == 7:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_g8_6(ran,ra)

        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_g8_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_g8_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_g8_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_g8_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_g8_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_g8_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_g8_7(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don6 == 7:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_g8_7(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_g8_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[6],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_g8_8(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_g8_8(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_g8_8(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_g8_8(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_g8_8(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_g8_8(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don7 == 7:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_g8_8(ran,ra)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# White
def ask_g8_8(ran,ra):
    global keydict
    don8 = int(ran)
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[7],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
        
        if button_1.collidepoint((mx, my)):
            if click:
                if don8 == 0:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_g8(ran,ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                if don8 == 1:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_g8(ran,ra,point6)
        if button_3.collidepoint((mx, my)):
            if click:
                if don8 == 2:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_g8(ran,ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                if don8 == 3:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_g8(ran,ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                if don8 == 4:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_g8(ran,ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                if don8 == 5:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_g8(ran,ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                if don8 == 6:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_g8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO2, button_1)
        pygame.draw.rect(screen, BO2, button_2)
        pygame.draw.rect(screen, BO2, button_3)
        pygame.draw.rect(screen, BO2, button_4)
        pygame.draw.rect(screen, BO2, button_5)
        pygame.draw.rect(screen, BO2, button_6)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[6],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
#############################################

### Clothes ask
#############################################
# Clothes Player 3
##################################
# Blue
def ask_c3_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point1['blue'] += 10
                    #print(point1['blue'])
                #print(point1)
                ask_c3_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point1['blue'] += 10
                    #print(point1['blue'])
                #print(point1)
                ask_c3_2(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        massage_to_screen(color_1[1],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_c3_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point1['red'] += 10
                    #print(point1['red'])
                #print(point1)
                ask_c3_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point1['red'] += 10
                    #print(point1['red'])
                #print(point1)
                ask_c3_3(ran,ra)  
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_c3_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point1['green'] += 10
                    #print(point1['green'])
                #print(point1)
                los_c3(ran,ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point1['green'] += 10
                    #print(point1['green'])
                #print(point1)
                los_c3(ran,ra,point1)  
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[1],W,115,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Clothes Player 4
##################################
# Blue
def ask_c4_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_c4_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_c4_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_c4_2(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        massage_to_screen(color_2[1],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_c4_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_c4_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_c4_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_c4_3(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_c4_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_c4_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_c4_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_c4_4(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_c4_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_c4(ran,ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_c4(ran,ra,point2)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_c4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[2],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Clothes Player 5
##################################
# Blue
#
def ask_c5_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_3[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_c5_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_c5_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_c5_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_c5_2(ran,ra)
#                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        massage_to_screen(color_3[1],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_c5_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_c5_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_c5_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_c5_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_c5_3(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_c5_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_c5_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_c5_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_c5_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_c5_4(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_c5_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_c5_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_c5_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_c5_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_c5_5(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_c5_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_c5(ran,ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_c5(ran,ra,point3)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_c5(ran,ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_c5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[3],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Clothes Player 6
##################################
# Blue
#
def ask_c6_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_4[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_c6_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_c6_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_c6_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_c6_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_c6_2(ran,ra)
#                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        massage_to_screen(color_4[1],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_c6_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_c6_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_c6_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_c6_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_c6_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_c6_3(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_c6_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_c6_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_c6_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_c6_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_c6_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_c6_4(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_c6_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_c6_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_c6_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_c6_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_c6_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_c6_5(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_c6_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_c6_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_c6_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_c6_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_c6_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_c6_6(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_c6_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_c6(ran,ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_c6(ran,ra,point4)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_c6(ran,ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_c6(ran,ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_c6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[4],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Clothes Player 7
##################################
# Blue
#
def ask_c7_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_5[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_c7_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_c7_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_c7_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_c7_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_c7_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_c7_2(ran,ra)
#                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen(color_5[1],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_c7_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_c7_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_c7_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_c7_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_c7_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_c7_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_c7_3(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_c7_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_c7_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_c7_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_c7_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_c7_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_c7_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_c7_4(ran,ra)

        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_c7_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_c7_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_c7_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_c7_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_c7_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_c7_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_c7_5(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_c7_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_c7_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_c7_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_c7_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_c7_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_c7_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_c7_6(ran,ra)

        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_c7_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_c7_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_c7_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_c7_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_c7_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_c7_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_c7_7(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_c7_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[6],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_c7(ran,ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_c7(ran,ra,point5)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_c7(ran,ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_c7(ran,ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_c7(ran,ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_c7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[5],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Clothes Player 8
##################################
# Blue
#
def ask_c8_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_6[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_c8_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_c8_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_c8_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_c8_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_c8_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_c8_2(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don1 == 7:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_c8_2(ran,ra)
#                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(color_6[1],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_c8_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_c8_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_c8_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_c8_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_c8_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_c8_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_c8_3(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don2 == 7:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_c8_3(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_c8_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_c8_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_c8_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_c8_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_c8_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_c8_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_c8_4(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don3 == 7:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_c8_4(ran,ra)

        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_c8_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_c8_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_c8_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_c8_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_c8_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_c8_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_c8_5(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don4 == 7:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_c8_5(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_c8_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_c8_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_c8_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_c8_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_c8_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_c8_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_c8_6(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don5 == 7:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_c8_6(ran,ra)

        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_c8_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_c8_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_c8_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_c8_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_c8_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_c8_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_c8_7(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don6 == 7:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_c8_7(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_c8_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[6],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_c8_8(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_c8_8(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_c8_8(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_c8_8(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_c8_8(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_c8_8(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don7 == 7:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_c8_8(ran,ra)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# White
def ask_c8_8(ran,ra):
    global keydict
    don8 = int(ran)
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[7],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
        
        if button_1.collidepoint((mx, my)):
            if click:
                if don8 == 0:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_c8(ran,ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                if don8 == 1:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_c8(ran,ra,point6)
        if button_3.collidepoint((mx, my)):
            if click:
                if don8 == 2:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_c8(ran,ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                if don8 == 3:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_c8(ran,ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                if don8 == 4:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_c8(ran,ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                if don8 == 5:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_c8(ran,ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                if don8 == 6:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_c8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO3, button_1)
        pygame.draw.rect(screen, BO3, button_2)
        pygame.draw.rect(screen, BO3, button_3)
        pygame.draw.rect(screen, BO3, button_4)
        pygame.draw.rect(screen, BO3, button_5)
        pygame.draw.rect(screen, BO3, button_6)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[6],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
#############################################
        
### Anime
#############################################
# Anime Player 3
##################################
# Blue
def ask_a3_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_1[0],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point1['blue'] += 10
                    #print(point1['blue'])
                #print(point1)
                ask_a3_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point1['blue'] += 10
                    #print(point1['blue'])
                #print(point1)
                ask_a3_2(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(color_1[1],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_a3_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_1[1],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point1['red'] += 10
                    #print(point1['red'])
                #print(point1)
                ask_a3_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point1['red'] += 10
                    #print(point1['red'])
                #print(point1)
                ask_a3_3(ran,ra)  
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_a3_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_1[2],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point1['green'] += 10
                    #print(point1['green'])
                #print(point1)
                los_a3(ran,ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point1['green'] += 10
                    #print(point1['green'])
                #print(point1)
                los_a3(ran,ra,point1)  
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[1],W,115,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Anime Player 4
##################################
# Blue
def ask_a4_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_2[0],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_a4_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_a4_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_a4_2(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(color_2[1],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_a4_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_2[1],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_a4_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_a4_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_a4_3(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_a4_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_2[2],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_a4_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_a4_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_a4_4(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_a4_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_2[3],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_a4(ran,ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_a4(ran,ra,point2)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_a4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[2],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Anime Player 5
##################################
# Blue
#
def ask_a5_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(gol,B,94,20,40)
#
        massage_to_screen(color_3[0],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_a5_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_a5_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_a5_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_a5_2(ran,ra)
#                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(color_3[1],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_a5_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_3[1],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_a5_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_a5_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_a5_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_a5_3(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_a5_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_3[2],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_a5_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_a5_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_a5_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_a5_4(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_a5_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_3[3],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_a5_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_a5_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_a5_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_a5_5(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_a5_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_3[4],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_a5(ran,ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_a5(ran,ra,point3)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_a5(ran,ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_a5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[3],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Anime Player 6
##################################
# Blue
#
def ask_a6_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(gol,B,94,20,40)
#
        massage_to_screen(color_4[0],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_a6_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_a6_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_a6_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_a6_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_a6_2(ran,ra)
#                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(color_4[1],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_a6_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_4[1],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_a6_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_a6_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_a6_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_a6_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_a6_3(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_a6_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_4[2],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_a6_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_a6_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_a6_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_a6_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_a6_4(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_a6_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_4[3],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_a6_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_a6_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_a6_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_a6_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_a6_5(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_a6_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_4[4],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_a6_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_a6_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_a6_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_a6_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_a6_6(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_a6_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_4[5],B,42,95,35)
        massage_to_screen(non,B,139,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_a6(ran,ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_a6(ran,ra,point4)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_a6(ran,ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_a6(ran,ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_a6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[4],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Anime Player 7
##################################
# Blue
#
def ask_a7_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(gol,B,94,20,40)
#
        massage_to_screen(color_5[0],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_a7_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_a7_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_a7_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_a7_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_a7_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_a7_2(ran,ra)
#                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[1],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_a7_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_5[1],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_a7_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_a7_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_a7_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_a7_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_a7_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_a7_3(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_a7_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_5[2],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_a7_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_a7_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_a7_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_a7_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_a7_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_a7_4(ran,ra)

        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_a7_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_5[3],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_a7_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_a7_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_a7_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_a7_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_a7_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_a7_5(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_a7_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_5[4],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_a7_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_a7_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_a7_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_a7_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_a7_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_a7_6(ran,ra)

        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_a7_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_5[5],B,42,95,35)
        massage_to_screen(non,B,139,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_a7_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_a7_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_a7_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_a7_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_a7_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_a7_7(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_a7_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_5[6],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_a7(ran,ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_a7(ran,ra,point5)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_a7(ran,ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_a7(ran,ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_a7(ran,ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_a7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[5],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Anime Player 8
##################################
# Blue
#
def ask_a8_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(gol,B,94,20,40)
#
        massage_to_screen(color_6[0],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_a8_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_a8_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_a8_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_a8_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_a8_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_a8_2(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don1 == 7:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_a8_2(ran,ra)
#                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[1],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_a8_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[1],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_a8_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_a8_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_a8_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_a8_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_a8_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_a8_3(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don2 == 7:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_a8_3(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_a8_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[2],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_a8_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_a8_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_a8_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_a8_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_a8_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_a8_4(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don3 == 7:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_a8_4(ran,ra)

        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_a8_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[3],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_a8_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_a8_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_a8_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_a8_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_a8_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_a8_5(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don4 == 7:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_a8_5(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_a8_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[4],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_a8_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_a8_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_a8_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_a8_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_a8_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_a8_6(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don5 == 7:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_a8_6(ran,ra)

        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_a8_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[5],B,42,95,35)
        massage_to_screen(non,B,139,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_a8_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_a8_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_a8_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_a8_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_a8_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_a8_7(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don6 == 7:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_a8_7(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_a8_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[6],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_a8_8(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_a8_8(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_a8_8(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_a8_8(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_a8_8(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_a8_8(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don7 == 7:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_a8_8(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# White
def ask_a8_8(ran,ra):
    global keydict
    don8 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[7],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
        
        if button_1.collidepoint((mx, my)):
            if click:
                if don8 == 0:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_a8(ran,ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                if don8 == 1:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_a8(ran,ra,point6)
        if button_3.collidepoint((mx, my)):
            if click:
                if don8 == 2:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_a8(ran,ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                if don8 == 3:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_a8(ran,ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                if don8 == 4:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_a8(ran,ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                if don8 == 5:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_a8(ran,ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                if don8 == 6:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_a8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[6],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################
# Cartoon
##################
# Cartoon Player 3
##################################
# Blue
def ask_k3_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_1[0],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point1['blue'] += 10
                ask_k3_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point1['blue'] += 10
                ask_k3_2(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(color_1[1],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_k3_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_1[1],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point1['red'] += 10
                ask_k3_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point1['red'] += 10
                ask_k3_3(ran,ra)  
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_k3_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_1[2],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point1['green'] += 10
                los_k3(ran,ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point1['green'] += 10
                los_k3(ran,ra,point1)  
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[1],W,115,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Cartoon Player 4
##################################
# Blue
def ask_k4_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_2[0],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point2['blue'] += 10
                ask_k4_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point2['blue'] += 10
                ask_k4_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point2['blue'] += 10
                ask_k4_2(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(color_2[1],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_k4_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_2[1],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point2['red'] += 10
                ask_k4_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point2['red'] += 10
                ask_k4_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point2['red'] += 10
                ask_k4_3(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_k4_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_2[2],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point2['green'] += 10
                ask_k4_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point2['green'] += 10
                ask_k4_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point2['green'] += 10
                ask_k4_4(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_k4_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_2[3],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point2['yellow'] += 10
                los_k4(ran,ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point2['yellow'] += 10
                los_k4(ran,ra,point2)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point2['yellow'] += 10
                los_k4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[2],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Cartoon Player 5
##################################
# Blue
#
def ask_k5_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(gol,B,94,20,40)
#
        massage_to_screen(color_3[0],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_k5_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_k5_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_k5_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_k5_2(ran,ra)
#                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(color_3[1],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_k5_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_3[1],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_k5_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_k5_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_k5_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_k5_3(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_k5_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_3[2],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_k5_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_k5_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_k5_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_k5_4(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_k5_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_3[3],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_k5_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_k5_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_k5_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_k5_5(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_k5_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_3[4],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_k5(ran,ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_k5(ran,ra,point3)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_k5(ran,ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_k5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[3],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Cartoon Player 6
##################################
# Blue
#
def ask_k6_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(gol,B,94,20,40)
#
        massage_to_screen(color_4[0],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_k6_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_k6_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_k6_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_k6_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_k6_2(ran,ra)
#                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(color_4[1],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_k6_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_4[1],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_k6_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_k6_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_k6_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_k6_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_k6_3(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_k6_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_4[2],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_k6_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_k6_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_k6_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_k6_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_k6_4(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_k6_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_4[3],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_k6_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_k6_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_k6_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_k6_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_k6_5(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_k6_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_4[4],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_k6_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_k6_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_k6_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_k6_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_k6_6(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_k6_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_4[5],B,42,95,35)
        massage_to_screen(non,B,139,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_k6(ran,ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_k6(ran,ra,point4)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_k6(ran,ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_k6(ran,ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_k6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[4],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Cartoon Player 7
##################################
# Blue
#
def ask_k7_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(gol,B,94,20,40)
#
        massage_to_screen(color_5[0],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_k7_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_k7_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_k7_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_k7_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_k7_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_k7_2(ran,ra)
#                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[1],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_k7_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_5[1],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_k7_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_k7_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_k7_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_k7_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_k7_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_k7_3(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_k7_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_5[2],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_k7_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_k7_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_k7_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_k7_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_k7_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_k7_4(ran,ra)

        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_k7_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_5[3],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_k7_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_k7_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_k7_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_k7_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_k7_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_k7_5(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_k7_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_5[4],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_k7_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_k7_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_k7_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_k7_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_k7_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_k7_6(ran,ra)

        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_k7_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_5[5],B,42,95,35)
        massage_to_screen(non,B,139,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_k7_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_k7_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_k7_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_k7_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_k7_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_k7_7(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_k7_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_5[6],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_k7(ran,ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_k7(ran,ra,point5)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_k7(ran,ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_k7(ran,ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_k7(ran,ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_k7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[5],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Cartoon Player 8
##################################
# Blue
#
def ask_k8_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(gol,B,94,20,40)
#
        massage_to_screen(color_6[0],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        massage_to_screen(esc,B,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_k8_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_k8_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_k8_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_k8_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_k8_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_k8_2(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don1 == 7:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_k8_2(ran,ra)
#                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[1],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_k8_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[1],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_k8_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_k8_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_k8_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_k8_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_k8_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_k8_3(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don2 == 7:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_k8_3(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_k8_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[2],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_k8_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_k8_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_k8_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_k8_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_k8_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_k8_4(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don3 == 7:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_k8_4(ran,ra)

        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_k8_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[3],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_k8_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_k8_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_k8_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_k8_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_k8_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_k8_5(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don4 == 7:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_k8_5(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_k8_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[4],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_k8_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_k8_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_k8_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_k8_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_k8_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_k8_6(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don5 == 7:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_k8_6(ran,ra)

        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_k8_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[5],B,42,95,35)
        massage_to_screen(non,B,139,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_k8_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_k8_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_k8_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_k8_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_k8_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_k8_7(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don6 == 7:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_k8_7(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_k8_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[6],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_k8_8(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_k8_8(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_k8_8(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_k8_8(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_k8_8(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_k8_8(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don7 == 7:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_k8_8(ran,ra)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# White
def ask_k8_8(ran,ra):
    global keydict
    don8 = int(ran)
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)

        massage_to_screen(gol,B,94,20,40)

        massage_to_screen(color_6[7],B,50,95,35)
        massage_to_screen(non,B,130,91,35)

        massage_to_screen(mis,B,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
        
        if button_1.collidepoint((mx, my)):
            if click:
                if don8 == 0:
                    point6['white'] += 10
                los_k8(ran,ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                if don8 == 1:
                    point6['white'] += 10
                los_k8(ran,ra,point6)
        if button_3.collidepoint((mx, my)):
            if click:
                if don8 == 2:
                    point6['white'] += 10
                los_k8(ran,ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                if don8 == 3:
                    point6['white'] += 10
                los_k8(ran,ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                if don8 == 4:
                    point6['white'] += 10
                los_k8(ran,ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                if don8 == 5:
                    point6['white'] += 10
                los_k8(ran,ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                if don8 == 6:
                    point6['white'] += 10
                los_k8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO4, button_1)
        pygame.draw.rect(screen, BO4, button_2)
        pygame.draw.rect(screen, BO4, button_3)
        pygame.draw.rect(screen, BO4, button_4)
        pygame.draw.rect(screen, BO4, button_5)
        pygame.draw.rect(screen, BO4, button_6)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[6],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
#############################################

### Series ask
#############################################
# Series Player 3
##################################
# Blue
def ask_s3_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point1['blue'] += 10
                    #print(point1['blue'])
                #print(point1)
                ask_s3_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point1['blue'] += 10
                    #print(point1['blue'])
                #print(point1)
                ask_s3_2(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        massage_to_screen(color_1[1],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_s3_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point1['red'] += 10
                    #print(point1['red'])
                #print(point1)
                ask_s3_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point1['red'] += 10
                    #print(point1['red'])
                #print(point1)
                ask_s3_3(ran,ra)  
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_s3_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point1['green'] += 10
                    #print(point1['green'])
                #print(point1)
                los_s3(ran,ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point1['green'] += 10
                    #print(point1['green'])
                #print(point1)
                los_s3(ran,ra,point1)  
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[1],W,115,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Series Player 4
##################################
# Blue
def ask_s4_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_s4_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_s4_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_s4_2(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        massage_to_screen(color_2[1],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_s4_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_s4_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_s4_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_s4_3(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_s4_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_s4_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_s4_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_s4_4(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_s4_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_s4(ran,ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_s4(ran,ra,point2)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_s4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[2],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Series Player 5
##################################
# Blue
#
def ask_s5_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_3[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_s5_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_s5_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_s5_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_s5_2(ran,ra)
#                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        massage_to_screen(color_3[1],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_s5_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_s5_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_s5_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_s5_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_s5_3(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_s5_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_s5_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_s5_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_s5_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_s5_4(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_s5_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_s5_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_s5_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_s5_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_s5_5(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_s5_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point3['pink'] += 10
                los_s5(ran,ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point3['pink'] += 10
                los_s5(ran,ra,point3)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point3['pink'] += 10
                los_s5(ran,ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point3['pink'] += 10
                los_s5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[3],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Series Player 6
##################################
# Blue
#
def ask_s6_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_4[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point4['blue'] += 10
                ask_s6_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point4['blue'] += 10
                ask_s6_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point4['blue'] += 10
                ask_s6_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point4['blue'] += 10
                ask_s6_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point4['blue'] += 10
                ask_s6_2(ran,ra)
#                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        massage_to_screen(color_4[1],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_s6_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point4['red'] += 10
                ask_s6_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point4['red'] += 10
                ask_s6_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point4['red'] += 10
                ask_s6_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point4['red'] += 10
                ask_s6_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point4['red'] += 10
                ask_s6_3(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_s6_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point4['green'] += 10
                ask_s6_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point4['green'] += 10
                ask_s6_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point4['green'] += 10
                ask_s6_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point4['green'] += 10
                ask_s6_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point4['green'] += 10
                ask_s6_4(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_s6_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point4['yellow'] += 10
                ask_s6_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point4['yellow'] += 10
                ask_s6_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point4['yellow'] += 10
                ask_s6_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point4['yellow'] += 10
                ask_s6_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point4['yellow'] += 10
                ask_s6_5(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_s6_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point4['pink'] += 10
                ask_s6_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point4['pink'] += 10
                ask_s6_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point4['pink'] += 10
                ask_s6_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point4['pink'] += 10
                ask_s6_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point4['pink'] += 10
                ask_s6_6(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_s6_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point4['purple'] += 10
                los_s6(ran,ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point4['purple'] += 10
                los_s6(ran,ra,point4)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point4['purple'] += 10
                los_s6(ran,ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point4['purple'] += 10
                los_s6(ran,ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point4['purple'] += 10
                los_s6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[4],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Series Player 7
##################################
# Blue
#
def ask_s7_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_5[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_s7_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_s7_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_s7_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_s7_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_s7_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_s7_2(ran,ra)
#                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen(color_5[1],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_s7_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_s7_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_s7_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_s7_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_s7_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_s7_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_s7_3(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_s7_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_s7_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_s7_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_s7_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_s7_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_s7_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_s7_4(ran,ra)

        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_s7_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_s7_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_s7_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_s7_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_s7_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_s7_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_s7_5(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_s7_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_s7_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_s7_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_s7_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_s7_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_s7_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_s7_6(ran,ra)

        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_s7_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_s7_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_s7_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_s7_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_s7_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_s7_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_s7_7(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_s7_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[6],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_s7(ran,ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_s7(ran,ra,point5)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_s7(ran,ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_s7(ran,ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_s7(ran,ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_s7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[5],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# Series Player 8
##################################
# Blue
#
def ask_s8_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_6[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_s8_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_s8_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_s8_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_s8_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_s8_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_s8_2(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don1 == 7:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_s8_2(ran,ra)
#                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(color_6[1],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_s8_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_s8_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_s8_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_s8_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_s8_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_s8_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_s8_3(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don2 == 7:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_s8_3(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_s8_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_s8_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_s8_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_s8_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_s8_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_s8_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_s8_4(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don3 == 7:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_s8_4(ran,ra)

        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_s8_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_s8_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_s8_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_s8_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_s8_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_s8_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_s8_5(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don4 == 7:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_s8_5(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_s8_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_s8_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_s8_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_s8_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_s8_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_s8_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_s8_6(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don5 == 7:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_s8_6(ran,ra)

        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_s8_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_s8_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_s8_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_s8_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_s8_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_s8_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_s8_7(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don6 == 7:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_s8_7(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_s8_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[6],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_s8_8(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_s8_8(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_s8_8(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_s8_8(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_s8_8(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_s8_8(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don7 == 7:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_s8_8(ran,ra)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# White
def ask_s8_8(ran,ra):
    global keydict
    don8 = int(ran)
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[7],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
        
        if button_1.collidepoint((mx, my)):
            if click:
                if don8 == 0:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_s8(ran,ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                if don8 == 1:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_s8(ran,ra,point6)
        if button_3.collidepoint((mx, my)):
            if click:
                if don8 == 2:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_s8(ran,ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                if don8 == 3:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_s8(ran,ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                if don8 == 4:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_s8(ran,ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                if don8 == 5:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_s8(ran,ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                if don8 == 6:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_s8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO5, button_1)
        pygame.draw.rect(screen, BO5, button_2)
        pygame.draw.rect(screen, BO5, button_3)
        pygame.draw.rect(screen, BO5, button_4)
        pygame.draw.rect(screen, BO5, button_5)
        pygame.draw.rect(screen, BO5, button_6)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[6],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
#############################################

### i ask
#############################################
# I Player 3
##################################
# Blue
def ask_i3_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point1['blue'] += 10
                    #print(point1['blue'])
                #print(point1)
                ask_i3_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point1['blue'] += 10
                    #print(point1['blue'])
                #print(point1)
                ask_i3_2(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        massage_to_screen(color_1[1],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_i3_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point1['red'] += 10
                    #print(point1['red'])
                #print(point1)
                ask_i3_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point1['red'] += 10
                    #print(point1['red'])
                #print(point1)
                ask_i3_3(ran,ra)  
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[2],W,110,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_i3_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_1[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,210,180,50)
        button_2 = pygame.Rect(60,290,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point1['green'] += 10
                    #print(point1['green'])
                #print(point1)
                los_i3(ran,ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point1['green'] += 10
                    #print(point1['green'])
                #print(point1)
                los_i3(ran,ra,point1)  
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        massage_to_screen(color_1[0],W,115,218,28)
        massage_to_screen(color_1[1],W,115,300,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# I Player 4
##################################
# Blue
def ask_i4_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_i4_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_i4_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point2['blue'] += 10
                    #print(point2['blue'])
                #print(point2)
                ask_i4_2(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        massage_to_screen(color_2[1],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_i4_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_i4_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_i4_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point2['red'] += 10
                    #print(point2['red'])
                #print(point2)
                ask_i4_3(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[2],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_i4_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_i4_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_i4_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point2['green'] += 10
                    #print(point2['green'])
                #print(point2)
                ask_i4_4(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[3],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_i4_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_2[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,175,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,212,180,50)
        button_2 = pygame.Rect(60,282,180,50)
        button_3 = pygame.Rect(60,352,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_i4(ran,ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_i4(ran,ra,point2)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point2['yellow'] += 10
                    #print(point2['yellow'])
                #print(point2)
                los_i4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        massage_to_screen(color_2[0],W,115,220,28)
        massage_to_screen(color_2[1],W,110,290,28)
        massage_to_screen(color_2[2],W,110,360,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# I Player 5
##################################
# Blue
#
def ask_i5_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_3[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_i5_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_i5_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_i5_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point3['blue'] += 10
                    #print(point3['blue'])
                #print(point3)
                ask_i5_2(ran,ra)
#                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        massage_to_screen(color_3[1],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_i5_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_i5_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_i5_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_i5_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point3['red'] += 10
                    #print(point3['red'])
                #print(point3)
                ask_i5_3(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[2],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_i5_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_i5_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_i5_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_i5_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point3['green'] += 10
                    #print(point3['green'])
                #print(point3)
                ask_i5_4(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[3],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_i5_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_i5_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_i5_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_i5_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point3['yellow'] += 10
                    #print(point3['yellow'])
                #print(point3)
                ask_i5_5(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[4],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_i5_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_3[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(60,192,180,50)
        button_2 = pygame.Rect(60,262,180,50)
        button_3 = pygame.Rect(60,332,180,50)
        button_4 = pygame.Rect(60,402,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_i5(ran,ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_i5(ran,ra,point3)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_i5(ran,ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point3['pink'] += 10
                    #print(point3['pink'])
                #print(point3)
                los_i5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        massage_to_screen(color_3[0],W,115,200,28)
        massage_to_screen(color_3[1],W,110,270,28)
        massage_to_screen(color_3[2],W,110,340,28)
        massage_to_screen(color_3[3],W,110,410,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# I Player 6
##################################
# Blue
#
def ask_i6_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_4[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_i6_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_i6_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_i6_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_i6_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point4['blue'] += 10
                    #print(point4['blue'])
                #print(point4)
                ask_i6_2(ran,ra)
#                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        massage_to_screen(color_4[1],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_i6_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_i6_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_i6_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_i6_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_i6_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point4['red'] += 10
                    #print(point4['red'])
                #print(point4)
                ask_i6_3(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[2],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_i6_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_i6_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_i6_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_i6_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_i6_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point4['green'] += 10
                    #print(point4['green'])
                #print(point4)
                ask_i6_4(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[3],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_i6_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_i6_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_i6_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_i6_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_i6_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point4['yellow'] += 10
                    #print(point4['yellow'])
                #print(point4)
                ask_i6_5(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[4],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_i6_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_i6_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_i6_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_i6_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_i6_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point4['pink'] += 10
                    #print(point4['pink'])
                #print(point4)
                ask_i6_6(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[5],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_i6_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_4[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_i6(ran,ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_i6(ran,ra,point4)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_i6(ran,ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_i6(ran,ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point4['purple'] += 10
                    #print(point4['purple'])
                #print(point4)
                los_i6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        massage_to_screen(color_4[0],W,175,200,28)
        massage_to_screen(color_4[1],W,175,270,28)
        massage_to_screen(color_4[2],W,175,340,28)
        massage_to_screen(color_4[3],W,175,410,28)
        massage_to_screen(color_4[4],W,48,200,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# I Player 7
##################################
# Blue
#
def ask_i7_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_5[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_i7_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_i7_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_i7_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_i7_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_i7_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point5['blue'] += 10
                    #print(point5['blue'])
                #print(point5)
                ask_i7_2(ran,ra)
#                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen(color_5[1],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_i7_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_i7_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_i7_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_i7_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_i7_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_i7_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point5['red'] += 10
                    #print(point5['red'])
                #print(point5)
                ask_i7_3(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[2],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_i7_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_i7_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_i7_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_i7_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_i7_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_i7_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point5['green'] += 10
                    #print(point5['green'])
                #print(point5)
                ask_i7_4(ran,ra)

        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[3],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_i7_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_i7_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_i7_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_i7_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_i7_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_i7_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point5['yellow'] += 10
                    #print(point5['yellow'])
                #print(point5)
                ask_i7_5(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[4],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_i7_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_i7_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_i7_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_i7_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_i7_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_i7_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point5['pink'] += 10
                    #print(point5['pink'])
                #print(point5)
                ask_i7_6(ran,ra)

        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[5],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_i7_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_i7_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_i7_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_i7_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_i7_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_i7_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point5['purple'] += 10
                    #print(point5['purple'])
                #print(point5)
                ask_i7_7(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[6],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_i7_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_5[6],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_i7(ran,ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_i7(ran,ra,point5)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_i7(ran,ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_i7(ran,ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_i7(ran,ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point5['black'] += 10
                    #print(point5['black'])
                #print(point5)
                los_i7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen(color_5[0],W,175,200,28)
        massage_to_screen(color_5[1],W,175,270,28)
        massage_to_screen(color_5[2],W,175,340,28)
        massage_to_screen(color_5[3],W,175,410,28)
        massage_to_screen(color_5[4],W,48,200,28)
        massage_to_screen(color_5[5],W,48,270,28)
        
        pygame.display.update()
        mainClock.tick(60)
##################################
# I Player 8
##################################
# Blue
#
def ask_i8_1(ran,ra):
    global keydict
    don1 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(gol,W,94,20,40)
#
        massage_to_screen(color_6[0],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        massage_to_screen(esc,W,38,460,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
#        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
#
        if button_1.collidepoint((mx, my)):
            if click:
                if don1 == 1:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_i8_2(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don1 == 2:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_i8_2(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don1 == 3:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_i8_2(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don1 == 4:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_i8_2(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don1 == 5:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_i8_2(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don1 == 6:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_i8_2(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don1 == 7:
                    point6['blue'] += 10
                    #print(point6['blue'])
                #print(point6)
                ask_i8_2(ran,ra)
#                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(color_6[1],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Red
def ask_i8_2(ran,ra):
    global keydict
    don2 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[1],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don2 == 0:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_i8_3(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don2 == 2:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_i8_3(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don2 == 3:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_i8_3(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don2 == 4:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_i8_3(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don2 == 5:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_i8_3(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don2 == 6:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_i8_3(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don2 == 7:
                    point6['red'] += 10
                    #print(point6['red'])
                #print(point6)
                ask_i8_3(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[2],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Green
def ask_i8_3(ran,ra):
    global keydict
    don3 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[2],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don3 == 0:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_i8_4(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don3 == 1:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_i8_4(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don3 == 3:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_i8_4(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don3 == 4:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_i8_4(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don3 == 5:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_i8_4(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don3 == 6:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_i8_4(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don3 == 7:
                    point6['green'] += 10
                    #print(point6['green'])
                #print(point6)
                ask_i8_4(ran,ra)

        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[3],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Yellow
def ask_i8_4(ran,ra):
    global keydict
    don4 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[3],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don4 == 0:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_i8_5(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don4 == 1:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_i8_5(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don4 == 2:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_i8_5(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don4 == 4:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_i8_5(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don4 == 5:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_i8_5(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don4 == 6:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_i8_5(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don4 == 7:
                    point6['yellow'] += 10
                    #print(point6['yellow'])
                #print(point6)
                ask_i8_5(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[4],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Pink
def ask_i8_5(ran,ra):
    global keydict
    don5 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[4],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don5 == 0:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_i8_6(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don5 == 1:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_i8_6(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don5 == 2:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_i8_6(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don5 == 3:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_i8_6(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don5 == 5:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_i8_6(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don5 == 6:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_i8_6(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don5 == 7:
                    point6['pink'] += 10
                    #print(point6['pink'])
                #print(point6)
                ask_i8_6(ran,ra)

        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[5],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Purple
def ask_i8_6(ran,ra):
    global keydict
    don6 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[5],W,42,95,35)
        massage_to_screen(non,W,139,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don6 == 0:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_i8_7(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don6 == 1:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_i8_7(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don6 == 2:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_i8_7(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don6 == 3:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_i8_7(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don6 == 4:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_i8_7(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don6 == 6:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_i8_7(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don6 == 7:
                    point6['purple'] += 10
                    #print(point6['purple'])
                #print(point6)
                ask_i8_7(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[6],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# Black
def ask_i8_7(ran,ra):
    global keydict
    don7 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[6],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)

        if button_1.collidepoint((mx, my)):
            if click:
                if don7 == 0:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_i8_8(ran,ra)
        if button_2.collidepoint((mx, my)):
            if click:
                if don7 == 1:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_i8_8(ran,ra)
        if button_3.collidepoint((mx, my)):
            if click:
                if don7 == 2:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_i8_8(ran,ra)
        if button_4.collidepoint((mx, my)):
            if click:
                if don7 == 3:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_i8_8(ran,ra)
        if button_5.collidepoint((mx, my)):
            if click:
                if don7 == 4:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_i8_8(ran,ra)
        if button_6.collidepoint((mx, my)):
            if click:
                if don7 == 5:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_i8_8(ran,ra)
        if button_7.collidepoint((mx, my)):
            if click:
                if don7 == 7:
                    point6['black'] += 10
                    #print(point6['black'])
                #print(point6)
                ask_i8_8(ran,ra)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[7],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
# White
def ask_i8_8(ran,ra):
    global keydict
    don8 = int(ran)
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)

        massage_to_screen(gol,W,94,20,40)

        massage_to_screen(color_6[7],W,50,95,35)
        massage_to_screen(non,W,130,91,35)

        massage_to_screen(mis,W,80,155,22)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()
        
        button_1 = pygame.Rect(160,192,100,50)
        button_2 = pygame.Rect(160,262,100,50)
        button_3 = pygame.Rect(160,332,100,50)
        button_4 = pygame.Rect(160,402,100,50)
        button_5 = pygame.Rect(40,192,100,50)
        button_6 = pygame.Rect(40,262,100,50)
        button_7 = pygame.Rect(40,332,100,50)
        
        if button_1.collidepoint((mx, my)):
            if click:
                if don8 == 0:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_i8(ran,ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                if don8 == 1:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_i8(ran,ra,point6)
        if button_3.collidepoint((mx, my)):
            if click:
                if don8 == 2:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_i8(ran,ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                if don8 == 3:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_i8(ran,ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                if don8 == 4:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_i8(ran,ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                if don8 == 5:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_i8(ran,ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                if don8 == 6:
                    point6['white'] += 10
                    #print(point6['white'])
                #print(point6)
                los_i8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO6, button_1)
        pygame.draw.rect(screen, BO6, button_2)
        pygame.draw.rect(screen, BO6, button_3)
        pygame.draw.rect(screen, BO6, button_4)
        pygame.draw.rect(screen, BO6, button_5)
        pygame.draw.rect(screen, BO6, button_6)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(color_6[0],W,175,200,28)
        massage_to_screen(color_6[1],W,175,270,28)
        massage_to_screen(color_6[2],W,175,340,28)
        massage_to_screen(color_6[3],W,175,410,28)
        massage_to_screen(color_6[4],W,48,200,28)
        massage_to_screen(color_6[5],W,48,270,28)
        massage_to_screen(color_6[6],W,48,340,28)
        
        pygame.display.update()
        mainClock.tick(60)
########################################################################

# اللاعب الملقوف
########################################################################
###########################
#Food
#########################
reshaped_text = arabic_reshaper.reshape(u'اللاعب الملقوف')
bidi_text = get_display(reshaped_text)
player_loss = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الكلمة')
bidi_text = get_display(reshaped_text)
p_win = bidi_text
reshaped_text = arabic_reshaper.reshape(u'الملقوف اكتشفت ايش هي الكلمة؟')
bidi_text = get_display(reshaped_text)
pm = bidi_text


def los_f3(ran,ra,point1):
    global keydict
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_1[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_f3(ran,ra,point1)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_f4(ran,ra,point2):
    global keydict
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_2[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_f4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_f5(ran,ra,point3):
    global keydict
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_3[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_f5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_f6(ran,ra,point4):
    global keydict
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_4[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_f6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_f7(ran,ra,point5):
    global keydict
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_5[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_f7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_f8(ran,ra,point6):
    global keydict
    
    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_6[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_f8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
###########################
# Game
#########################
def los_g3(ran,ra,point1):
    global keydict
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_1[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_g3(ran,ra,point1)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_g4(ran,ra,point2):
    global keydict
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_2[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_g4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_g5(ran,ra,point3):
    global keydict
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_3[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_g5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_g6(ran,ra,point4):
    global keydict
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_4[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_g6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_g7(ran,ra,point5):
    global keydict
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_5[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_g7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_g8(ran,ra,point6):
    global keydict
    
    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_6[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_g8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
###########################
# Clothes
#########################
def los_c3(ran,ra,point1):
    global keydict
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_1[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_c3(ran,ra,point1)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_c4(ran,ra,point2):
    global keydict
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_2[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_c4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_c5(ran,ra,point3):
    global keydict
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_3[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_c5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_c6(ran,ra,point4):
    global keydict
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_4[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_c6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_c7(ran,ra,point5):
    global keydict
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_5[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_c7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_c8(ran,ra,point6):
    global keydict
    
    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_6[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_c8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
###########################
# Anime
#########################
def los_a3(ran,ra,point1):
    global keydict
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(player_loss,B,65,20,35)
        logo()
        massage_to_screen(color_1[ran],B,105,180,40)
        massage_to_screen(pm,B,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_a3(ran,ra,point1)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_a4(ran,ra,point2):
    global keydict
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(player_loss,B,65,20,35)
        logo()
        massage_to_screen(color_2[ran],B,105,180,40)
        massage_to_screen(pm,B,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_a4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_a5(ran,ra,point3):
    global keydict
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(player_loss,B,65,20,35)
        logo()
        massage_to_screen(color_3[ran],B,105,180,40)
        massage_to_screen(pm,B,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_a5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_a6(ran,ra,point4):
    global keydict
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(player_loss,B,65,20,35)
        logo()
        massage_to_screen(color_4[ran],B,105,180,40)
        massage_to_screen(pm,B,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_a6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_a7(ran,ra,point5):
    global keydict
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(player_loss,B,65,20,35)
        logo()
        massage_to_screen(color_5[ran],B,105,180,40)
        massage_to_screen(pm,B,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_a7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_a8(ran,ra,point6):
    global keydict
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(player_loss,B,65,20,35)
        logo()
        massage_to_screen(color_6[ran],B,105,180,40)
        massage_to_screen(pm,B,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_a8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
###########################
# Cartoon
#########################
def los_k3(ran,ra,point1):
    global keydict
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(player_loss,B,65,20,35)
        logo()
        massage_to_screen(color_1[ran],B,105,180,40)
        massage_to_screen(pm,B,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_k3(ran,ra,point1)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_k4(ran,ra,point2):
    global keydict
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(player_loss,B,65,20,35)
        logo()
        massage_to_screen(color_2[ran],B,105,180,40)
        massage_to_screen(pm,B,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_k4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_k5(ran,ra,point3):
    global keydict
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(player_loss,B,65,20,35)
        logo()
        massage_to_screen(color_3[ran],B,105,180,40)
        massage_to_screen(pm,B,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_k5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_k6(ran,ra,point4):
    global keydict
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(player_loss,B,65,20,35)
        logo()
        massage_to_screen(color_4[ran],B,105,180,40)
        massage_to_screen(pm,B,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_k6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_k7(ran,ra,point5):
    global keydict
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(player_loss,B,65,20,35)
        logo()
        massage_to_screen(color_5[ran],B,105,180,40)
        massage_to_screen(pm,B,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_k7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_k8(ran,ra,point6):
    global keydict
    
    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(player_loss,B,65,20,35)
        logo()
        massage_to_screen(color_6[ran],B,105,180,40)
        massage_to_screen(pm,B,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_k8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
###########################
# Series
#########################
def los_s3(ran,ra,point1):
    global keydict
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_1[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_s3(ran,ra,point1)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_s4(ran,ra,point2):
    global keydict
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_2[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_s4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_s5(ran,ra,point3):
    global keydict
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_3[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_s5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_s6(ran,ra,point4):
    global keydict
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_4[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_s6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_s7(ran,ra,point5):
    global keydict
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_5[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_s7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_s8(ran,ra,point6):
    global keydict
    
    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_6[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_s8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
###########################
# I
#########################
def los_i3(ran,ra,point1):
    global keydict
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_1[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_i3(ran,ra,point1)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_i4(ran,ra,point2):
    global keydict
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_2[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_i4(ran,ra,point2)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_i5(ran,ra,point3):
    global keydict
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_3[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_i5(ran,ra,point3)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_i6(ran,ra,point4):
    global keydict
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_4[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_i6(ran,ra,point4)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_i7(ran,ra,point5):
    global keydict
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_5[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_i7(ran,ra,point5)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
##
def los_i8(ran,ra,point6):
    global keydict
    
    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(player_loss,W,65,20,35)
        logo()
        massage_to_screen(color_6[ran],W,105,180,40)
        massage_to_screen(pm,W,30,350,22)
        

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                secrt_i8(ran,ra,point6)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(p_win,W,118,407,35)
        
        pygame.display.update()
        mainClock.tick(60)
########################################################################
        
# اكتشاف الكلمة
########################################################################
reshaped_text = arabic_reshaper.reshape(u'ايش الكلمة؟')
bidi_text = get_display(reshaped_text)
word_it = bidi_text

################
# Food
########################
##
def secrt_f3(ran,ra,point1):
    global keydict
    rsf1 = random.randrange(13)
    rsf2 = random.randrange(13,27)
    rsf3 = random.randrange(27,40)
    rsf4 = random.randrange(40,54)
    rsf5 = random.randrange(54,67)
    rsf6 = random.randrange(67,81)

    p_co1 = ['blue','red','green']

    hide_food.remove(food_words[ra])
    new_hide = hide_food

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point1[p_co1[ran]] += 10
                #print(point1)
                last_f3(ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                last_f3(ra,point1)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_f3(ra,point1)
        if button_4.collidepoint((mx, my)):
            if click:
                last_f3(ra,point1)
        if button_5.collidepoint((mx, my)):
            if click:
                last_f3(ra,point1)
        if button_6.collidepoint((mx, my)):
            if click:
                last_f3(ra,point1)
        if button_7.collidepoint((mx, my)):
            if click:
                last_f3(ra,point1)
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(food_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO1, button_2)
        massage_to_screen(new_hide[rsf1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO1, button_3)
        massage_to_screen(new_hide[rsf2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO1, button_4)
        massage_to_screen(new_hide[rsf3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO1, button_5)
        massage_to_screen(new_hide[rsf4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen(new_hide[rsf5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(new_hide[rsf6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_f4(ran,ra,point2):
    global keydict
    rsf1 = random.randrange(13)
    rsf2 = random.randrange(13,27)
    rsf3 = random.randrange(27,40)
    rsf4 = random.randrange(40,54)
    rsf5 = random.randrange(54,67)
    rsf6 = random.randrange(67,81)

    p_co2 = ['blue','red','green','yellow']

    hide_food.remove(food_words[ra])
    new_hide = hide_food

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point2[p_co2[ran]] += 10
                #print(point2)
                last_f4(ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                last_f4(ra,point2)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_f4(ra,point2)
        if button_4.collidepoint((mx, my)):
            if click:
                last_f4(ra,point2)
        if button_5.collidepoint((mx, my)):
            if click:
                last_f4(ra,point2)
        if button_6.collidepoint((mx, my)):
            if click:
                last_f4(ra,point2)
        if button_7.collidepoint((mx, my)):
            if click:
                last_f4(ra,point2)
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(food_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO1, button_2)
        massage_to_screen(new_hide[rsf1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO1, button_3)
        massage_to_screen(new_hide[rsf2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO1, button_4)
        massage_to_screen(new_hide[rsf3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO1, button_5)
        massage_to_screen(new_hide[rsf4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen(new_hide[rsf5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(new_hide[rsf6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_f5(ran,ra,point3):
    global keydict
    rsf1 = random.randrange(13)
    rsf2 = random.randrange(13,27)
    rsf3 = random.randrange(27,40)
    rsf4 = random.randrange(40,54)
    rsf5 = random.randrange(54,67)
    rsf6 = random.randrange(67,81)

    p_co3 = ['blue','red','green','yellow','pink']

    hide_food.remove(food_words[ra])
    new_hide = hide_food

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point3[p_co3[ran]] += 10
                #print(point3)
                last_f5(ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                last_f5(ra,point3)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_f5(ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                last_f5(ra,point3)
        if button_5.collidepoint((mx, my)):
            if click:
                last_f5(ra,point3)
        if button_6.collidepoint((mx, my)):
            if click:
                last_f5(ra,point3)
        if button_7.collidepoint((mx, my)):
            if click:
                last_f5(ra,point3)
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(food_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO1, button_2)
        massage_to_screen(new_hide[rsf1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO1, button_3)
        massage_to_screen(new_hide[rsf2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO1, button_4)
        massage_to_screen(new_hide[rsf3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO1, button_5)
        massage_to_screen(new_hide[rsf4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen(new_hide[rsf5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(new_hide[rsf6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_f6(ran,ra,point4):
    global keydict
    rsf1 = random.randrange(13)
    rsf2 = random.randrange(13,27)
    rsf3 = random.randrange(27,40)
    rsf4 = random.randrange(40,54)
    rsf5 = random.randrange(54,67)
    rsf6 = random.randrange(67,81)

    p_co4 = ['blue','red','green','yellow','pink','purple']

    hide_food.remove(food_words[ra])
    new_hide = hide_food

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point4[p_co4[ran]] += 10
                #print(point4)
                last_f6(ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                last_f6(ra,point4)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_f6(ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                last_f6(ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                last_f6(ra,point4)
        if button_6.collidepoint((mx, my)):
            if click:
                last_f6(ra,point4)
        if button_7.collidepoint((mx, my)):
            if click:
                last_f6(ra,point4)
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(food_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO1, button_2)
        massage_to_screen(new_hide[rsf1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO1, button_3)
        massage_to_screen(new_hide[rsf2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO1, button_4)
        massage_to_screen(new_hide[rsf3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO1, button_5)
        massage_to_screen(new_hide[rsf4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen(new_hide[rsf5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(new_hide[rsf6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_f7(ran,ra,point5):
    global keydict
    rsf1 = random.randrange(13)
    rsf2 = random.randrange(13,27)
    rsf3 = random.randrange(27,40)
    rsf4 = random.randrange(40,54)
    rsf5 = random.randrange(54,67)
    rsf6 = random.randrange(67,81)

    p_co5 = ['blue','red','green','yellow','pink','purple','black']

    hide_food.remove(food_words[ra])
    new_hide = hide_food

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point5[p_co5[ran]] += 10
                #print(point5)
                last_f7(ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                last_f7(ra,point5)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_f7(ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                last_f7(ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                last_f7(ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                last_f7(ra,point5)
        if button_7.collidepoint((mx, my)):
            if click:
                last_f7(ra,point5)
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(food_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO1, button_2)
        massage_to_screen(new_hide[rsf1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO1, button_3)
        massage_to_screen(new_hide[rsf2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO1, button_4)
        massage_to_screen(new_hide[rsf3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO1, button_5)
        massage_to_screen(new_hide[rsf4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen(new_hide[rsf5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(new_hide[rsf6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_f8(ran,ra,point6):
    global keydict
    rsf1 = random.randrange(13)
    rsf2 = random.randrange(13,27)
    rsf3 = random.randrange(27,40)
    rsf4 = random.randrange(40,54)
    rsf5 = random.randrange(54,67)
    rsf6 = random.randrange(67,81)

    p_co6 = ['blue','red','green','yellow','pink','purple','black','white']

    hide_food.remove(food_words[ra])
    new_hide = hide_food

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point6[p_co6[ran]] += 10
                #print(point6)
                last_f8(ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                last_f8(ra,point6)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_f8(ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                last_f8(ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                last_f8(ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                last_f8(ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                last_f8(ra,point6)
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(food_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO1, button_2)
        massage_to_screen(new_hide[rsf1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO1, button_3)
        massage_to_screen(new_hide[rsf2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO1, button_4)
        massage_to_screen(new_hide[rsf3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO1, button_5)
        massage_to_screen(new_hide[rsf4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO1, button_6)
        massage_to_screen(new_hide[rsf5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO1, button_7)
        massage_to_screen(new_hide[rsf6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
################
# Game
########################
##
def secrt_g3(ran,ra,point1):
    global keydict
    rsg1 = random.randrange(15)
    rsg2 = random.randrange(15,31)
    rsg3 = random.randrange(31,46)
    rsg4 = random.randrange(46,62)
    rsg5 = random.randrange(62,77)
    rsg6 = random.randrange(77,94)

    p_co1 = ['blue','red','green']

    hide_game.remove(game_words[ra])
    new_hide = hide_game

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point1[p_co1[ran]] += 10
                #print(point1)
                last_g3(ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                last_g3(ra,point1)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_g3(ra,point1)
        if button_4.collidepoint((mx, my)):
            if click:
                last_g3(ra,point1)
        if button_5.collidepoint((mx, my)):
            if click:
                last_g3(ra,point1)
        if button_6.collidepoint((mx, my)):
            if click:
                last_g3(ra,point1)
        if button_7.collidepoint((mx, my)):
            if click:
                last_g3(ra,point1)
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(game_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO2, button_2)
        massage_to_screen(new_hide[rsg1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO2, button_3)
        massage_to_screen(new_hide[rsg2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO2, button_4)
        massage_to_screen(new_hide[rsg3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO2, button_5)
        massage_to_screen(new_hide[rsg4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen(new_hide[rsg5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(new_hide[rsg6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_g4(ran,ra,point2):
    global keydict
    rsg1 = random.randrange(15)
    rsg2 = random.randrange(15,31)
    rsg3 = random.randrange(31,46)
    rsg4 = random.randrange(46,62)
    rsg5 = random.randrange(62,77)
    rsg6 = random.randrange(77,94)

    p_co2 = ['blue','red','green','yellow']

    hide_game.remove(game_words[ra])
    new_hide = hide_game

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point2[p_co2[ran]] += 10
                #print(point2)
                last_g4(ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                last_g4(ra,point2)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_g4(ra,point2)
        if button_4.collidepoint((mx, my)):
            if click:
                last_g4(ra,point2)
        if button_5.collidepoint((mx, my)):
            if click:
                last_g4(ra,point2)
        if button_6.collidepoint((mx, my)):
            if click:
                last_g4(ra,point2)
        if button_7.collidepoint((mx, my)):
            if click:
                last_g4(ra,point2)
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(game_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO2, button_2)
        massage_to_screen(new_hide[rsg1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO2, button_3)
        massage_to_screen(new_hide[rsg2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO2, button_4)
        massage_to_screen(new_hide[rsg3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO2, button_5)
        massage_to_screen(new_hide[rsg4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen(new_hide[rsg5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(new_hide[rsg6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_g5(ran,ra,point3):
    global keydict
    rsg1 = random.randrange(15)
    rsg2 = random.randrange(15,31)
    rsg3 = random.randrange(31,46)
    rsg4 = random.randrange(46,62)
    rsg5 = random.randrange(62,77)
    rsg6 = random.randrange(77,94)

    p_co3 = ['blue','red','green','yellow','pink']

    hide_game.remove(game_words[ra])
    new_hide = hide_game

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point3[p_co3[ran]] += 10
                #print(point3)
                last_g5(ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                last_g5(ra,point3)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_g5(ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                last_g5(ra,point3)
        if button_5.collidepoint((mx, my)):
            if click:
                last_g5(ra,point3)
        if button_6.collidepoint((mx, my)):
            if click:
                last_g5(ra,point3)
        if button_7.collidepoint((mx, my)):
            if click:
                last_g5(ra,point3)
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(game_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO2, button_2)
        massage_to_screen(new_hide[rsg1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO2, button_3)
        massage_to_screen(new_hide[rsg2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO2, button_4)
        massage_to_screen(new_hide[rsg3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO2, button_5)
        massage_to_screen(new_hide[rsg4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen(new_hide[rsg5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(new_hide[rsg6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_g6(ran,ra,point4):
    global keydict
    rsg1 = random.randrange(15)
    rsg2 = random.randrange(15,31)
    rsg3 = random.randrange(31,46)
    rsg4 = random.randrange(46,62)
    rsg5 = random.randrange(62,77)
    rsg6 = random.randrange(77,94)

    p_co4 = ['blue','red','green','yellow','pink','purple']

    hide_game.remove(game_words[ra])
    new_hide = hide_game

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point4[p_co4[ran]] += 10
                #print(point4)
                last_g6(ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                last_g6(ra,point4)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_g6(ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                last_g6(ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                last_g6(ra,point4)
        if button_6.collidepoint((mx, my)):
            if click:
                last_g6(ra,point4)
        if button_7.collidepoint((mx, my)):
            if click:
                last_g6(ra,point4)
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(game_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO2, button_2)
        massage_to_screen(new_hide[rsg1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO2, button_3)
        massage_to_screen(new_hide[rsg2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO2, button_4)
        massage_to_screen(new_hide[rsg3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO2, button_5)
        massage_to_screen(new_hide[rsg4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen(new_hide[rsg5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(new_hide[rsg6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_g7(ran,ra,point5):
    global keydict
    rsg1 = random.randrange(15)
    rsg2 = random.randrange(15,31)
    rsg3 = random.randrange(31,46)
    rsg4 = random.randrange(46,62)
    rsg5 = random.randrange(62,77)
    rsg6 = random.randrange(77,94)

    p_co5 = ['blue','red','green','yellow','pink','purple','black']

    hide_game.remove(game_words[ra])
    new_hide = hide_game

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point5[p_co5[ran]] += 10
                #print(point5)
                last_g7(ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                last_g7(ra,point5)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_g7(ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                last_g7(ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                last_g7(ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                last_g7(ra,point5)
        if button_7.collidepoint((mx, my)):
            if click:
                last_g7(ra,point5)
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(game_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO2, button_2)
        massage_to_screen(new_hide[rsg1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO2, button_3)
        massage_to_screen(new_hide[rsg2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO2, button_4)
        massage_to_screen(new_hide[rsg3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO2, button_5)
        massage_to_screen(new_hide[rsg4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen(new_hide[rsg5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(new_hide[rsg6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_g8(ran,ra,point6):
    global keydict
    rsg1 = random.randrange(15)
    rsg2 = random.randrange(15,31)
    rsg3 = random.randrange(31,46)
    rsg4 = random.randrange(46,62)
    rsg5 = random.randrange(62,77)
    rsg6 = random.randrange(77,94)

    p_co6 = ['blue','red','green','yellow','pink','purple','black','white']

    hide_game.remove(game_words[ra])
    new_hide = hide_game

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point6[p_co6[ran]] += 10
                #print(point6)
                last_g8(ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                last_g8(ra,point6)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_g8(ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                last_g8(ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                last_g8(ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                last_g8(ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                last_g8(ra,point6)
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(game_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO2, button_2)
        massage_to_screen(new_hide[rsg1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO2, button_3)
        massage_to_screen(new_hide[rsg2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO2, button_4)
        massage_to_screen(new_hide[rsg3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO2, button_5)
        massage_to_screen(new_hide[rsg4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO2, button_6)
        massage_to_screen(new_hide[rsg5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO2, button_7)
        massage_to_screen(new_hide[rsg6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
################
# Clothes
########################
##
def secrt_c3(ran,ra,point1):
    global keydict
    rsc1 = random.randrange(5)
    rsc2 = random.randrange(5,11)
    rsc3 = random.randrange(11,17)
    rsc4 = random.randrange(17,23)
    rsc5 = random.randrange(23,29)
    rsc6 = random.randrange(29,34)

    p_co1 = ['blue','red','green']

    hide_clothes.remove(clothes_words[ra])
    new_hide = hide_clothes

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point1[p_co1[ran]] += 10
                #print(point1)
                last_c3(ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                last_c3(ra,point1)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_c3(ra,point1)
        if button_4.collidepoint((mx, my)):
            if click:
                last_c3(ra,point1)
        if button_5.collidepoint((mx, my)):
            if click:
                last_c3(ra,point1)
        if button_6.collidepoint((mx, my)):
            if click:
                last_c3(ra,point1)
        if button_7.collidepoint((mx, my)):
            if click:
                last_c3(ra,point1)
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(clothes_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO3, button_2)
        massage_to_screen(new_hide[rsc1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO3, button_3)
        massage_to_screen(new_hide[rsc2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO3, button_4)
        massage_to_screen(new_hide[rsc3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO3, button_5)
        massage_to_screen(new_hide[rsc4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen(new_hide[rsc5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(new_hide[rsc6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_c4(ran,ra,point2):
    global keydict
    rsc1 = random.randrange(5)
    rsc2 = random.randrange(5,11)
    rsc3 = random.randrange(11,17)
    rsc4 = random.randrange(17,23)
    rsc5 = random.randrange(23,29)
    rsc6 = random.randrange(29,34)

    p_co2 = ['blue','red','green','yellow']

    hide_clothes.remove(clothes_words[ra])
    new_hide = hide_clothes

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point2[p_co2[ran]] += 10
                #print(point2)
                last_c4(ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                last_c4(ra,point2)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_c4(ra,point2)
        if button_4.collidepoint((mx, my)):
            if click:
                last_c4(ra,point2)
        if button_5.collidepoint((mx, my)):
            if click:
                last_c4(ra,point2)
        if button_6.collidepoint((mx, my)):
            if click:
                last_c4(ra,point2)
        if button_7.collidepoint((mx, my)):
            if click:
                last_c4(ra,point2)
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(clothes_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO3, button_2)
        massage_to_screen(new_hide[rsc1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO3, button_3)
        massage_to_screen(new_hide[rsc2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO3, button_4)
        massage_to_screen(new_hide[rsc3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO3, button_5)
        massage_to_screen(new_hide[rsc4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen(new_hide[rsc5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(new_hide[rsc6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_c5(ran,ra,point3):
    global keydict
    rsc1 = random.randrange(5)
    rsc2 = random.randrange(5,11)
    rsc3 = random.randrange(11,17)
    rsc4 = random.randrange(17,23)
    rsc5 = random.randrange(23,29)
    rsc6 = random.randrange(29,34)

    p_co3 = ['blue','red','green','yellow','pink']

    hide_clothes.remove(clothes_words[ra])
    new_hide = hide_clothes

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point3[p_co3[ran]] += 10
                #print(point3)
                last_c5(ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                last_c5(ra,point3)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_c5(ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                last_c5(ra,point3)
        if button_5.collidepoint((mx, my)):
            if click:
                last_c5(ra,point3)
        if button_6.collidepoint((mx, my)):
            if click:
                last_c5(ra,point3)
        if button_7.collidepoint((mx, my)):
            if click:
                last_c5(ra,point3)
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(clothes_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO3, button_2)
        massage_to_screen(new_hide[rsc1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO3, button_3)
        massage_to_screen(new_hide[rsc2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO3, button_4)
        massage_to_screen(new_hide[rsc3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO3, button_5)
        massage_to_screen(new_hide[rsc4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen(new_hide[rsc5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(new_hide[rsc6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_c6(ran,ra,point4):
    global keydict
    rsc1 = random.randrange(5)
    rsc2 = random.randrange(5,11)
    rsc3 = random.randrange(11,17)
    rsc4 = random.randrange(17,23)
    rsc5 = random.randrange(23,29)
    rsc6 = random.randrange(29,34)

    p_co4 = ['blue','red','green','yellow','pink','purple']

    hide_clothes.remove(clothes_words[ra])
    new_hide = hide_clothes

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point4[p_co4[ran]] += 10
                #print(point4)
                last_c6(ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                last_c6(ra,point4)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_c6(ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                last_c6(ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                last_c6(ra,point4)
        if button_6.collidepoint((mx, my)):
            if click:
                last_c6(ra,point4)
        if button_7.collidepoint((mx, my)):
            if click:
                last_c6(ra,point4)
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(clothes_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO3, button_2)
        massage_to_screen(new_hide[rsc1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO3, button_3)
        massage_to_screen(new_hide[rsc2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO3, button_4)
        massage_to_screen(new_hide[rsc3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO3, button_5)
        massage_to_screen(new_hide[rsc4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen(new_hide[rsc5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(new_hide[rsc6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_c7(ran,ra,point5):
    global keydict
    rsc1 = random.randrange(5)
    rsc2 = random.randrange(5,11)
    rsc3 = random.randrange(11,17)
    rsc4 = random.randrange(17,23)
    rsc5 = random.randrange(23,29)
    rsc6 = random.randrange(29,34)

    p_co5 = ['blue','red','green','yellow','pink','purple','black']

    hide_clothes.remove(clothes_words[ra])
    new_hide = hide_clothes

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point5[p_co5[ran]] += 10
                #print(point5)
                last_c7(ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                last_c7(ra,point5)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_c7(ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                last_c7(ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                last_c7(ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                last_c7(ra,point5)
        if button_7.collidepoint((mx, my)):
            if click:
                last_c7(ra,point5)
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(clothes_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO3, button_2)
        massage_to_screen(new_hide[rsc1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO3, button_3)
        massage_to_screen(new_hide[rsc2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO3, button_4)
        massage_to_screen(new_hide[rsc3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO3, button_5)
        massage_to_screen(new_hide[rsc4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen(new_hide[rsc5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(new_hide[rsc6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_c8(ran,ra,point6):
    global keydict
    rsc1 = random.randrange(5)
    rsc2 = random.randrange(5,11)
    rsc3 = random.randrange(11,17)
    rsc4 = random.randrange(17,23)
    rsc5 = random.randrange(23,29)
    rsc6 = random.randrange(29,34)

    p_co6 = ['blue','red','green','yellow','pink','purple','black','white']

    hide_clothes.remove(clothes_words[ra])
    new_hide = hide_clothes

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point6[p_co6[ran]] += 10
                #print(point6)
                last_c8(ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                last_c8(ra,point6)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_c8(ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                last_c8(ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                last_c8(ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                last_c8(ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                last_c8(ra,point6)
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(clothes_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO3, button_2)
        massage_to_screen(new_hide[rsc1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO3, button_3)
        massage_to_screen(new_hide[rsc2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO3, button_4)
        massage_to_screen(new_hide[rsc3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO3, button_5)
        massage_to_screen(new_hide[rsc4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO3, button_6)
        massage_to_screen(new_hide[rsc5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO3, button_7)
        massage_to_screen(new_hide[rsc6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
################
# Anime
########################
##
def secrt_a3(ran,ra,point1):
    global keydict
    rsa1 = random.randrange(12)
    rsa2 = random.randrange(12,23)
    rsa3 = random.randrange(23,35)
    rsa4 = random.randrange(35,46)
    rsa5 = random.randrange(46,58)
    rsa6 = random.randrange(58,69)

    p_co1 = ['blue','red','green']

    hide_anime.remove(anime_words[ra])
    new_hide = hide_anime

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,465,22)
        massage_to_screen(word_it,B,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point1[p_co1[ran]] += 10
                #print(point1)
                last_a3(ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                last_a3(ra,point1)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_a3(ra,point1)
        if button_4.collidepoint((mx, my)):
            if click:
                last_a3(ra,point1)
        if button_5.collidepoint((mx, my)):
            if click:
                last_a3(ra,point1)
        if button_6.collidepoint((mx, my)):
            if click:
                last_a3(ra,point1)
        if button_7.collidepoint((mx, my)):
            if click:
                last_a3(ra,point1)
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(anime_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(new_hide[rsa1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(new_hide[rsa2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(new_hide[rsa3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(new_hide[rsa4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(new_hide[rsa5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(new_hide[rsa6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_a4(ran,ra,point2):
    global keydict
    rsa1 = random.randrange(12)
    rsa2 = random.randrange(12,23)
    rsa3 = random.randrange(23,35)
    rsa4 = random.randrange(35,46)
    rsa5 = random.randrange(46,58)
    rsa6 = random.randrange(58,69)

    p_co2 = ['blue','red','green','yellow']

    hide_anime.remove(anime_words[ra])
    new_hide = hide_anime

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,465,22)
        massage_to_screen(word_it,B,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point2[p_co2[ran]] += 10
                #print(point2)
                last_a4(ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                last_a4(ra,point2)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_a4(ra,point2)
        if button_4.collidepoint((mx, my)):
            if click:
                last_a4(ra,point2)
        if button_5.collidepoint((mx, my)):
            if click:
                last_a4(ra,point2)
        if button_6.collidepoint((mx, my)):
            if click:
                last_a4(ra,point2)
        if button_7.collidepoint((mx, my)):
            if click:
                last_a4(ra,point2)
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(anime_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(new_hide[rsa1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(new_hide[rsa2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(new_hide[rsa3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(new_hide[rsa4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(new_hide[rsa5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(new_hide[rsa6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_a5(ran,ra,point3):
    global keydict
    rsa1 = random.randrange(12)
    rsa2 = random.randrange(12,23)
    rsa3 = random.randrange(23,35)
    rsa4 = random.randrange(35,46)
    rsa5 = random.randrange(46,58)
    rsa6 = random.randrange(58,69)

    p_co3 = ['blue','red','green','yellow','pink']

    hide_anime.remove(anime_words[ra])
    new_hide = hide_anime

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,465,22)
        massage_to_screen(word_it,B,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point3[p_co3[ran]] += 10
                #print(point3)
                last_a5(ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                last_a5(ra,point3)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_a5(ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                last_a5(ra,point3)
        if button_5.collidepoint((mx, my)):
            if click:
                last_a5(ra,point3)
        if button_6.collidepoint((mx, my)):
            if click:
                last_a5(ra,point3)
        if button_7.collidepoint((mx, my)):
            if click:
                last_a5(ra,point3)
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(anime_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(new_hide[rsa1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(new_hide[rsa2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(new_hide[rsa3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(new_hide[rsa4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(new_hide[rsa5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(new_hide[rsa6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_a6(ran,ra,point4):
    global keydict
    rsa1 = random.randrange(12)
    rsa2 = random.randrange(12,23)
    rsa3 = random.randrange(23,35)
    rsa4 = random.randrange(35,46)
    rsa5 = random.randrange(46,58)
    rsa6 = random.randrange(58,69)

    p_co4 = ['blue','red','green','yellow','pink','purple']

    hide_anime.remove(anime_words[ra])
    new_hide = hide_anime

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,465,22)
        massage_to_screen(word_it,B,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point4[p_co4[ran]] += 10
                #print(point4)
                last_a6(ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                last_a6(ra,point4)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_a6(ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                last_a6(ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                last_a6(ra,point4)
        if button_6.collidepoint((mx, my)):
            if click:
                last_a6(ra,point4)
        if button_7.collidepoint((mx, my)):
            if click:
                last_a6(ra,point4)
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(anime_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(new_hide[rsa1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(new_hide[rsa2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(new_hide[rsa3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(new_hide[rsa4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(new_hide[rsa5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(new_hide[rsa6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_a7(ran,ra,point5):
    global keydict
    rsa1 = random.randrange(12)
    rsa2 = random.randrange(12,23)
    rsa3 = random.randrange(23,35)
    rsa4 = random.randrange(35,46)
    rsa5 = random.randrange(46,58)
    rsa6 = random.randrange(58,69)

    p_co5 = ['blue','red','green','yellow','pink','purple','black']

    hide_anime.remove(anime_words[ra])
    new_hide = hide_anime

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,465,22)
        massage_to_screen(word_it,B,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point5[p_co5[ran]] += 10
                #print(point5)
                last_a7(ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                last_a7(ra,point5)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_a7(ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                last_a7(ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                last_a7(ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                last_a7(ra,point5)
        if button_7.collidepoint((mx, my)):
            if click:
                last_a7(ra,point5)
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(anime_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(new_hide[rsa1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(new_hide[rsa2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(new_hide[rsa3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(new_hide[rsa4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(new_hide[rsa5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(new_hide[rsa6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_a8(ran,ra,point6):
    global keydict
    rsa1 = random.randrange(12)
    rsa2 = random.randrange(12,23)
    rsa3 = random.randrange(23,35)
    rsa4 = random.randrange(35,46)
    rsa5 = random.randrange(46,58)
    rsa6 = random.randrange(58,69)

    p_co6 = ['blue','red','green','yellow','pink','purple','black','white']

    hide_anime.remove(anime_words[ra])
    new_hide = hide_anime

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,465,22)
        massage_to_screen(word_it,B,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point6[p_co6[ran]] += 10
                #print(point6)
                last_a8(ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                last_a8(ra,point6)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_a8(ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                last_a8(ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                last_a8(ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                last_a8(ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                last_a8(ra,point6)
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(anime_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(new_hide[rsa1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(new_hide[rsa2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(new_hide[rsa3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(new_hide[rsa4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(new_hide[rsa5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(new_hide[rsa6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
################
# Cartoon
########################
##
def secrt_k3(ran,ra,point1):
    global keydict
    rsa1 = random.randrange(12)
    rsa2 = random.randrange(12,23)
    rsa3 = random.randrange(23,35)
    rsa4 = random.randrange(35,46)
    rsa5 = random.randrange(46,58)
    rsa6 = random.randrange(58,69)

    p_co1 = ['blue','red','green']

    hide_anime1.remove(anime1_words[ra])
    new_hide = hide_anime1

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,465,22)
        massage_to_screen(word_it,B,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point1[p_co1[ran]] += 10
                last_k3(ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                last_k3(ra,point1)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_k3(ra,point1)
        if button_4.collidepoint((mx, my)):
            if click:
                last_k3(ra,point1)
        if button_5.collidepoint((mx, my)):
            if click:
                last_k3(ra,point1)
        if button_6.collidepoint((mx, my)):
            if click:
                last_k3(ra,point1)
        if button_7.collidepoint((mx, my)):
            if click:
                last_k3(ra,point1)
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(anime1_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(new_hide[rsa1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(new_hide[rsa2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(new_hide[rsa3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(new_hide[rsa4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(new_hide[rsa5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(new_hide[rsa6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_k4(ran,ra,point2):
    global keydict
    rsa1 = random.randrange(12)
    rsa2 = random.randrange(12,23)
    rsa3 = random.randrange(23,35)
    rsa4 = random.randrange(35,46)
    rsa5 = random.randrange(46,58)
    rsa6 = random.randrange(58,69)

    p_co2 = ['blue','red','green','yellow']

    hide_anime1.remove(anime1_words[ra])
    new_hide = hide_anime1

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,465,22)
        massage_to_screen(word_it,B,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point2[p_co2[ran]] += 10
                #print(point2)
                last_k4(ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                last_k4(ra,point2)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_k4(ra,point2)
        if button_4.collidepoint((mx, my)):
            if click:
                last_k4(ra,point2)
        if button_5.collidepoint((mx, my)):
            if click:
                last_k4(ra,point2)
        if button_6.collidepoint((mx, my)):
            if click:
                last_k4(ra,point2)
        if button_7.collidepoint((mx, my)):
            if click:
                last_k4(ra,point2)
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(anime1_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(new_hide[rsa1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(new_hide[rsa2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(new_hide[rsa3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(new_hide[rsa4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(new_hide[rsa5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(new_hide[rsa6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_k5(ran,ra,point3):
    global keydict
    rsa1 = random.randrange(12)
    rsa2 = random.randrange(12,23)
    rsa3 = random.randrange(23,35)
    rsa4 = random.randrange(35,46)
    rsa5 = random.randrange(46,58)
    rsa6 = random.randrange(58,69)

    p_co3 = ['blue','red','green','yellow','pink']

    hide_anime1.remove(anime1_words[ra])
    new_hide = hide_anime1

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,465,22)
        massage_to_screen(word_it,B,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point3[p_co3[ran]] += 10
                #print(point3)
                last_k5(ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                last_k5(ra,point3)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_k5(ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                last_k5(ra,point3)
        if button_5.collidepoint((mx, my)):
            if click:
                last_k5(ra,point3)
        if button_6.collidepoint((mx, my)):
            if click:
                last_k5(ra,point3)
        if button_7.collidepoint((mx, my)):
            if click:
                last_k5(ra,point3)
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(anime1_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(new_hide[rsa1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(new_hide[rsa2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(new_hide[rsa3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(new_hide[rsa4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(new_hide[rsa5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(new_hide[rsa6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_k6(ran,ra,point4):
    global keydict
    rsa1 = random.randrange(12)
    rsa2 = random.randrange(12,23)
    rsa3 = random.randrange(23,35)
    rsa4 = random.randrange(35,46)
    rsa5 = random.randrange(46,58)
    rsa6 = random.randrange(58,69)

    p_co4 = ['blue','red','green','yellow','pink','purple']

    hide_anime1.remove(anime1_words[ra])
    new_hide = hide_anime1

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,465,22)
        massage_to_screen(word_it,B,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point4[p_co4[ran]] += 10
                #print(point4)
                last_k6(ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                last_k6(ra,point4)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_k6(ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                last_k6(ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                last_k6(ra,point4)
        if button_6.collidepoint((mx, my)):
            if click:
                last_k6(ra,point4)
        if button_7.collidepoint((mx, my)):
            if click:
                last_k6(ra,point4)
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(anime1_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(new_hide[rsa1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(new_hide[rsa2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(new_hide[rsa3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(new_hide[rsa4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(new_hide[rsa5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(new_hide[rsa6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_k7(ran,ra,point5):
    global keydict
    rsa1 = random.randrange(12)
    rsa2 = random.randrange(12,23)
    rsa3 = random.randrange(23,35)
    rsa4 = random.randrange(35,46)
    rsa5 = random.randrange(46,58)
    rsa6 = random.randrange(58,69)

    p_co5 = ['blue','red','green','yellow','pink','purple','black']

    hide_anime1.remove(anime1_words[ra])
    new_hide = hide_anime1

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,465,22)
        massage_to_screen(word_it,B,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point5[p_co5[ran]] += 10
                #print(point5)
                last_k7(ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                last_k7(ra,point5)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_k7(ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                last_k7(ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                last_k7(ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                last_k7(ra,point5)
        if button_7.collidepoint((mx, my)):
            if click:
                last_k7(ra,point5)
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(anime1_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(new_hide[rsa1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(new_hide[rsa2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(new_hide[rsa3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(new_hide[rsa4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(new_hide[rsa5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(new_hide[rsa6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_k8(ran,ra,point6):
    global keydict
    rsa1 = random.randrange(12)
    rsa2 = random.randrange(12,23)
    rsa3 = random.randrange(23,35)
    rsa4 = random.randrange(35,46)
    rsa5 = random.randrange(46,58)
    rsa6 = random.randrange(58,69)

    p_co6 = ['blue','red','green','yellow','pink','purple','black','white']

    hide_anime1.remove(anime1_words[ra])
    new_hide = hide_anime1

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,465,22)
        massage_to_screen(word_it,B,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point6[p_co6[ran]] += 10
                #print(point6)
                last_k8(ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                last_k8(ra,point6)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_k8(ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                last_k8(ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                last_k8(ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                last_k8(ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                last_k8(ra,point6)
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(anime1_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO4, button_2)
        massage_to_screen(new_hide[rsa1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO4, button_3)
        massage_to_screen(new_hide[rsa2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO4, button_4)
        massage_to_screen(new_hide[rsa3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO4, button_5)
        massage_to_screen(new_hide[rsa4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO4, button_6)
        massage_to_screen(new_hide[rsa5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO4, button_7)
        massage_to_screen(new_hide[rsa6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
################
# Series
########################
##
def secrt_s3(ran,ra,point1):
    global keydict
    rss1 = random.randrange(16)
    rss2 = random.randrange(16,32)
    rss3 = random.randrange(32,48)
    rss4 = random.randrange(48,64)
    rss5 = random.randrange(64,80)
    rss6 = random.randrange(80,99)

    p_co1 = ['blue','red','green']

    hide_series.remove(series_words[ra])
    new_hide = hide_series

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point1[p_co1[ran]] += 10
                #print(point1)
                last_s3(ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                last_s3(ra,point1)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_s3(ra,point1)
        if button_4.collidepoint((mx, my)):
            if click:
                last_s3(ra,point1)
        if button_5.collidepoint((mx, my)):
            if click:
                last_s3(ra,point1)
        if button_6.collidepoint((mx, my)):
            if click:
                last_s3(ra,point1)
        if button_7.collidepoint((mx, my)):
            if click:
                last_s3(ra,point1)
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(series_words[ra],W,106,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO5, button_2)
        massage_to_screen(new_hide[rss1],W,106,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO5, button_3)
        massage_to_screen(new_hide[rss2],W,106,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO5, button_4)
        massage_to_screen(new_hide[rss3],W,106,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO5, button_5)
        massage_to_screen(new_hide[rss4],W,106,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen(new_hide[rss5],W,106,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(new_hide[rss6],W,106,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_s4(ran,ra,point2):
    global keydict
    rss1 = random.randrange(16)
    rss2 = random.randrange(16,32)
    rss3 = random.randrange(32,48)
    rss4 = random.randrange(48,64)
    rss5 = random.randrange(64,80)
    rss6 = random.randrange(80,99)

    p_co2 = ['blue','red','green','yellow']

    hide_series.remove(series_words[ra])
    new_hide = hide_series

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point2[p_co2[ran]] += 10
                #print(point2)
                last_s4(ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                last_s4(ra,point2)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_s4(ra,point2)
        if button_4.collidepoint((mx, my)):
            if click:
                last_s4(ra,point2)
        if button_5.collidepoint((mx, my)):
            if click:
                last_s4(ra,point2)
        if button_6.collidepoint((mx, my)):
            if click:
                last_s4(ra,point2)
        if button_7.collidepoint((mx, my)):
            if click:
                last_s4(ra,point2)
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(series_words[ra],W,106,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO5, button_2)
        massage_to_screen(new_hide[rss1],W,106,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO5, button_3)
        massage_to_screen(new_hide[rss2],W,106,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO5, button_4)
        massage_to_screen(new_hide[rss3],W,106,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO5, button_5)
        massage_to_screen(new_hide[rss4],W,106,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen(new_hide[rss5],W,106,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(new_hide[rss6],W,106,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_s5(ran,ra,point3):
    global keydict
    rss1 = random.randrange(16)
    rss2 = random.randrange(16,32)
    rss3 = random.randrange(32,48)
    rss4 = random.randrange(48,64)
    rss5 = random.randrange(64,80)
    rss6 = random.randrange(80,99)

    p_co3 = ['blue','red','green','yellow','pink']

    hide_series.remove(series_words[ra])
    new_hide = hide_series

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point3[p_co3[ran]] += 10
                #print(point3)
                last_s5(ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                last_s5(ra,point3)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_s5(ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                last_s5(ra,point3)
        if button_5.collidepoint((mx, my)):
            if click:
                last_s5(ra,point3)
        if button_6.collidepoint((mx, my)):
            if click:
                last_s5(ra,point3)
        if button_7.collidepoint((mx, my)):
            if click:
                last_s5(ra,point3)
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(series_words[ra],W,106,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO5, button_2)
        massage_to_screen(new_hide[rss1],W,106,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO5, button_3)
        massage_to_screen(new_hide[rss2],W,106,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO5, button_4)
        massage_to_screen(new_hide[rss3],W,106,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO5, button_5)
        massage_to_screen(new_hide[rss4],W,106,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen(new_hide[rss5],W,106,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(new_hide[rss6],W,106,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_s6(ran,ra,point4):
    global keydict
    rss1 = random.randrange(16)
    rss2 = random.randrange(16,32)
    rss3 = random.randrange(32,48)
    rss4 = random.randrange(48,64)
    rss5 = random.randrange(64,80)
    rss6 = random.randrange(80,99)

    p_co4 = ['blue','red','green','yellow','pink','purple']

    hide_series.remove(series_words[ra])
    new_hide = hide_series

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point4[p_co4[ran]] += 10
                #print(point4)
                last_s6(ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                last_s6(ra,point4)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_s6(ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                last_s6(ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                last_s6(ra,point4)
        if button_6.collidepoint((mx, my)):
            if click:
                last_s6(ra,point4)
        if button_7.collidepoint((mx, my)):
            if click:
                last_s6(ra,point4)
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(series_words[ra],W,106,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO5, button_2)
        massage_to_screen(new_hide[rss1],W,106,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO5, button_3)
        massage_to_screen(new_hide[rss2],W,106,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO5, button_4)
        massage_to_screen(new_hide[rss3],W,106,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO5, button_5)
        massage_to_screen(new_hide[rss4],W,106,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen(new_hide[rss5],W,106,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(new_hide[rss6],W,106,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_s7(ran,ra,point5):
    global keydict
    rss1 = random.randrange(16)
    rss2 = random.randrange(16,32)
    rss3 = random.randrange(32,48)
    rss4 = random.randrange(48,64)
    rss5 = random.randrange(64,80)
    rss6 = random.randrange(80,99)

    p_co5 = ['blue','red','green','yellow','pink','purple','black']

    hide_series.remove(series_words[ra])
    new_hide = hide_series

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point5[p_co5[ran]] += 10
                #print(point5)
                last_s7(ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                last_s7(ra,point5)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_s7(ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                last_s7(ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                last_s7(ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                last_s7(ra,point5)
        if button_7.collidepoint((mx, my)):
            if click:
                last_s7(ra,point5)
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(series_words[ra],W,106,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO5, button_2)
        massage_to_screen(new_hide[rss1],W,106,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO5, button_3)
        massage_to_screen(new_hide[rss2],W,106,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO5, button_4)
        massage_to_screen(new_hide[rss3],W,106,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO5, button_5)
        massage_to_screen(new_hide[rss4],W,106,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen(new_hide[rss5],W,106,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(new_hide[rss6],W,106,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_s8(ran,ra,point6):
    global keydict
    rss1 = random.randrange(16)
    rss2 = random.randrange(16,32)
    rss3 = random.randrange(32,48)
    rss4 = random.randrange(48,64)
    rss5 = random.randrange(64,80)
    rss6 = random.randrange(80,99)

    p_co6 = ['blue','red','green','yellow','pink','purple','black','white']

    hide_series.remove(series_words[ra])
    new_hide = hide_series

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point6[p_co6[ran]] += 10
                #print(point6)
                last_s8(ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                last_s8(ra,point6)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_s8(ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                last_s8(ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                last_s8(ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                last_s8(ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                last_s8(ra,point6)
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(series_words[ra],W,106,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO5, button_2)
        massage_to_screen(new_hide[rss1],W,106,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO5, button_3)
        massage_to_screen(new_hide[rss2],W,106,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO5, button_4)
        massage_to_screen(new_hide[rss3],W,106,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO5, button_5)
        massage_to_screen(new_hide[rss4],W,106,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO5, button_6)
        massage_to_screen(new_hide[rss5],W,106,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO5, button_7)
        massage_to_screen(new_hide[rss6],W,106,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
################
# I
########################
##
def secrt_i3(ran,ra,point1):
    global keydict
    rsi1 = random.randrange(13)
    rsi2 = random.randrange(13,27)
    rsi3 = random.randrange(27,40)
    rsi4 = random.randrange(40,54)
    rsi5 = random.randrange(54,67)
    rsi6 = random.randrange(67,81)

    p_co1 = ['blue','red','green']

    hide_i.remove(i_words[ra])
    new_hide = hide_i

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point1[p_co1[ran]] += 10
                #print(point1)
                last_i3(ra,point1)
        if button_2.collidepoint((mx, my)):
            if click:
                last_i3(ra,point1)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_i3(ra,point1)
        if button_4.collidepoint((mx, my)):
            if click:
                last_i3(ra,point1)
        if button_5.collidepoint((mx, my)):
            if click:
                last_i3(ra,point1)
        if button_6.collidepoint((mx, my)):
            if click:
                last_i3(ra,point1)
        if button_7.collidepoint((mx, my)):
            if click:
                last_i3(ra,point1)
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(i_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO6, button_2)
        massage_to_screen(new_hide[rsi1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO6, button_3)
        massage_to_screen(new_hide[rsi2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO6, button_4)
        massage_to_screen(new_hide[rsi3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO6, button_5)
        massage_to_screen(new_hide[rsi4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen(new_hide[rsi5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(new_hide[rsi6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_i4(ran,ra,point2):
    global keydict
    rsi1 = random.randrange(13)
    rsi2 = random.randrange(13,27)
    rsi3 = random.randrange(27,40)
    rsi4 = random.randrange(40,54)
    rsi5 = random.randrange(54,67)
    rsi6 = random.randrange(67,81)

    p_co2 = ['blue','red','green','yellow']

    hide_i.remove(i_words[ra])
    new_hide = hide_i

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point2[p_co2[ran]] += 10
                #print(point2)
                last_i4(ra,point2)
        if button_2.collidepoint((mx, my)):
            if click:
                last_i4(ra,point2)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_i4(ra,point2)
        if button_4.collidepoint((mx, my)):
            if click:
                last_i4(ra,point2)
        if button_5.collidepoint((mx, my)):
            if click:
                last_i4(ra,point2)
        if button_6.collidepoint((mx, my)):
            if click:
                last_i4(ra,point2)
        if button_7.collidepoint((mx, my)):
            if click:
                last_i4(ra,point2)
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(i_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO6, button_2)
        massage_to_screen(new_hide[rsi1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO6, button_3)
        massage_to_screen(new_hide[rsi2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO6, button_4)
        massage_to_screen(new_hide[rsi3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO6, button_5)
        massage_to_screen(new_hide[rsi4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen(new_hide[rsi5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(new_hide[rsi6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_i5(ran,ra,point3):
    global keydict
    rsi1 = random.randrange(13)
    rsi2 = random.randrange(13,27)
    rsi3 = random.randrange(27,40)
    rsi4 = random.randrange(40,54)
    rsi5 = random.randrange(54,67)
    rsi6 = random.randrange(67,81)

    p_co3 = ['blue','red','green','yellow','pink']

    hide_i.remove(i_words[ra])
    new_hide = hide_i

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point3[p_co3[ran]] += 10
                #print(point3)
                last_i5(ra,point3)
        if button_2.collidepoint((mx, my)):
            if click:
                last_i5(ra,point3)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_i5(ra,point3)
        if button_4.collidepoint((mx, my)):
            if click:
                last_i5(ra,point3)
        if button_5.collidepoint((mx, my)):
            if click:
                last_i5(ra,point3)
        if button_6.collidepoint((mx, my)):
            if click:
                last_i5(ra,point3)
        if button_7.collidepoint((mx, my)):
            if click:
                last_i5(ra,point3)
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(i_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO6, button_2)
        massage_to_screen(new_hide[rsi1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO6, button_3)
        massage_to_screen(new_hide[rsi2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO6, button_4)
        massage_to_screen(new_hide[rsi3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO6, button_5)
        massage_to_screen(new_hide[rsi4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen(new_hide[rsi5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(new_hide[rsi6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_i6(ran,ra,point4):
    global keydict
    rsi1 = random.randrange(13)
    rsi2 = random.randrange(13,27)
    rsi3 = random.randrange(27,40)
    rsi4 = random.randrange(40,54)
    rsi5 = random.randrange(54,67)
    rsi6 = random.randrange(67,81)

    p_co4 = ['blue','red','green','yellow','pink','purple']

    hide_i.remove(i_words[ra])
    new_hide = hide_i

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point4[p_co4[ran]] += 10
                #print(point4)
                last_i6(ra,point4)
        if button_2.collidepoint((mx, my)):
            if click:
                last_i6(ra,point4)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_i6(ra,point4)
        if button_4.collidepoint((mx, my)):
            if click:
                last_i6(ra,point4)
        if button_5.collidepoint((mx, my)):
            if click:
                last_i6(ra,point4)
        if button_6.collidepoint((mx, my)):
            if click:
                last_i6(ra,point4)
        if button_7.collidepoint((mx, my)):
            if click:
                last_i6(ra,point4)
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(i_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO6, button_2)
        massage_to_screen(new_hide[rsi1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO6, button_3)
        massage_to_screen(new_hide[rsi2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO6, button_4)
        massage_to_screen(new_hide[rsi3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO6, button_5)
        massage_to_screen(new_hide[rsi4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen(new_hide[rsi5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(new_hide[rsi6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_i7(ran,ra,point5):
    global keydict
    rsi1 = random.randrange(13)
    rsi2 = random.randrange(13,27)
    rsi3 = random.randrange(27,40)
    rsi4 = random.randrange(40,54)
    rsi5 = random.randrange(54,67)
    rsi6 = random.randrange(67,81)

    p_co5 = ['blue','red','green','yellow','pink','purple','black']

    hide_i.remove(i_words[ra])
    new_hide = hide_i

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point5[p_co5[ran]] += 10
                #print(point5)
                last_i7(ra,point5)
        if button_2.collidepoint((mx, my)):
            if click:
                last_i7(ra,point5)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_i7(ra,point5)
        if button_4.collidepoint((mx, my)):
            if click:
                last_i7(ra,point5)
        if button_5.collidepoint((mx, my)):
            if click:
                last_i7(ra,point5)
        if button_6.collidepoint((mx, my)):
            if click:
                last_i7(ra,point5)
        if button_7.collidepoint((mx, my)):
            if click:
                last_i7(ra,point5)
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(i_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO6, button_2)
        massage_to_screen(new_hide[rsi1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO6, button_3)
        massage_to_screen(new_hide[rsi2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO6, button_4)
        massage_to_screen(new_hide[rsi3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO6, button_5)
        massage_to_screen(new_hide[rsi4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen(new_hide[rsi5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(new_hide[rsi6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
##
def secrt_i8(ran,ra,point6):
    global keydict
    rsi1 = random.randrange(13)
    rsi2 = random.randrange(13,27)
    rsi3 = random.randrange(27,40)
    rsi4 = random.randrange(40,54)
    rsi5 = random.randrange(54,67)
    rsi6 = random.randrange(67,81)

    p_co6 = ['blue','red','green','yellow','pink','purple','black','white']

    hide_i.remove(i_words[ra])
    new_hide = hide_i

    xy = [72,130,188,246,304,362,420]
    new_xy = []
    for i in range(7):
        value = random.choice(xy)
        new_xy.append(value)
        xy.remove(value)

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,465,22)
        massage_to_screen(word_it,W,85,15,35)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,new_xy[0],180,41)
        button_2 = pygame.Rect(60,new_xy[1],180,41)
        button_3 = pygame.Rect(60,new_xy[2],180,41)
        button_4 = pygame.Rect(60,new_xy[3],180,41)
        button_5 = pygame.Rect(60,new_xy[4],180,41)
        button_6 = pygame.Rect(60,new_xy[5],180,41)
        button_7 = pygame.Rect(60,new_xy[6],180,41)

        if button_1.collidepoint((mx, my)):
            if click:
                point6[p_co6[ran]] += 10
                #print(point6)
                last_i8(ra,point6)
        if button_2.collidepoint((mx, my)):
            if click:
                last_i8(ra,point6)  
        if button_3.collidepoint((mx, my)):
            if click:
                last_i8(ra,point6)
        if button_4.collidepoint((mx, my)):
            if click:
                last_i8(ra,point6)
        if button_5.collidepoint((mx, my)):
            if click:
                last_i8(ra,point6)
        if button_6.collidepoint((mx, my)):
            if click:
                last_i8(ra,point6)
        if button_7.collidepoint((mx, my)):
            if click:
                last_i8(ra,point6)
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(i_words[ra],W,110,new_xy[0]+5,25)
        pygame.draw.rect(screen, BO6, button_2)
        massage_to_screen(new_hide[rsi1],W,110,new_xy[1]+5,25)
        pygame.draw.rect(screen, BO6, button_3)
        massage_to_screen(new_hide[rsi2],W,110,new_xy[2]+5,25)
        pygame.draw.rect(screen, BO6, button_4)
        massage_to_screen(new_hide[rsi3],W,110,new_xy[3]+5,25)
        pygame.draw.rect(screen, BO6, button_5)
        massage_to_screen(new_hide[rsi4],W,110,new_xy[4]+5,25)
        pygame.draw.rect(screen, BO6, button_6)
        massage_to_screen(new_hide[rsi5],W,110,new_xy[5]+5,25)
        pygame.draw.rect(screen, BO6, button_7)
        massage_to_screen(new_hide[rsi6],W,110,new_xy[6]+5,25)
        
        pygame.display.update()
        mainClock.tick(60)
########################################################################

# الكلمة الصحيحة
########################################################################
reshaped_text = arabic_reshaper.reshape(u'الكلمة الصحيحة')
bidi_text = get_display(reshaped_text)
word_win = bidi_text
reshaped_text = arabic_reshaper.reshape(u'النتائج')
bidi_text = get_display(reshaped_text)
wowin = bidi_text

##########################

# Food
##########################
##
def last_f3(ra,point1):
    global keydict

    hide_food.insert(ra,food_words[ra])

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(food_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_f3(point1)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_f4(ra,point2):
    global keydict

    hide_food.insert(ra,food_words[ra])

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(food_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_f4(point2)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_f5(ra,point3):
    global keydict

    hide_food.insert(ra,food_words[ra])

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(food_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_f5(point3)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_f6(ra,point4):
    global keydict

    hide_food.insert(ra,food_words[ra])

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(food_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_f6(point4)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_f7(ra,point5):
    global keydict

    hide_food.insert(ra,food_words[ra])

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(food_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_f7(point5)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_f8(ra,point6):
    global keydict

    hide_food.insert(ra,food_words[ra])

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(food_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_f8(point6)
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##########################

# Game
##########################
##
def last_g3(ra,point1):
    global keydict

    hide_game.insert(ra,game_words[ra])

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(game_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_g3(point1)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_g4(ra,point2):
    global keydict

    hide_game.insert(ra,game_words[ra])

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(game_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_g4(point2)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_g5(ra,point3):
    global keydict

    hide_game.insert(ra,game_words[ra])

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(game_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_g5(point3)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_g6(ra,point4):
    global keydict

    hide_game.insert(ra,game_words[ra])

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(game_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_g6(point4)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_g7(ra,point5):
    global keydict

    hide_game.insert(ra,game_words[ra])

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(game_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_g7(point5)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_g8(ra,point6):
    global keydict

    hide_game.insert(ra,game_words[ra])

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(game_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_g8(point6)
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##########################

# Clothes
##########################
##
def last_c3(ra,point1):
    global keydict

    hide_clothes.insert(ra,clothes_words[ra])

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(clothes_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_c3(point1)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_c4(ra,point2):
    global keydict

    hide_clothes.insert(ra,clothes_words[ra])

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(clothes_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_c4(point2)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_c5(ra,point3):
    global keydict

    hide_clothes.insert(ra,clothes_words[ra])

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(clothes_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_c5(point3)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_c6(ra,point4):
    global keydict

    hide_clothes.insert(ra,clothes_words[ra])

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(clothes_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_c6(point4)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_c7(ra,point5):
    global keydict

    hide_clothes.insert(ra,clothes_words[ra])

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(clothes_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_c7(point5)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_c8(ra,point6):
    global keydict

    hide_clothes.insert(ra,clothes_words[ra])

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(clothes_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_c8(point6)
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##########################

# Anime
##########################
##
def last_a3(ra,point1):
    global keydict

    hide_anime.insert(ra,anime_words[ra])

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(word_win,B,60,30,35)
        massage_to_screen(anime_words[ra],B,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_a3(point1)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_a4(ra,point2):
    global keydict

    hide_anime.insert(ra,anime_words[ra])

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(word_win,B,60,30,35)
        massage_to_screen(anime_words[ra],B,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_a4(point2)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_a5(ra,point3):
    global keydict

    hide_anime.insert(ra,anime_words[ra])

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(word_win,B,60,30,35)
        massage_to_screen(anime_words[ra],B,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_a5(point3)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_a6(ra,point4):
    global keydict

    hide_anime.insert(ra,anime_words[ra])

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(word_win,B,60,30,35)
        massage_to_screen(anime_words[ra],B,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_a6(point4)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_a7(ra,point5):
    global keydict

    hide_anime.insert(ra,anime_words[ra])

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(word_win,B,60,30,35)
        massage_to_screen(anime_words[ra],B,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_a7(point5)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_a8(ra,point6):
    global keydict

    hide_anime.insert(ra,anime_words[ra])

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(word_win,B,60,30,35)
        massage_to_screen(anime_words[ra],B,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_a8(point6)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##########################
# Cartoon
##########################
##
def last_k3(ra,point1):
    global keydict

    hide_anime1.insert(ra,anime1_words[ra])

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(word_win,B,60,30,35)
        massage_to_screen(anime1_words[ra],B,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_k3(point1)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_k4(ra,point2):
    global keydict

    hide_anime1.insert(ra,anime1_words[ra])

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(word_win,B,60,30,35)
        massage_to_screen(anime1_words[ra],B,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_k4(point2)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_k5(ra,point3):
    global keydict

    hide_anime1.insert(ra,anime1_words[ra])

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(word_win,B,60,30,35)
        massage_to_screen(anime1_words[ra],B,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_k5(point3)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_k6(ra,point4):
    global keydict

    hide_anime1.insert(ra,anime1_words[ra])

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(word_win,B,60,30,35)
        massage_to_screen(anime1_words[ra],B,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_k6(point4)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_k7(ra,point5):
    global keydict

    hide_anime1.insert(ra,anime1_words[ra])

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(word_win,B,60,30,35)
        massage_to_screen(anime1_words[ra],B,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_k7(point5)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_k8(ra,point6):
    global keydict

    hide_anime1.insert(ra,anime1_words[ra])

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(word_win,B,60,30,35)
        massage_to_screen(anime1_words[ra],B,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_k8(point6)
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##########################

# Series
##########################
##
def last_s3(ra,point1):
    global keydict

    hide_series.insert(ra,series_words[ra])

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(series_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_s3(point1)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_s4(ra,point2):
    global keydict

    hide_series.insert(ra,series_words[ra])

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(series_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_s4(point2)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_s5(ra,point3):
    global keydict

    hide_series.insert(ra,series_words[ra])

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(series_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_s5(point3)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_s6(ra,point4):
    global keydict

    hide_series.insert(ra,series_words[ra])

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(series_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_s6(point4)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_s7(ra,point5):
    global keydict

    hide_series.insert(ra,series_words[ra])

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(series_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_s7(point5)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_s8(ra,point6):
    global keydict

    hide_series.insert(ra,series_words[ra])

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(series_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_s8(point6)
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##########################

# I
##########################
##
def last_i3(ra,point1):
    global keydict

    hide_i.insert(ra,i_words[ra])

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(i_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_i3(point1)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_i4(ra,point2):
    global keydict

    hide_i.insert(ra,i_words[ra])

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(i_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_i4(point2)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_i5(ra,point3):
    global keydict

    hide_i.insert(ra,i_words[ra])

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(i_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_i5(point3)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_i6(ra,point4):
    global keydict

    hide_i.insert(ra,i_words[ra])

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(i_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_i6(point4)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_i7(ra,point5):
    global keydict

    hide_i.insert(ra,i_words[ra])

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(i_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_i7(point5)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def last_i8(ra,point6):
    global keydict

    hide_i.insert(ra,i_words[ra])

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(word_win,W,60,30,35)
        massage_to_screen(i_words[ra],W,105,160,30)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                rec_i8(point6)
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(wowin,W,120,407,30)
        
        pygame.display.update()
        mainClock.tick(60)
########################################################################

# تسجيل النقاط
########################################################################
reshaped_text = arabic_reshaper.reshape(u'النقاط')
bidi_text = get_display(reshaped_text)
win = bidi_text
reshaped_text = arabic_reshaper.reshape(u'جولة آخرى')
bidi_text = get_display(reshaped_text)
wis = bidi_text
#####################

# Food
#####################
##
def rec_f3(point1):
    global keydict
    jb = point1['blue']
    jr = point1['red']
    jg = point1['green']

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_1[0],W,200,160,25)
        massage_to_screen(color_1[1],W,200,210,25)
        massage_to_screen(color_1[2],W,195,260,25)
        massage_to_screen(str(jb),W,120,160,25)
        massage_to_screen(str(jr),W,120,210,25)
        massage_to_screen(str(jg),W,120,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                food_p3()
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_f4(point2):
    global keydict
    jb = point2['blue']
    jr = point2['red']
    jg = point2['green']
    jy = point2['yellow']

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_2[0],W,200,160,25)
        massage_to_screen(color_2[1],W,200,210,25)
        massage_to_screen(color_2[2],W,195,260,25)
        massage_to_screen(color_2[3],W,195,310,25)
        massage_to_screen(str(jb),W,120,160,25)
        massage_to_screen(str(jr),W,120,210,25)
        massage_to_screen(str(jg),W,120,260,25)
        massage_to_screen(str(jy),W,120,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                food_p4()
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_f5(point3):
    global keydict
    jb = point3['blue']
    jr = point3['red']
    jg = point3['green']
    jy = point3['yellow']
    jp = point3['pink']

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_3[0],W,210,160,25)
        massage_to_screen(color_3[1],W,210,210,25)
        massage_to_screen(color_3[2],W,210,260,25)
        massage_to_screen(color_3[3],W,210,310,25)
        massage_to_screen(color_3[4],W,80,160,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                food_p5()
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_f6(point4):
    global keydict
    jb = point4['blue']
    jr = point4['red']
    jg = point4['green']
    jy = point4['yellow']
    jp = point4['pink']
    ju = point4['purple']

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_4[0],W,210,160,25)
        massage_to_screen(color_4[1],W,210,210,25)
        massage_to_screen(color_4[2],W,210,260,25)
        massage_to_screen(color_4[3],W,210,310,25)
        massage_to_screen(color_4[4],W,80,160,25)
        massage_to_screen(color_4[5],W,75,210,22)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                food_p6()
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_f7(point5):
    global keydict
    jb = point5['blue']
    jr = point5['red']
    jg = point5['green']
    jy = point5['yellow']
    jp = point5['pink']
    ju = point5['purple']
    jc = point5['black']

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_5[0],W,210,160,25)
        massage_to_screen(color_5[1],W,210,210,25)
        massage_to_screen(color_5[2],W,210,260,25)
        massage_to_screen(color_5[3],W,210,310,25)
        massage_to_screen(color_5[4],W,80,160,25)
        massage_to_screen(color_5[5],W,75,210,22)
        massage_to_screen(color_5[6],W,80,260,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)
        massage_to_screen(str(jc),W,30,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                food_p7()
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_f8(point6):
    global keydict
    jb = point6['blue']
    jr = point6['red']
    jg = point6['green']
    jy = point6['yellow']
    jp = point6['pink']
    ju = point6['purple']
    jc = point6['black']
    jw = point6['white']

    running = True
    while running:
        screen.fill(BG1)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_6[0],W,210,160,25)
        massage_to_screen(color_6[1],W,210,210,25)
        massage_to_screen(color_6[2],W,210,260,25)
        massage_to_screen(color_6[3],W,210,310,25)
        massage_to_screen(color_6[4],W,80,160,25)
        massage_to_screen(color_6[5],W,75,210,22)
        massage_to_screen(color_6[6],W,80,260,25)
        massage_to_screen(color_6[7],W,80,310,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)
        massage_to_screen(str(jc),W,30,260,25)
        massage_to_screen(str(jw),W,30,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                food_p8()
                
        pygame.draw.rect(screen, BO1, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
#####################

# Game
#####################
##
def rec_g3(point1):
    global keydict
    jb = point1['blue']
    jr = point1['red']
    jg = point1['green']

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_1[0],W,200,160,25)
        massage_to_screen(color_1[1],W,200,210,25)
        massage_to_screen(color_1[2],W,195,260,25)
        massage_to_screen(str(jb),W,120,160,25)
        massage_to_screen(str(jr),W,120,210,25)
        massage_to_screen(str(jg),W,120,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                game_p3()
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_g4(point2):
    global keydict
    jb = point2['blue']
    jr = point2['red']
    jg = point2['green']
    jy = point2['yellow']

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_2[0],W,200,160,25)
        massage_to_screen(color_2[1],W,200,210,25)
        massage_to_screen(color_2[2],W,195,260,25)
        massage_to_screen(color_2[3],W,195,310,25)
        massage_to_screen(str(jb),W,120,160,25)
        massage_to_screen(str(jr),W,120,210,25)
        massage_to_screen(str(jg),W,120,260,25)
        massage_to_screen(str(jy),W,120,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                game_p4()
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_g5(point3):
    global keydict
    jb = point3['blue']
    jr = point3['red']
    jg = point3['green']
    jy = point3['yellow']
    jp = point3['pink']

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_3[0],W,210,160,25)
        massage_to_screen(color_3[1],W,210,210,25)
        massage_to_screen(color_3[2],W,210,260,25)
        massage_to_screen(color_3[3],W,210,310,25)
        massage_to_screen(color_3[4],W,80,160,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                game_p5()
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_g6(point4):
    global keydict
    jb = point4['blue']
    jr = point4['red']
    jg = point4['green']
    jy = point4['yellow']
    jp = point4['pink']
    ju = point4['purple']

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_4[0],W,210,160,25)
        massage_to_screen(color_4[1],W,210,210,25)
        massage_to_screen(color_4[2],W,210,260,25)
        massage_to_screen(color_4[3],W,210,310,25)
        massage_to_screen(color_4[4],W,80,160,25)
        massage_to_screen(color_4[5],W,75,210,22)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                game_p6()
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_g7(point5):
    global keydict
    jb = point5['blue']
    jr = point5['red']
    jg = point5['green']
    jy = point5['yellow']
    jp = point5['pink']
    ju = point5['purple']
    jc = point5['black']

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_5[0],W,210,160,25)
        massage_to_screen(color_5[1],W,210,210,25)
        massage_to_screen(color_5[2],W,210,260,25)
        massage_to_screen(color_5[3],W,210,310,25)
        massage_to_screen(color_5[4],W,80,160,25)
        massage_to_screen(color_5[5],W,75,210,22)
        massage_to_screen(color_5[6],W,80,260,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)
        massage_to_screen(str(jc),W,30,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                game_p7()
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_g8(point6):
    global keydict
    jb = point6['blue']
    jr = point6['red']
    jg = point6['green']
    jy = point6['yellow']
    jp = point6['pink']
    ju = point6['purple']
    jc = point6['black']
    jw = point6['white']

    running = True
    while running:
        screen.fill(BG2)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_6[0],W,210,160,25)
        massage_to_screen(color_6[1],W,210,210,25)
        massage_to_screen(color_6[2],W,210,260,25)
        massage_to_screen(color_6[3],W,210,310,25)
        massage_to_screen(color_6[4],W,80,160,25)
        massage_to_screen(color_6[5],W,75,210,22)
        massage_to_screen(color_6[6],W,80,260,25)
        massage_to_screen(color_6[7],W,80,310,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)
        massage_to_screen(str(jc),W,30,260,25)
        massage_to_screen(str(jw),W,30,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                game_p8()
                
        pygame.draw.rect(screen, BO2, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
#####################

# Clothes
#####################
##
def rec_c3(point1):
    global keydict
    jb = point1['blue']
    jr = point1['red']
    jg = point1['green']

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_1[0],W,200,160,25)
        massage_to_screen(color_1[1],W,200,210,25)
        massage_to_screen(color_1[2],W,195,260,25)
        massage_to_screen(str(jb),W,120,160,25)
        massage_to_screen(str(jr),W,120,210,25)
        massage_to_screen(str(jg),W,120,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                clothes_p3()
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_c4(point2):
    global keydict
    jb = point2['blue']
    jr = point2['red']
    jg = point2['green']
    jy = point2['yellow']

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_2[0],W,200,160,25)
        massage_to_screen(color_2[1],W,200,210,25)
        massage_to_screen(color_2[2],W,195,260,25)
        massage_to_screen(color_2[3],W,195,310,25)
        massage_to_screen(str(jb),W,120,160,25)
        massage_to_screen(str(jr),W,120,210,25)
        massage_to_screen(str(jg),W,120,260,25)
        massage_to_screen(str(jy),W,120,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                clothes_p4()
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_c5(point3):
    global keydict
    jb = point3['blue']
    jr = point3['red']
    jg = point3['green']
    jy = point3['yellow']
    jp = point3['pink']

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_3[0],W,210,160,25)
        massage_to_screen(color_3[1],W,210,210,25)
        massage_to_screen(color_3[2],W,210,260,25)
        massage_to_screen(color_3[3],W,210,310,25)
        massage_to_screen(color_3[4],W,80,160,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                clothes_p5()
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_c6(point4):
    global keydict
    jb = point4['blue']
    jr = point4['red']
    jg = point4['green']
    jy = point4['yellow']
    jp = point4['pink']
    ju = point4['purple']

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_4[0],W,210,160,25)
        massage_to_screen(color_4[1],W,210,210,25)
        massage_to_screen(color_4[2],W,210,260,25)
        massage_to_screen(color_4[3],W,210,310,25)
        massage_to_screen(color_4[4],W,80,160,25)
        massage_to_screen(color_4[5],W,75,210,22)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                clothes_p6()
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_c7(point5):
    global keydict
    jb = point5['blue']
    jr = point5['red']
    jg = point5['green']
    jy = point5['yellow']
    jp = point5['pink']
    ju = point5['purple']
    jc = point5['black']

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_5[0],W,210,160,25)
        massage_to_screen(color_5[1],W,210,210,25)
        massage_to_screen(color_5[2],W,210,260,25)
        massage_to_screen(color_5[3],W,210,310,25)
        massage_to_screen(color_5[4],W,80,160,25)
        massage_to_screen(color_5[5],W,75,210,22)
        massage_to_screen(color_5[6],W,80,260,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)
        massage_to_screen(str(jc),W,30,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                clothes_p7()
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_c8(point6):
    global keydict
    jb = point6['blue']
    jr = point6['red']
    jg = point6['green']
    jy = point6['yellow']
    jp = point6['pink']
    ju = point6['purple']
    jc = point6['black']
    jw = point6['white']

    running = True
    while running:
        screen.fill(BG3)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_6[0],W,210,160,25)
        massage_to_screen(color_6[1],W,210,210,25)
        massage_to_screen(color_6[2],W,210,260,25)
        massage_to_screen(color_6[3],W,210,310,25)
        massage_to_screen(color_6[4],W,80,160,25)
        massage_to_screen(color_6[5],W,75,210,22)
        massage_to_screen(color_6[6],W,80,260,25)
        massage_to_screen(color_6[7],W,80,310,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)
        massage_to_screen(str(jc),W,30,260,25)
        massage_to_screen(str(jw),W,30,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                clothes_p8()
                
        pygame.draw.rect(screen, BO3, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
#####################

# Anime
#####################
##
def rec_a3(point1):
    global keydict
    jb = point1['blue']
    jr = point1['red']
    jg = point1['green']

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(win,B,120,40,35)

        massage_to_screen(color_1[0],B,200,160,25)
        massage_to_screen(color_1[1],B,200,210,25)
        massage_to_screen(color_1[2],B,195,260,25)
        massage_to_screen(str(jb),B,120,160,25)
        massage_to_screen(str(jr),B,120,210,25)
        massage_to_screen(str(jg),B,120,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                anime_p3()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_a4(point2):
    global keydict
    jb = point2['blue']
    jr = point2['red']
    jg = point2['green']
    jy = point2['yellow']

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(win,B,120,40,35)

        massage_to_screen(color_2[0],B,200,160,25)
        massage_to_screen(color_2[1],B,200,210,25)
        massage_to_screen(color_2[2],B,195,260,25)
        massage_to_screen(color_2[3],B,195,310,25)
        massage_to_screen(str(jb),B,120,160,25)
        massage_to_screen(str(jr),B,120,210,25)
        massage_to_screen(str(jg),B,120,260,25)
        massage_to_screen(str(jy),B,120,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                anime_p4()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_a5(point3):
    global keydict
    jb = point3['blue']
    jr = point3['red']
    jg = point3['green']
    jy = point3['yellow']
    jp = point3['pink']

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(win,B,120,40,35)

        massage_to_screen(color_3[0],B,210,160,25)
        massage_to_screen(color_3[1],B,210,210,25)
        massage_to_screen(color_3[2],B,210,260,25)
        massage_to_screen(color_3[3],B,210,310,25)
        massage_to_screen(color_3[4],B,80,160,25)
        massage_to_screen(str(jb),B,160,160,25)
        massage_to_screen(str(jr),B,160,210,25)
        massage_to_screen(str(jg),B,160,260,25)
        massage_to_screen(str(jy),B,160,310,25)
        massage_to_screen(str(jp),B,30,160,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                anime_p5()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_a6(point4):
    global keydict
    jb = point4['blue']
    jr = point4['red']
    jg = point4['green']
    jy = point4['yellow']
    jp = point4['pink']
    ju = point4['purple']

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(win,B,120,40,35)

        massage_to_screen(color_4[0],B,210,160,25)
        massage_to_screen(color_4[1],B,210,210,25)
        massage_to_screen(color_4[2],B,210,260,25)
        massage_to_screen(color_4[3],B,210,310,25)
        massage_to_screen(color_4[4],B,80,160,25)
        massage_to_screen(color_4[5],B,75,210,22)
        massage_to_screen(str(jb),B,160,160,25)
        massage_to_screen(str(jr),B,160,210,25)
        massage_to_screen(str(jg),B,160,260,25)
        massage_to_screen(str(jy),B,160,310,25)
        massage_to_screen(str(jp),B,30,160,25)
        massage_to_screen(str(ju),B,30,210,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                anime_p6()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_a7(point5):
    global keydict
    jb = point5['blue']
    jr = point5['red']
    jg = point5['green']
    jy = point5['yellow']
    jp = point5['pink']
    ju = point5['purple']
    jc = point5['black']

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(win,B,120,40,35)

        massage_to_screen(color_5[0],B,210,160,25)
        massage_to_screen(color_5[1],B,210,210,25)
        massage_to_screen(color_5[2],B,210,260,25)
        massage_to_screen(color_5[3],B,210,310,25)
        massage_to_screen(color_5[4],B,80,160,25)
        massage_to_screen(color_5[5],B,75,210,22)
        massage_to_screen(color_5[6],B,80,260,25)
        massage_to_screen(str(jb),B,160,160,25)
        massage_to_screen(str(jr),B,160,210,25)
        massage_to_screen(str(jg),B,160,260,25)
        massage_to_screen(str(jy),B,160,310,25)
        massage_to_screen(str(jp),B,30,160,25)
        massage_to_screen(str(ju),B,30,210,25)
        massage_to_screen(str(jc),B,30,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                anime_p7()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_a8(point6):
    global keydict
    jb = point6['blue']
    jr = point6['red']
    jg = point6['green']
    jy = point6['yellow']
    jp = point6['pink']
    ju = point6['purple']
    jc = point6['black']
    jw = point6['white']

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(win,B,120,40,35)

        massage_to_screen(color_6[0],B,210,160,25)
        massage_to_screen(color_6[1],B,210,210,25)
        massage_to_screen(color_6[2],B,210,260,25)
        massage_to_screen(color_6[3],B,210,310,25)
        massage_to_screen(color_6[4],B,80,160,25)
        massage_to_screen(color_6[5],B,75,210,22)
        massage_to_screen(color_6[6],B,80,260,25)
        massage_to_screen(color_6[7],B,80,310,25)
        massage_to_screen(str(jb),B,160,160,25)
        massage_to_screen(str(jr),B,160,210,25)
        massage_to_screen(str(jg),B,160,260,25)
        massage_to_screen(str(jy),B,160,310,25)
        massage_to_screen(str(jp),B,30,160,25)
        massage_to_screen(str(ju),B,30,210,25)
        massage_to_screen(str(jc),B,30,260,25)
        massage_to_screen(str(jw),B,30,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                anime_p8()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
#####################
# Cartoon
#####################
##
def rec_k3(point1):
    global keydict
    jb = point1['blue']
    jr = point1['red']
    jg = point1['green']

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(win,B,120,40,35)

        massage_to_screen(color_1[0],B,200,160,25)
        massage_to_screen(color_1[1],B,200,210,25)
        massage_to_screen(color_1[2],B,195,260,25)
        massage_to_screen(str(jb),B,120,160,25)
        massage_to_screen(str(jr),B,120,210,25)
        massage_to_screen(str(jg),B,120,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                anime1_p3()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_k4(point2):
    global keydict
    jb = point2['blue']
    jr = point2['red']
    jg = point2['green']
    jy = point2['yellow']

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(win,B,120,40,35)

        massage_to_screen(color_2[0],B,200,160,25)
        massage_to_screen(color_2[1],B,200,210,25)
        massage_to_screen(color_2[2],B,195,260,25)
        massage_to_screen(color_2[3],B,195,310,25)
        massage_to_screen(str(jb),B,120,160,25)
        massage_to_screen(str(jr),B,120,210,25)
        massage_to_screen(str(jg),B,120,260,25)
        massage_to_screen(str(jy),B,120,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                anime1_p4()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_k5(point3):
    global keydict
    jb = point3['blue']
    jr = point3['red']
    jg = point3['green']
    jy = point3['yellow']
    jp = point3['pink']

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(win,B,120,40,35)

        massage_to_screen(color_3[0],B,210,160,25)
        massage_to_screen(color_3[1],B,210,210,25)
        massage_to_screen(color_3[2],B,210,260,25)
        massage_to_screen(color_3[3],B,210,310,25)
        massage_to_screen(color_3[4],B,80,160,25)
        massage_to_screen(str(jb),B,160,160,25)
        massage_to_screen(str(jr),B,160,210,25)
        massage_to_screen(str(jg),B,160,260,25)
        massage_to_screen(str(jy),B,160,310,25)
        massage_to_screen(str(jp),B,30,160,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                anime1_p5()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_k6(point4):
    global keydict
    jb = point4['blue']
    jr = point4['red']
    jg = point4['green']
    jy = point4['yellow']
    jp = point4['pink']
    ju = point4['purple']

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(win,B,120,40,35)

        massage_to_screen(color_4[0],B,210,160,25)
        massage_to_screen(color_4[1],B,210,210,25)
        massage_to_screen(color_4[2],B,210,260,25)
        massage_to_screen(color_4[3],B,210,310,25)
        massage_to_screen(color_4[4],B,80,160,25)
        massage_to_screen(color_4[5],B,75,210,22)
        massage_to_screen(str(jb),B,160,160,25)
        massage_to_screen(str(jr),B,160,210,25)
        massage_to_screen(str(jg),B,160,260,25)
        massage_to_screen(str(jy),B,160,310,25)
        massage_to_screen(str(jp),B,30,160,25)
        massage_to_screen(str(ju),B,30,210,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                anime1_p6()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_k7(point5):
    global keydict
    jb = point5['blue']
    jr = point5['red']
    jg = point5['green']
    jy = point5['yellow']
    jp = point5['pink']
    ju = point5['purple']
    jc = point5['black']

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(win,B,120,40,35)

        massage_to_screen(color_5[0],B,210,160,25)
        massage_to_screen(color_5[1],B,210,210,25)
        massage_to_screen(color_5[2],B,210,260,25)
        massage_to_screen(color_5[3],B,210,310,25)
        massage_to_screen(color_5[4],B,80,160,25)
        massage_to_screen(color_5[5],B,75,210,22)
        massage_to_screen(color_5[6],B,80,260,25)
        massage_to_screen(str(jb),B,160,160,25)
        massage_to_screen(str(jr),B,160,210,25)
        massage_to_screen(str(jg),B,160,260,25)
        massage_to_screen(str(jy),B,160,310,25)
        massage_to_screen(str(jp),B,30,160,25)
        massage_to_screen(str(ju),B,30,210,25)
        massage_to_screen(str(jc),B,30,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                anime1_p7()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_k8(point6):
    global keydict
    jb = point6['blue']
    jr = point6['red']
    jg = point6['green']
    jy = point6['yellow']
    jp = point6['pink']
    ju = point6['purple']
    jc = point6['black']
    jw = point6['white']

    running = True
    while running:
        screen.fill(BG4)

        massage_to_screen(esc,B,38,460,22)
        massage_to_screen(win,B,120,40,35)

        massage_to_screen(color_6[0],B,210,160,25)
        massage_to_screen(color_6[1],B,210,210,25)
        massage_to_screen(color_6[2],B,210,260,25)
        massage_to_screen(color_6[3],B,210,310,25)
        massage_to_screen(color_6[4],B,80,160,25)
        massage_to_screen(color_6[5],B,75,210,22)
        massage_to_screen(color_6[6],B,80,260,25)
        massage_to_screen(color_6[7],B,80,310,25)
        massage_to_screen(str(jb),B,160,160,25)
        massage_to_screen(str(jr),B,160,210,25)
        massage_to_screen(str(jg),B,160,260,25)
        massage_to_screen(str(jy),B,160,310,25)
        massage_to_screen(str(jp),B,30,160,25)
        massage_to_screen(str(ju),B,30,210,25)
        massage_to_screen(str(jc),B,30,260,25)
        massage_to_screen(str(jw),B,30,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                anime1_p8()
                
        pygame.draw.rect(screen, BO4, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
#####################

# Series
#####################
##
def rec_s3(point1):
    global keydict
    jb = point1['blue']
    jr = point1['red']
    jg = point1['green']

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_1[0],W,200,160,25)
        massage_to_screen(color_1[1],W,200,210,25)
        massage_to_screen(color_1[2],W,195,260,25)
        massage_to_screen(str(jb),W,120,160,25)
        massage_to_screen(str(jr),W,120,210,25)
        massage_to_screen(str(jg),W,120,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                series_p3()
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_s4(point2):
    global keydict
    jb = point2['blue']
    jr = point2['red']
    jg = point2['green']
    jy = point2['yellow']

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_2[0],W,200,160,25)
        massage_to_screen(color_2[1],W,200,210,25)
        massage_to_screen(color_2[2],W,195,260,25)
        massage_to_screen(color_2[3],W,195,310,25)
        massage_to_screen(str(jb),W,120,160,25)
        massage_to_screen(str(jr),W,120,210,25)
        massage_to_screen(str(jg),W,120,260,25)
        massage_to_screen(str(jy),W,120,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                series_p4()
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_s5(point3):
    global keydict
    jb = point3['blue']
    jr = point3['red']
    jg = point3['green']
    jy = point3['yellow']
    jp = point3['pink']

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_3[0],W,210,160,25)
        massage_to_screen(color_3[1],W,210,210,25)
        massage_to_screen(color_3[2],W,210,260,25)
        massage_to_screen(color_3[3],W,210,310,25)
        massage_to_screen(color_3[4],W,80,160,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                series_p5()
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_s6(point4):
    global keydict
    jb = point4['blue']
    jr = point4['red']
    jg = point4['green']
    jy = point4['yellow']
    jp = point4['pink']
    ju = point4['purple']

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_4[0],W,210,160,25)
        massage_to_screen(color_4[1],W,210,210,25)
        massage_to_screen(color_4[2],W,210,260,25)
        massage_to_screen(color_4[3],W,210,310,25)
        massage_to_screen(color_4[4],W,80,160,25)
        massage_to_screen(color_4[5],W,75,210,22)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                series_p6()
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_s7(point5):
    global keydict
    jb = point5['blue']
    jr = point5['red']
    jg = point5['green']
    jy = point5['yellow']
    jp = point5['pink']
    ju = point5['purple']
    jc = point5['black']

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_5[0],W,210,160,25)
        massage_to_screen(color_5[1],W,210,210,25)
        massage_to_screen(color_5[2],W,210,260,25)
        massage_to_screen(color_5[3],W,210,310,25)
        massage_to_screen(color_5[4],W,80,160,25)
        massage_to_screen(color_5[5],W,75,210,22)
        massage_to_screen(color_5[6],W,80,260,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)
        massage_to_screen(str(jc),W,30,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                series_p7()
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_s8(point6):
    global keydict
    jb = point6['blue']
    jr = point6['red']
    jg = point6['green']
    jy = point6['yellow']
    jp = point6['pink']
    ju = point6['purple']
    jc = point6['black']
    jw = point6['white']

    running = True
    while running:
        screen.fill(BG5)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_6[0],W,210,160,25)
        massage_to_screen(color_6[1],W,210,210,25)
        massage_to_screen(color_6[2],W,210,260,25)
        massage_to_screen(color_6[3],W,210,310,25)
        massage_to_screen(color_6[4],W,80,160,25)
        massage_to_screen(color_6[5],W,75,210,22)
        massage_to_screen(color_6[6],W,80,260,25)
        massage_to_screen(color_6[7],W,80,310,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)
        massage_to_screen(str(jc),W,30,260,25)
        massage_to_screen(str(jw),W,30,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                series_p8()
                
        pygame.draw.rect(screen, BO5, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
#####################

# I
#####################
##
def rec_i3(point1):
    global keydict
    jb = point1['blue']
    jr = point1['red']
    jg = point1['green']

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_1[0],W,200,160,25)
        massage_to_screen(color_1[1],W,200,210,25)
        massage_to_screen(color_1[2],W,195,260,25)
        massage_to_screen(str(jb),W,120,160,25)
        massage_to_screen(str(jr),W,120,210,25)
        massage_to_screen(str(jg),W,120,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                i_p3()
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_i4(point2):
    global keydict
    jb = point2['blue']
    jr = point2['red']
    jg = point2['green']
    jy = point2['yellow']

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_2[0],W,200,160,25)
        massage_to_screen(color_2[1],W,200,210,25)
        massage_to_screen(color_2[2],W,195,260,25)
        massage_to_screen(color_2[3],W,195,310,25)
        massage_to_screen(str(jb),W,120,160,25)
        massage_to_screen(str(jr),W,120,210,25)
        massage_to_screen(str(jg),W,120,260,25)
        massage_to_screen(str(jy),W,120,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                i_p4()
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_i5(point3):
    global keydict
    jb = point3['blue']
    jr = point3['red']
    jg = point3['green']
    jy = point3['yellow']
    jp = point3['pink']

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_3[0],W,210,160,25)
        massage_to_screen(color_3[1],W,210,210,25)
        massage_to_screen(color_3[2],W,210,260,25)
        massage_to_screen(color_3[3],W,210,310,25)
        massage_to_screen(color_3[4],W,80,160,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                i_p5()
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_i6(point4):
    global keydict
    jb = point4['blue']
    jr = point4['red']
    jg = point4['green']
    jy = point4['yellow']
    jp = point4['pink']
    ju = point4['purple']

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_4[0],W,210,160,25)
        massage_to_screen(color_4[1],W,210,210,25)
        massage_to_screen(color_4[2],W,210,260,25)
        massage_to_screen(color_4[3],W,210,310,25)
        massage_to_screen(color_4[4],W,80,160,25)
        massage_to_screen(color_4[5],W,75,210,22)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                i_p6()
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_i7(point5):
    global keydict
    jb = point5['blue']
    jr = point5['red']
    jg = point5['green']
    jy = point5['yellow']
    jp = point5['pink']
    ju = point5['purple']
    jc = point5['black']

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_5[0],W,210,160,25)
        massage_to_screen(color_5[1],W,210,210,25)
        massage_to_screen(color_5[2],W,210,260,25)
        massage_to_screen(color_5[3],W,210,310,25)
        massage_to_screen(color_5[4],W,80,160,25)
        massage_to_screen(color_5[5],W,75,210,22)
        massage_to_screen(color_5[6],W,80,260,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)
        massage_to_screen(str(jc),W,30,260,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                i_p7()
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
##
def rec_i8(point6):
    global keydict
    jb = point6['blue']
    jr = point6['red']
    jg = point6['green']
    jy = point6['yellow']
    jp = point6['pink']
    ju = point6['purple']
    jc = point6['black']
    jw = point6['white']

    running = True
    while running:
        screen.fill(BG6)

        massage_to_screen(esc,W,38,460,22)
        massage_to_screen(win,W,120,40,35)

        massage_to_screen(color_6[0],W,210,160,25)
        massage_to_screen(color_6[1],W,210,210,25)
        massage_to_screen(color_6[2],W,210,260,25)
        massage_to_screen(color_6[3],W,210,310,25)
        massage_to_screen(color_6[4],W,80,160,25)
        massage_to_screen(color_6[5],W,75,210,22)
        massage_to_screen(color_6[6],W,80,260,25)
        massage_to_screen(color_6[7],W,80,310,25)
        massage_to_screen(str(jb),W,160,160,25)
        massage_to_screen(str(jr),W,160,210,25)
        massage_to_screen(str(jg),W,160,260,25)
        massage_to_screen(str(jy),W,160,310,25)
        massage_to_screen(str(jp),W,30,160,25)
        massage_to_screen(str(ju),W,30,210,25)
        massage_to_screen(str(jc),W,30,260,25)
        massage_to_screen(str(jw),W,30,310,25)

        click = False
        for event in pygame.event.get():

            # Exit
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    start()

            if event.type == MOUSEBUTTONDOWN:
                if event.button == 1:
                    click = True

        mx, my = pygame.mouse.get_pos()

        button_1 = pygame.Rect(60,400,180,50)

        if button_1.collidepoint((mx, my)):
            if click:
                running = False
                i_p8()
                
        pygame.draw.rect(screen, BO6, button_1)
        massage_to_screen(wis,W,95,409,30)
        
        pygame.display.update()
        mainClock.tick(60)
########################################################################        
main_menu()
